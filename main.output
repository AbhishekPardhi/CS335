Terminals unused in grammar

    YIELD
    IMPLEMENTS
    PERMITS
    RECORD
    ENUM
    INTERFACE
    SEALED
    NON_SEALED
    DEFAULT
    OPEN
    TRANSITIVE
    MODULE
    REQUIRES
    EXPORTS
    OPENS
    USES
    PROVIDES
    WITH
    IMPORT
    ASTERISK
    PACKAGE
    TO


Rules useless in parser due to conflicts

  117 expression_opt: ε

  154 lambda_parameter_list_opt: ε

  406 element_value_pairs_list_opt: ε


State 25 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 58 conflicts: 13 shift/reduce, 1 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 66 conflicts: 8 reduce/reduce
State 67 conflicts: 8 reduce/reduce
State 70 conflicts: 7 reduce/reduce
State 72 conflicts: 10 shift/reduce, 9 reduce/reduce
State 73 conflicts: 8 reduce/reduce
State 74 conflicts: 7 reduce/reduce
State 92 conflicts: 8 reduce/reduce
State 93 conflicts: 1 shift/reduce, 21 reduce/reduce
State 94 conflicts: 6 reduce/reduce
State 96 conflicts: 12 shift/reduce
State 97 conflicts: 1 shift/reduce, 2 reduce/reduce
State 98 conflicts: 12 shift/reduce
State 99 conflicts: 12 shift/reduce
State 100 conflicts: 12 shift/reduce
State 101 conflicts: 12 shift/reduce
State 102 conflicts: 12 shift/reduce
State 113 conflicts: 12 shift/reduce
State 114 conflicts: 13 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 163 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce, 2 reduce/reduce
State 178 conflicts: 12 shift/reduce
State 185 conflicts: 1 shift/reduce, 2 reduce/reduce
State 186 conflicts: 1 shift/reduce, 1 reduce/reduce
State 189 conflicts: 10 shift/reduce, 9 reduce/reduce
State 210 conflicts: 12 shift/reduce
State 216 conflicts: 13 shift/reduce
State 222 conflicts: 1 reduce/reduce
State 223 conflicts: 1 reduce/reduce
State 248 conflicts: 12 shift/reduce, 9 reduce/reduce
State 249 conflicts: 2 reduce/reduce
State 256 conflicts: 13 shift/reduce
State 257 conflicts: 2 reduce/reduce
State 275 conflicts: 1 shift/reduce
State 277 conflicts: 12 shift/reduce
State 280 conflicts: 12 shift/reduce, 1 reduce/reduce
State 281 conflicts: 12 shift/reduce
State 282 conflicts: 12 shift/reduce
State 283 conflicts: 12 shift/reduce
State 284 conflicts: 12 shift/reduce
State 285 conflicts: 12 shift/reduce
State 286 conflicts: 12 shift/reduce
State 287 conflicts: 12 shift/reduce
State 288 conflicts: 12 shift/reduce
State 289 conflicts: 12 shift/reduce
State 290 conflicts: 12 shift/reduce
State 291 conflicts: 12 shift/reduce
State 292 conflicts: 12 shift/reduce
State 293 conflicts: 1 shift/reduce
State 294 conflicts: 12 shift/reduce
State 295 conflicts: 12 shift/reduce
State 296 conflicts: 12 shift/reduce
State 297 conflicts: 12 shift/reduce
State 298 conflicts: 12 shift/reduce
State 299 conflicts: 12 shift/reduce
State 300 conflicts: 12 shift/reduce
State 301 conflicts: 12 shift/reduce
State 306 conflicts: 12 shift/reduce
State 320 conflicts: 1 shift/reduce
State 323 conflicts: 10 shift/reduce
State 325 conflicts: 12 shift/reduce
State 340 conflicts: 12 shift/reduce
State 341 conflicts: 12 shift/reduce
State 342 conflicts: 10 shift/reduce, 8 reduce/reduce
State 362 conflicts: 12 shift/reduce
State 375 conflicts: 1 shift/reduce
State 378 conflicts: 3 reduce/reduce
State 385 conflicts: 12 shift/reduce
State 393 conflicts: 1 shift/reduce
State 415 conflicts: 1 shift/reduce
State 417 conflicts: 1 shift/reduce
State 445 conflicts: 1 shift/reduce
State 446 conflicts: 1 shift/reduce
State 467 conflicts: 12 shift/reduce
State 475 conflicts: 12 shift/reduce
State 478 conflicts: 8 reduce/reduce
State 480 conflicts: 8 reduce/reduce
State 485 conflicts: 12 shift/reduce, 9 reduce/reduce
State 500 conflicts: 13 shift/reduce
State 502 conflicts: 12 shift/reduce
State 507 conflicts: 13 shift/reduce
State 516 conflicts: 12 shift/reduce
State 517 conflicts: 12 shift/reduce
State 533 conflicts: 12 shift/reduce, 1 reduce/reduce
State 535 conflicts: 10 shift/reduce
State 536 conflicts: 10 shift/reduce
State 538 conflicts: 12 shift/reduce, 1 reduce/reduce
State 548 conflicts: 1 shift/reduce
State 551 conflicts: 10 shift/reduce, 9 reduce/reduce
State 554 conflicts: 10 shift/reduce, 9 reduce/reduce
State 561 conflicts: 12 shift/reduce, 1 reduce/reduce
State 568 conflicts: 12 shift/reduce, 1 reduce/reduce
State 572 conflicts: 12 shift/reduce, 1 reduce/reduce
State 576 conflicts: 12 shift/reduce, 1 reduce/reduce
State 588 conflicts: 1 shift/reduce, 2 reduce/reduce
State 602 conflicts: 10 shift/reduce
State 614 conflicts: 1 shift/reduce
State 618 conflicts: 10 shift/reduce, 9 reduce/reduce
State 626 conflicts: 1 shift/reduce
State 640 conflicts: 10 shift/reduce
State 642 conflicts: 10 shift/reduce
State 643 conflicts: 12 shift/reduce
State 644 conflicts: 12 shift/reduce
State 645 conflicts: 10 shift/reduce, 8 reduce/reduce
State 647 conflicts: 10 shift/reduce
State 659 conflicts: 12 shift/reduce, 1 reduce/reduce
State 660 conflicts: 12 shift/reduce, 1 reduce/reduce
State 664 conflicts: 12 shift/reduce
State 666 conflicts: 12 shift/reduce, 1 reduce/reduce
State 695 conflicts: 10 shift/reduce
State 696 conflicts: 10 shift/reduce
State 697 conflicts: 12 shift/reduce
State 698 conflicts: 12 shift/reduce, 1 reduce/reduce
State 699 conflicts: 10 shift/reduce
State 701 conflicts: 12 shift/reduce, 1 reduce/reduce
State 702 conflicts: 12 shift/reduce, 1 reduce/reduce
State 715 conflicts: 28 shift/reduce, 14 reduce/reduce
State 716 conflicts: 10 shift/reduce
State 717 conflicts: 10 shift/reduce
State 720 conflicts: 1 shift/reduce, 2 reduce/reduce
State 730 conflicts: 10 shift/reduce
State 731 conflicts: 12 shift/reduce
State 732 conflicts: 12 shift/reduce
State 733 conflicts: 10 shift/reduce, 8 reduce/reduce
State 734 conflicts: 10 shift/reduce
State 739 conflicts: 10 shift/reduce
State 740 conflicts: 10 shift/reduce
State 741 conflicts: 12 shift/reduce, 1 reduce/reduce
State 744 conflicts: 10 shift/reduce
State 745 conflicts: 10 shift/reduce
State 747 conflicts: 10 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: ordinary_complilation_unit

    2 ordinary_complilation_unit: top_level_class_or_interface_declarations

    3 top_level_class_or_interface_declarations: top_level_class_or_interface_declarations class_declaration
    4                                          | ε

    5 module_or_package_or_expression_name: IDENTIFIER
    6                                     | module_or_package_or_expression_name DOT IDENTIFIER

    7 type_name: type_identifier
    8          | module_or_package_or_expression_name DOT type_identifier

    9 type_identifier: IDENTIFIER

   10 method_name: unqualified_method_identifier

   11 unqualified_method_identifier: IDENTIFIER

   12 block: LMPARA block_statements_opt RMPARA

   13 block_statements_opt: block_statements
   14                     | ε

   15 block_statements: block_statements block_statement
   16                 | block_statement

   17 block_statement: local_class_or_interface_declaration
   18                | local_variable_declaration_statement
   19                | statement

   20 local_class_or_interface_declaration: class_declaration

   21 local_variable_declaration_statement: local_variable_declaration SEMICOLON

   22 local_variable_declaration: variable_modifiers local_variable_type variable_declarators_list

   23 variable_declarators_list: variable_declarators_list COMMA variable_declarator
   24                          | variable_declarator

   25 variable_declarator: variable_declarator_id variable_initializer_opt

   26 variable_initializer_opt: EQUALS variable_initializer
   27                         | ε

   28 variable_modifiers: variable_modifiers variable_modifier
   29                   | ε

   30 variable_modifier: annotation
   31                  | final

   32 final: FINAL

   33 local_variable_type: unanntype
   34                    | var

   35 statement: statement_without_trailing_substatement
   36          | labeled_statement
   37          | if_then_else_statement
   38          | while_statement
   39          | for_statement

   40 statement_without_trailing_substatement: block
   41                                        | empty_statement
   42                                        | expression_statement
   43                                        | assert_statement
   44                                        | break_statement
   45                                        | continue_statement
   46                                        | return_statement
   47                                        | synchronized_statement
   48                                        | throw_statement
   49                                        | try_statement

   50 empty_statement: SEMICOLON

   51 labeled_statement: IDENTIFIER COLON statement

   52 expression_statement: statement_expression SEMICOLON

   53 statement_expression: assignment
   54                     | pre_increment_expression
   55                     | pre_decrement_expression
   56                     | post_increment_expression
   57                     | post_decrement_expression
   58                     | method_invocation
   59                     | class_instance_creation_expression

   60 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body

   61 class_or_interface_type_to_instantiate: annotations IDENTIFIER dot_annotation_indentifiers_optional type_arguments_opt

   62 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT annotations IDENTIFIER
   63                                     | ε

   64 method_invocation: method_name LPAREN argument_list_optional RPAREN
   65                  | type_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   66                  | module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   67                  | primary DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   68                  | SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   69                  | type_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN

   70 argument_list_optional: argument_list
   71                       | ε

   72 argument_list: argument_list COMMA expression
   73              | expression

   74 method_reference: ε
   75                 | SUPER COLON COLON type_arguments IDENTIFIER
   76                 | type_name DOT SUPER COLON COLON type_arguments IDENTIFIER
   77                 | primary COLON COLON type_arguments IDENTIFIER
   78                 | module_or_package_or_expression_name COLON COLON type_arguments IDENTIFIER
   79                 | class_type COLON COLON type_arguments NEW
   80                 | array_type COLON COLON NEW

   81 type_arguments: LT type_argument_list GT

   82 type_argument_list: type_argument_list COMMA type_argument
   83                   | type_argument

   84 type_argument: reference_type
   85              | wildcard

   86 wildcard: annotations QUESTION wildcard_bound_opt

   87 wildcard_bound_opt: EXTENDS reference_type
   88                   | SUPER reference_type

   89 if_then_else_statement: if LPAREN expression RPAREN if_footer

   90 if_footer: statement
   91          | statement_no_short_if else statement

   92 statement_no_short_if: statement_without_trailing_substatement
   93                      | labeled_statement_no_short_if
   94                      | if_then_else_statement_no_short_if
   95                      | while_statement_no_short_if
   96                      | for_statement_no_short_if

   97 labeled_statement_no_short_if: IDENTIFIER COLON statement_no_short_if

   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if

   99 while_statement_no_short_if: while LPAREN expression RPAREN statement_no_short_if

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  101                          | enhanced_for_statement_no_short_if

  102 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if

  103 if: IF

  104 else: ELSE

  105 while_statement: while LPAREN expression RPAREN statement

  106 while: WHILE

  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

  108 for: FOR

  109 for_init_opt: for_init
  110             | ε

  111 for_init: statement_expression_list
  112         | local_variable_declaration

  113 statement_expression_list: statement_expression statement_expressions

  114 statement_expressions: statement_expressions COMMA statement_expression
  115                      | ε

  116 expression_opt: expression
  117               | ε

  118 for_update_opt: for_update
  119               | ε

  120 for_update: statement_expression_list

  121 assert_statement: assert expression SEMICOLON
  122                 | assert expression COLON expression SEMICOLON

  123 assert: ASSERT

  124 break_statement: break SEMICOLON
  125                | break IDENTIFIER SEMICOLON

  126 break: BREAK

  127 continue_statement: continue SEMICOLON
  128                   | continue IDENTIFIER SEMICOLON

  129 continue: CONTINUE

  130 return_statement: return SEMICOLON
  131                 | return expression SEMICOLON

  132 return: RETURN

  133 synchronized_statement: SYNCHRONIZED LPAREN expression RPAREN block

  134 throw_statement: THROW expression SEMICOLON

  135 try_statement: TRY block catches_opt finally_opt

  136 finally_opt: finally
  137            | ε

  138 catches: catch_clause catches
  139        | catch_clause

  140 catches_opt: catches
  141            | ε

  142 catch_clause: catch LPAREN catch_formal_parameter RPAREN block

  143 catch: CATCH

  144 catch_formal_parameter: catch_type IDENTIFIER

  145 catch_type: unanntype
  146           | catch_type OR unanntype

  147 finally: FINALLY block

  148 expression: lambda_expression
  149           | assignment_expression

  150 lambda_expression: lambda_parameters ARROW lambda_body

  151 lambda_parameters: IDENTIFIER
  152                  | LPAREN lambda_parameter_list_opt RPAREN

  153 lambda_parameter_list_opt: lambda_parameter_list
  154                          | ε

  155 lambda_parameter_list: lambda_parameter more_lambda_parameters
  156                      | IDENTIFIER more_identifiers

  157 more_lambda_parameters: more_lambda_parameters COMMA lambda_parameter
  158                       | ε

  159 more_identifiers: more_identifiers COMMA IDENTIFIER
  160                 | ε

  161 lambda_parameter: variable_modifiers lambda_parameter_type variable_declarator_id
  162                 | variable_arity_parameter

  163 lambda_parameter_type: unanntype
  164                      | var

  165 var: VAR

  166 variable_declarator_id: IDENTIFIER dims

  167 dims: annotations LSPAR RSPAR dim

  168 dim: annotations LSPAR RSPAR
  169    | ε

  170 variable_arity_parameter: variable_modifiers unanntype variable_arity_parameter_id

  171 variable_arity_parameter_id: annotations ELLIPSIS IDENTIFIER

  172 lambda_body: expression
  173            | block

  174 assignment_expression: conditional_expression
  175                      | assignment

  176 assignment: left_hand_side assignment_operator expression

  177 left_hand_side: module_or_package_or_expression_name
  178               | field_access
  179               | array_access

  180 field_access: primary DOT IDENTIFIER
  181             | SUPER DOT IDENTIFIER
  182             | type_name DOT IDENTIFIER

  183 array_access: module_or_package_or_expression_name LSPAR expression RSPAR
  184             | primary_no_new_array LSPAR expression RSPAR

  185 assignment_operator: EQUALS
  186                    | TIMES_EQUALS
  187                    | DIVIDE_EQUALS
  188                    | MOD_EQUALS
  189                    | PLUS_EQUALS
  190                    | MINUS_EQUALS
  191                    | LEFT_SHIFT_EQUALS
  192                    | RIGHT_SHIFT_EQUALS
  193                    | UNSIGNED_RIGHT_SHIFT_EQUALS
  194                    | AND_EQUALS
  195                    | XOR_EQUALS
  196                    | OR_EQUALS

  197 conditional_expression: conditional_or_expression
  198                       | conditional_or_expression QUESTION expression COLON conditional_expression
  199                       | conditional_or_expression QUESTION expression COLON lambda_expression

  200 conditional_or_expression: conditional_and_expression
  201                          | conditional_or_expression OR conditional_and_expression

  202 conditional_and_expression: inclusive_or_expression
  203                           | conditional_and_expression AND inclusive_or_expression

  204 inclusive_or_expression: exclusive_or_expression
  205                        | inclusive_or_expression OR exclusive_or_expression

  206 exclusive_or_expression: and_expression
  207                        | exclusive_or_expression XOR and_expression

  208 and_expression: equality_expression
  209               | and_expression AND equality_expression

  210 equality_expression: relational_expression
  211                    | equality_expression EQUALS relational_expression
  212                    | equality_expression NOT_EQUALS relational_expression

  213 relational_expression: shift_expression
  214                      | relational_expression LT shift_expression
  215                      | relational_expression GT shift_expression
  216                      | relational_expression LE shift_expression
  217                      | relational_expression GE shift_expression
  218                      | relational_expression INSTANCEOF reference_type

  219 shift_expression: additive_expression
  220                 | shift_expression LEFT_SHIFT additive_expression
  221                 | shift_expression RIGHT_SHIFT additive_expression
  222                 | shift_expression UNSIGNED_RIGHT_SHIFT additive_expression

  223 additive_expression: multiplicative_expression
  224                    | additive_expression PLUS multiplicative_expression
  225                    | additive_expression MINUS multiplicative_expression

  226 multiplicative_expression: unary_expression
  227                          | multiplicative_expression TIMES unary_expression
  228                          | multiplicative_expression DIVIDE unary_expression
  229                          | multiplicative_expression MOD unary_expression

  230 unary_expression: pre_increment_expression
  231                 | pre_decrement_expression
  232                 | PLUS unary_expression
  233                 | MINUS unary_expression
  234                 | unary_expression_not_plus_minus

  235 pre_increment_expression: PLUS_PLUS unary_expression

  236 pre_decrement_expression: MINUS_MINUS unary_expression

  237 post_increment_expression: postfix_expression PLUS_PLUS

  238 post_decrement_expression: postfix_expression MINUS_MINUS

  239 unary_expression_not_plus_minus: postfix_expression
  240                                | TILDE unary_expression
  241                                | NOT unary_expression

  242 postfix_expression: primary
  243                   | module_or_package_or_expression_name
  244                   | post_increment_expression
  245                   | post_decrement_expression

  246 primary: primary_no_new_array
  247        | array_creation_expression

  248 array_creation_expression: NEW array_creation_folllow

  249 array_creation_folllow: primitive_type array_creation_type_follow
  250                       | class_or_interface_type array_creation_type_follow

  251 array_creation_type_follow: dimexprs dims_opt
  252                           | dims array_initializer

  253 dimexprs: dimexprs dimexpr
  254         | dimexpr

  255 dimexpr: annotations LSPAR expression RSPAR

  256 dims_opt: dims
  257         | ε

  258 primary_no_new_array: LITERAL
  259                     | class_literal
  260                     | THIS
  261                     | type_name DOT THIS
  262                     | LPAREN expression RPAREN
  263                     | field_access
  264                     | array_access
  265                     | method_invocation
  266                     | method_reference

  267 class_literal: type_name brackets DOT CLASS
  268              | numeric_type brackets DOT CLASS
  269              | BOOLEAN brackets DOT CLASS
  270              | VOID DOT CLASS

  271 brackets: brackets LSPAR RSPAR
  272         | ε

  273 unanntype: unann_primitive_type

  274 unann_primitive_type: numeric_type
  275                     | boolean

  276 numeric_type: integral_type
  277             | floating_point_type

  278 integral_type: BYTE
  279              | SHORT
  280              | INT
  281              | LONG

  282 floating_point_type: FLOAT
  283                    | DOUBLE

  284 boolean: BOOLEAN

  285 class_declaration: normal_class_declaration

  286 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt class_extends_opt class_body

  287 class_modifiers: class_modifiers class_modifier
  288                | ε

  289 class_modifier: PUBLIC
  290               | PRIVATE
  291               | ABSTRACT
  292               | STATIC
  293               | FINAL
  294               | STRICTFP

  295 type_parameters_opt: type_parameters
  296                    | ε

  297 type_parameters: LANGULAR type_parameter_list RANGULAR

  298 type_parameter_list: type_parameter_list COMMA type_parameter
  299                    | type_parameter

  300 type_parameter: type_parameter_modifier type_identifier type_bound_opt

  301 type_parameter_modifier: annotations

  302 type_bound_opt: type_bound
  303               | ε

  304 type_bound: EXTENDS type_variable_or_class_or_interface_type_list

  305 type_variable_or_class_or_interface_type_list: type_variable
  306                                              | class_or_interface_type

  307 type_variable: annotations type_identifier

  308 class_type: annotations type_identifier type_arguments_opt
  309           | class_or_interface_type DOT annotations type_identifier type_arguments_opt
  310           | module_or_package_or_expression_name DOT annotations type_identifier type_arguments_opt

  311 type_arguments_opt: type_arguments
  312                   | ε

  313 class_or_interface_type: class_type

  314 class_extends_opt: class_extends
  315                  | ε

  316 class_extends: EXTENDS class_type

  317 class_body: LMPARA class_content RMPARA

  318 class_content: class_content class_body_declaration
  319              | ε

  320 class_body_declaration: class_member_declaration
  321                       | instance_initializer
  322                       | static_initializer
  323                       | constructor_declaration

  324 class_member_declaration: field_declaration
  325                         | method_declaration
  326                         | SEMICOLON

  327 field_declaration: field_modifier unanntype variable_declarators_list SEMICOLON

  328 field_modifier: PUBLIC
  329               | PRIVATE
  330               | STATIC
  331               | FINAL
  332               | TRANSIENT
  333               | VOLATILE
  334               | PROTECTED
  335               | annotation

  336 method_declaration: method_modifier method_header method_body

  337 method_modifier: PUBLIC
  338                | PRIVATE
  339                | annotation
  340                | STATIC
  341                | FINAL
  342                | SYNCHRONIZED
  343                | NATIVE
  344                | ABSTRACT
  345                | STRICTFP
  346                | PROTECTED

  347 method_header: result method_declarator throws_empty
  348              | type_parameters annotations result method_declarator throws_empty

  349 result: unanntype
  350       | VOID

  351 throws_empty: throws
  352             | ε

  353 throws: THROWS exception_type_list

  354 exception_type_list: exception_type_list COMMA exception_type
  355                    | exception_type

  356 exception_type: class_type
  357               | type_variable

  358 method_body: block
  359            | SEMICOLON

  360 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list RPAREN dim

  361 reciever_parameter: annotations unanntype IDENTIFIER DOT THIS
  362                   | annotations unanntype THIS
  363                   | ε

  364 formal_parameter_list: formal_parameter_list COMMA formal_parameter
  365                      | formal_parameter
  366                      | ε

  367 formal_parameter: variable_modifiers unanntype variable_declarator_id
  368                 | variable_arity_parameter

  369 instance_initializer: block

  370 static_initializer: STATIC block

  371 constructor_declaration: constructor_modifiers constructor_declarator throws_empty constructor_body

  372 constructor_modifiers: constructor_modifier constructor_modifiers
  373                      | ε

  374 constructor_modifier: PUBLIC
  375                     | PRIVATE
  376                     | annotation
  377                     | PROTECTED

  378 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter formal_parameter_list RPAREN

  379 simple_type_name: type_identifier

  380 constructor_body: LMPARA explicit_constructor_invocation block_statements RMPARA
  381                 | LMPARA explicit_constructor_invocation RMPARA
  382                 | LMPARA block_statements RMPARA
  383                 | LMPARA RMPARA

  384 explicit_constructor_invocation: type_arguments_empty THIS LPAREN argument_list_optional RPAREN SEMICOLON
  385                                | type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON
  386                                | module_or_package_or_expression_name DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON
  387                                | primary DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON

  388 type_arguments_empty: type_arguments
  389                     | ε

  390 reference_type: class_or_interface_type
  391               | array_type
  392               | type_variable

  393 array_type: primitive_type dims
  394           | class_or_interface_type dims
  395           | type_variable dims

  396 primitive_type: annotations numeric_type
  397               | annotations boolean

  398 annotations: annotations annotation
  399            | ε

  400 annotation: AT type_name annotation_body

  401 annotation_body: LPAREN annotation_content RPAREN
  402                | ε

  403 annotation_content: element_value
  404                   | element_value_pairs_list_opt

  405 element_value_pairs_list_opt: element_value_pairs_list
  406                             | ε

  407 element_value_pairs_list: element_value_pairs_list COMMA element_value_pair
  408                         | element_value_pair

  409 element_value_pair: IDENTIFIER EQUALS element_value

  410 element_value: conditional_expression
  411              | annotation
  412              | element_value_array_initializer

  413 element_value_array_initializer: LMPARA element_value_list_opt comma_opt RMPARA

  414 element_value_list_opt: element_value_list

  415 element_value_list: element_value element_values

  416 element_values: element_values COMMA element_value
  417               | ε

  418 array_initializer: LMPARA variable_initializer_list_opt comma_opt RMPARA

  419 variable_initializer_list_opt: variable_initializer_list

  420 comma_opt: COMMA
  421          | ε

  422 variable_initializer_list: variable_initializer variable_init

  423 variable_init: variable_init COMMA variable_initializer
  424              | ε

  425 variable_initializer: expression
  426                     | array_initializer


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    COMMA <str> (258) 23 72 82 114 157 159 298 354 364 407 416 420 423
    AT <str> (259) 400
    LPAREN <str> (260) 60 64 65 66 67 68 69 89 98 99 100 102 105 107 133 142 152 262 360 378 384 385 386 387 401
    RPAREN <str> (261) 60 64 65 66 67 68 69 89 98 99 100 102 105 107 133 142 152 262 360 378 384 385 386 387 401
    IDENTIFIER <str> (262) 5 6 9 11 51 61 62 65 66 67 68 69 75 76 77 78 97 125 128 144 151 156 159 166 171 180 181 182 360 361 409
    EQUALS <str> (263) 26 185 211 409
    DOT <str> (264) 6 8 62 65 66 67 68 69 76 180 181 182 261 267 268 269 270 309 310 361 386 387
    FINALLY <str> (265) 147
    CLASS <str> (266) 267 268 269 270 286
    PUBLIC <str> (267) 289 328 337 374
    PRIVATE <str> (268) 290 329 338 375
    LANGULAR <str> (269) 297
    RANGULAR <str> (270) 297
    SEMICOLON <str> (271) 21 50 52 100 107 121 122 124 125 127 128 130 131 134 326 327 359 384 385 386 387
    COLON <str> (272) 51 75 76 77 78 79 80 97 102 122 198 199
    OR <str> (273) 146 201 205
    RETURN <str> (274) 132
    TRY <str> (275) 135
    SYNCHRONIZED <str> (276) 133 342
    THROW <str> (277) 134
    ASSERT <str> (278) 123
    BREAK <str> (279) 126
    CONTINUE <str> (280) 129
    YIELD <str> (281)
    CATCH <str> (282) 143
    ARROW <str> (283) 150
    FINAL <str> (284) 32 293 331 341
    IF <str> (285) 103
    ELSE <str> (286) 98 104
    WHILE <str> (287) 106
    FOR <str> (288) 108
    VAR <str> (289) 165
    LSPAR <str> (290) 167 168 183 184 255 271
    RSPAR <str> (291) 167 168 183 184 255 271
    ELLIPSIS <str> (292) 171
    TIMES_EQUALS <str> (293) 186
    DIVIDE_EQUALS <str> (294) 187
    MOD_EQUALS <str> (295) 188
    PLUS_EQUALS <str> (296) 189
    MINUS_EQUALS <str> (297) 190
    LEFT_SHIFT_EQUALS <str> (298) 191
    RIGHT_SHIFT_EQUALS <str> (299) 192
    UNSIGNED_RIGHT_SHIFT_EQUALS <str> (300) 193
    AND_EQUALS <str> (301) 194
    XOR_EQUALS <str> (302) 195
    OR_EQUALS <str> (303) 196
    QUESTION <str> (304) 86 198 199
    NOT_EQUALS <str> (305) 212
    LT <str> (306) 81 214
    GT <str> (307) 81 215
    LE <str> (308) 216
    GE <str> (309) 217
    INSTANCEOF <str> (310) 218
    AND <str> (311) 203 209
    XOR <str> (312) 207
    PLUS <str> (313) 224 232
    MINUS <str> (314) 225 233
    TIMES <str> (315) 227
    DIVIDE <str> (316) 228
    MOD <str> (317) 229
    PLUS_PLUS <str> (318) 235 237
    MINUS_MINUS <str> (319) 236 238
    TILDE <str> (320) 240
    THIS <str> (321) 260 261 361 362 384
    SUPER <str> (322) 68 69 75 76 88 181 385 386 387
    INT <str> (323) 280
    LONG <str> (324) 281
    SHORT <str> (325) 279
    BYTE <str> (326) 278
    FLOAT <str> (327) 282
    DOUBLE <str> (328) 283
    BOOLEAN <str> (329) 269 284
    VOID <str> (330) 270 350
    NOT <str> (331) 241
    EXTENDS <str> (332) 87 304 316
    IMPLEMENTS <str> (333)
    PERMITS <str> (334)
    RMPARA <str> (335) 12 317 380 381 382 383 413 418
    LMPARA <str> (336) 12 317 380 381 382 383 413 418
    PROTECTED <str> (337) 334 346 377
    STATIC <str> (338) 292 330 340 370
    TRANSIENT <str> (339) 332
    VOLATILE <str> (340) 333
    NATIVE <str> (341) 343
    STRICTFP <str> (342) 294 345
    LEFT_SHIFT <str> (343) 220
    RIGHT_SHIFT <str> (344) 221
    UNSIGNED_RIGHT_SHIFT <str> (345) 222
    ABSTRACT <str> (346) 291 344
    RECORD <str> (347)
    ENUM <str> (348)
    LITERAL <str> (349) 258
    THROWS <str> (350) 353
    NEW <str> (351) 60 79 80 248
    INTERFACE <str> (352)
    SEALED <str> (353)
    NON_SEALED <str> (354)
    DEFAULT <str> (355)
    OPEN <str> (356)
    TRANSITIVE <str> (357)
    MODULE <str> (358)
    REQUIRES <str> (359)
    EXPORTS <str> (360)
    OPENS <str> (361)
    USES <str> (362)
    PROVIDES <str> (363)
    WITH <str> (364)
    IMPORT <str> (365)
    ASTERISK <str> (366)
    PACKAGE <str> (367)
    TO <str> (368)


Nonterminals, with rules where they appear

    $accept (114)
        on left: 0
    compilation_unit (115)
        on left: 1
        on right: 0
    ordinary_complilation_unit (116)
        on left: 2
        on right: 1
    top_level_class_or_interface_declarations (117)
        on left: 3 4
        on right: 2 3
    module_or_package_or_expression_name (118)
        on left: 5 6
        on right: 6 8 66 78 177 183 243 310 386
    type_name (119)
        on left: 7 8
        on right: 65 69 76 182 261 267 400
    type_identifier (120)
        on left: 9
        on right: 7 8 286 300 307 308 309 310 379
    method_name (121)
        on left: 10
        on right: 64
    unqualified_method_identifier (122)
        on left: 11
        on right: 10
    block (123)
        on left: 12
        on right: 40 133 135 142 147 173 358 369 370
    block_statements_opt (124)
        on left: 13 14
        on right: 12
    block_statements (125)
        on left: 15 16
        on right: 13 15 380 382
    block_statement (126)
        on left: 17 18 19
        on right: 15 16
    local_class_or_interface_declaration (127)
        on left: 20
        on right: 17
    local_variable_declaration_statement (128)
        on left: 21
        on right: 18
    local_variable_declaration (129)
        on left: 22
        on right: 21 102 112
    variable_declarators_list (130)
        on left: 23 24
        on right: 22 23 327
    variable_declarator (131)
        on left: 25
        on right: 23 24
    variable_initializer_opt (132)
        on left: 26 27
        on right: 25
    variable_modifiers (133)
        on left: 28 29
        on right: 22 28 161 170 367
    variable_modifier (134)
        on left: 30 31
        on right: 28
    final (135)
        on left: 32
        on right: 31
    local_variable_type (136)
        on left: 33 34
        on right: 22
    statement (137)
        on left: 35 36 37 38 39
        on right: 19 51 90 91 105 107
    statement_without_trailing_substatement (138)
        on left: 40 41 42 43 44 45 46 47 48 49
        on right: 35 92
    empty_statement (139)
        on left: 50
        on right: 41
    labeled_statement (140)
        on left: 51
        on right: 36
    expression_statement (141)
        on left: 52
        on right: 42
    statement_expression (142)
        on left: 53 54 55 56 57 58 59
        on right: 52 113 114
    class_instance_creation_expression (143)
        on left: 60
        on right: 59
    class_or_interface_type_to_instantiate (144)
        on left: 61
        on right: 60
    dot_annotation_indentifiers_optional (145)
        on left: 62 63
        on right: 61 62
    method_invocation (146)
        on left: 64 65 66 67 68 69
        on right: 58 265
    argument_list_optional (147)
        on left: 70 71
        on right: 60 64 65 66 67 68 69 384 385 386 387
    argument_list (148)
        on left: 72 73
        on right: 70 72
    method_reference (149)
        on left: 74 75 76 77 78 79 80
        on right: 266
    type_arguments (150)
        on left: 81
        on right: 65 66 67 68 69 75 76 77 78 79 311 388
    type_argument_list (151)
        on left: 82 83
        on right: 81 82
    type_argument (152)
        on left: 84 85
        on right: 82 83
    wildcard (153)
        on left: 86
        on right: 85
    wildcard_bound_opt (154)
        on left: 87 88
        on right: 86
    if_then_else_statement (155)
        on left: 89
        on right: 37
    if_footer (156)
        on left: 90 91
        on right: 89
    statement_no_short_if (157)
        on left: 92 93 94 95 96
        on right: 91 97 98 99 100 102
    labeled_statement_no_short_if (158)
        on left: 97
        on right: 93
    if_then_else_statement_no_short_if (159)
        on left: 98
        on right: 94
    while_statement_no_short_if (160)
        on left: 99
        on right: 95
    for_statement_no_short_if (161)
        on left: 100 101
        on right: 96
    enhanced_for_statement_no_short_if (162)
        on left: 102
        on right: 101
    if (163)
        on left: 103
        on right: 89 98
    else (164)
        on left: 104
        on right: 91
    while_statement (165)
        on left: 105
        on right: 38
    while (166)
        on left: 106
        on right: 99 105
    for_statement (167)
        on left: 107
        on right: 39
    for (168)
        on left: 108
        on right: 100 102 107
    for_init_opt (169)
        on left: 109 110
        on right: 100 107
    for_init (170)
        on left: 111 112
        on right: 109
    statement_expression_list (171)
        on left: 113
        on right: 111 120
    statement_expressions (172)
        on left: 114 115
        on right: 113 114
    expression_opt (173)
        on left: 116 117
        on right: 100 107
    for_update_opt (174)
        on left: 118 119
        on right: 100 107
    for_update (175)
        on left: 120
        on right: 118
    assert_statement (176)
        on left: 121 122
        on right: 43
    assert (177)
        on left: 123
        on right: 121 122
    break_statement (178)
        on left: 124 125
        on right: 44
    break (179)
        on left: 126
        on right: 124 125
    continue_statement (180)
        on left: 127 128
        on right: 45
    continue (181)
        on left: 129
        on right: 127 128
    return_statement (182)
        on left: 130 131
        on right: 46
    return (183)
        on left: 132
        on right: 130 131
    synchronized_statement (184)
        on left: 133
        on right: 47
    throw_statement (185)
        on left: 134
        on right: 48
    try_statement (186)
        on left: 135
        on right: 49
    finally_opt (187)
        on left: 136 137
        on right: 135
    catches (188)
        on left: 138 139
        on right: 138 140
    catches_opt (189)
        on left: 140 141
        on right: 135
    catch_clause (190)
        on left: 142
        on right: 138 139
    catch (191)
        on left: 143
        on right: 142
    catch_formal_parameter (192)
        on left: 144
        on right: 142
    catch_type (193)
        on left: 145 146
        on right: 144 146
    finally (194)
        on left: 147
        on right: 136
    expression (195)
        on left: 148 149
        on right: 72 73 89 98 99 102 105 116 121 122 131 133 134 172 176 183 184 198 199 255 262 425
    lambda_expression (196)
        on left: 150
        on right: 148 199
    lambda_parameters (197)
        on left: 151 152
        on right: 150
    lambda_parameter_list_opt (198)
        on left: 153 154
        on right: 152
    lambda_parameter_list (199)
        on left: 155 156
        on right: 153
    more_lambda_parameters (200)
        on left: 157 158
        on right: 155 157
    more_identifiers (201)
        on left: 159 160
        on right: 156 159
    lambda_parameter (202)
        on left: 161 162
        on right: 155 157
    lambda_parameter_type (203)
        on left: 163 164
        on right: 161
    var (204)
        on left: 165
        on right: 34 164
    variable_declarator_id (205)
        on left: 166
        on right: 25 161 367
    dims (206)
        on left: 167
        on right: 166 252 256 393 394 395
    dim (207)
        on left: 168 169
        on right: 167 360
    variable_arity_parameter (208)
        on left: 170
        on right: 162 368
    variable_arity_parameter_id (209)
        on left: 171
        on right: 170
    lambda_body (210)
        on left: 172 173
        on right: 150
    assignment_expression (211)
        on left: 174 175
        on right: 149
    assignment (212)
        on left: 176
        on right: 53 175
    left_hand_side (213)
        on left: 177 178 179
        on right: 176
    field_access (214)
        on left: 180 181 182
        on right: 178 263
    array_access (215)
        on left: 183 184
        on right: 179 264
    assignment_operator (216)
        on left: 185 186 187 188 189 190 191 192 193 194 195 196
        on right: 176
    conditional_expression (217)
        on left: 197 198 199
        on right: 174 198 410
    conditional_or_expression (218)
        on left: 200 201
        on right: 197 198 199 201
    conditional_and_expression (219)
        on left: 202 203
        on right: 200 201 203
    inclusive_or_expression (220)
        on left: 204 205
        on right: 202 203 205
    exclusive_or_expression (221)
        on left: 206 207
        on right: 204 205 207
    and_expression (222)
        on left: 208 209
        on right: 206 207 209
    equality_expression (223)
        on left: 210 211 212
        on right: 208 209 211 212
    relational_expression (224)
        on left: 213 214 215 216 217 218
        on right: 210 211 212 214 215 216 217 218
    shift_expression (225)
        on left: 219 220 221 222
        on right: 213 214 215 216 217 220 221 222
    additive_expression (226)
        on left: 223 224 225
        on right: 219 220 221 222 224 225
    multiplicative_expression (227)
        on left: 226 227 228 229
        on right: 223 224 225 227 228 229
    unary_expression (228)
        on left: 230 231 232 233 234
        on right: 226 227 228 229 232 233 235 236 240 241
    pre_increment_expression (229)
        on left: 235
        on right: 54 230
    pre_decrement_expression (230)
        on left: 236
        on right: 55 231
    post_increment_expression (231)
        on left: 237
        on right: 56 244
    post_decrement_expression (232)
        on left: 238
        on right: 57 245
    unary_expression_not_plus_minus (233)
        on left: 239 240 241
        on right: 234
    postfix_expression (234)
        on left: 242 243 244 245
        on right: 237 238 239
    primary (235)
        on left: 246 247
        on right: 67 77 180 242 387
    array_creation_expression (236)
        on left: 248
        on right: 247
    array_creation_folllow (237)
        on left: 249 250
        on right: 248
    array_creation_type_follow (238)
        on left: 251 252
        on right: 249 250
    dimexprs (239)
        on left: 253 254
        on right: 251 253
    dimexpr (240)
        on left: 255
        on right: 253 254
    dims_opt (241)
        on left: 256 257
        on right: 251
    primary_no_new_array (242)
        on left: 258 259 260 261 262 263 264 265 266
        on right: 184 246
    class_literal (243)
        on left: 267 268 269 270
        on right: 259
    brackets (244)
        on left: 271 272
        on right: 267 268 269 271
    unanntype (245)
        on left: 273
        on right: 33 145 146 163 170 327 349 361 362 367
    unann_primitive_type (246)
        on left: 274 275
        on right: 273
    numeric_type (247)
        on left: 276 277
        on right: 268 274 396
    integral_type (248)
        on left: 278 279 280 281
        on right: 276
    floating_point_type (249)
        on left: 282 283
        on right: 277
    boolean (250)
        on left: 284
        on right: 275 397
    class_declaration (251)
        on left: 285
        on right: 3 20
    normal_class_declaration (252)
        on left: 286
        on right: 285
    class_modifiers (253)
        on left: 287 288
        on right: 286 287
    class_modifier (254)
        on left: 289 290 291 292 293 294
        on right: 287
    type_parameters_opt (255)
        on left: 295 296
        on right: 286
    type_parameters (256)
        on left: 297
        on right: 295 348 378
    type_parameter_list (257)
        on left: 298 299
        on right: 297 298
    type_parameter (258)
        on left: 300
        on right: 298 299
    type_parameter_modifier (259)
        on left: 301
        on right: 300
    type_bound_opt (260)
        on left: 302 303
        on right: 300
    type_bound (261)
        on left: 304
        on right: 302
    type_variable_or_class_or_interface_type_list (262)
        on left: 305 306
        on right: 304
    type_variable (263)
        on left: 307
        on right: 305 357 392 395
    class_type (264)
        on left: 308 309 310
        on right: 79 313 316 356
    type_arguments_opt (265)
        on left: 311 312
        on right: 60 61 308 309 310
    class_or_interface_type (266)
        on left: 313
        on right: 250 306 309 390 394
    class_extends_opt (267)
        on left: 314 315
        on right: 286
    class_extends (268)
        on left: 316
        on right: 314
    class_body (269)
        on left: 317
        on right: 60 286
    class_content (270)
        on left: 318 319
        on right: 317 318
    class_body_declaration (271)
        on left: 320 321 322 323
        on right: 318
    class_member_declaration (272)
        on left: 324 325 326
        on right: 320
    field_declaration (273)
        on left: 327
        on right: 324
    field_modifier (274)
        on left: 328 329 330 331 332 333 334 335
        on right: 327
    method_declaration (275)
        on left: 336
        on right: 325
    method_modifier (276)
        on left: 337 338 339 340 341 342 343 344 345 346
        on right: 336
    method_header (277)
        on left: 347 348
        on right: 336
    result (278)
        on left: 349 350
        on right: 347 348
    throws_empty (279)
        on left: 351 352
        on right: 347 348 371
    throws (280)
        on left: 353
        on right: 351
    exception_type_list (281)
        on left: 354 355
        on right: 353 354
    exception_type (282)
        on left: 356 357
        on right: 354 355
    method_body (283)
        on left: 358 359
        on right: 336
    method_declarator (284)
        on left: 360
        on right: 347 348
    reciever_parameter (285)
        on left: 361 362 363
        on right: 360 378
    formal_parameter_list (286)
        on left: 364 365 366
        on right: 360 364 378
    formal_parameter (287)
        on left: 367 368
        on right: 364 365
    instance_initializer (288)
        on left: 369
        on right: 321
    static_initializer (289)
        on left: 370
        on right: 322
    constructor_declaration (290)
        on left: 371
        on right: 323
    constructor_modifiers (291)
        on left: 372 373
        on right: 371 372
    constructor_modifier (292)
        on left: 374 375 376 377
        on right: 372
    constructor_declarator (293)
        on left: 378
        on right: 371
    simple_type_name (294)
        on left: 379
        on right: 378
    constructor_body (295)
        on left: 380 381 382 383
        on right: 371
    explicit_constructor_invocation (296)
        on left: 384 385 386 387
        on right: 380 381
    type_arguments_empty (297)
        on left: 388 389
        on right: 384 385 386 387
    reference_type (298)
        on left: 390 391 392
        on right: 84 87 88 218
    array_type (299)
        on left: 393 394 395
        on right: 80 391
    primitive_type (300)
        on left: 396 397
        on right: 249 393
    annotations (301)
        on left: 398 399
        on right: 61 62 86 167 168 171 255 301 307 308 309 310 348 361 362 396 397 398
    annotation (302)
        on left: 400
        on right: 30 335 339 376 398 411
    annotation_body (303)
        on left: 401 402
        on right: 400
    annotation_content (304)
        on left: 403 404
        on right: 401
    element_value_pairs_list_opt (305)
        on left: 405 406
        on right: 404
    element_value_pairs_list (306)
        on left: 407 408
        on right: 405 407
    element_value_pair (307)
        on left: 409
        on right: 407 408
    element_value (308)
        on left: 410 411 412
        on right: 403 409 415 416
    element_value_array_initializer (309)
        on left: 413
        on right: 412
    element_value_list_opt (310)
        on left: 414
        on right: 413
    element_value_list (311)
        on left: 415
        on right: 414
    element_values (312)
        on left: 416 417
        on right: 415 416
    array_initializer (313)
        on left: 418
        on right: 252 426
    variable_initializer_list_opt (314)
        on left: 419
        on right: 418
    comma_opt (315)
        on left: 420 421
        on right: 413 418
    variable_initializer_list (316)
        on left: 422
        on right: 419
    variable_init (317)
        on left: 423 424
        on right: 422 423
    variable_initializer (318)
        on left: 425 426
        on right: 26 422 423


State 0

    0 $accept: • compilation_unit $end

    $default  reduce using rule 4 (top_level_class_or_interface_declarations)

    compilation_unit                           go to state 1
    ordinary_complilation_unit                 go to state 2
    top_level_class_or_interface_declarations  go to state 3


State 1

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 4


State 2

    1 compilation_unit: ordinary_complilation_unit •

    $default  reduce using rule 1 (compilation_unit)


State 3

    2 ordinary_complilation_unit: top_level_class_or_interface_declarations •
    3 top_level_class_or_interface_declarations: top_level_class_or_interface_declarations • class_declaration

    $end      reduce using rule 2 (ordinary_complilation_unit)
    $default  reduce using rule 288 (class_modifiers)

    class_declaration         go to state 5
    normal_class_declaration  go to state 6
    class_modifiers           go to state 7


State 4

    0 $accept: compilation_unit $end •

    $default  accept


State 5

    3 top_level_class_or_interface_declarations: top_level_class_or_interface_declarations class_declaration •

    $default  reduce using rule 3 (top_level_class_or_interface_declarations)


State 6

  285 class_declaration: normal_class_declaration •

    $default  reduce using rule 285 (class_declaration)


State 7

  286 normal_class_declaration: class_modifiers • CLASS type_identifier type_parameters_opt class_extends_opt class_body
  287 class_modifiers: class_modifiers • class_modifier

    CLASS     shift, and go to state 8
    PUBLIC    shift, and go to state 9
    PRIVATE   shift, and go to state 10
    FINAL     shift, and go to state 11
    STATIC    shift, and go to state 12
    STRICTFP  shift, and go to state 13
    ABSTRACT  shift, and go to state 14

    class_modifier  go to state 15


State 8

  286 normal_class_declaration: class_modifiers CLASS • type_identifier type_parameters_opt class_extends_opt class_body

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 17


State 9

  289 class_modifier: PUBLIC •

    $default  reduce using rule 289 (class_modifier)


State 10

  290 class_modifier: PRIVATE •

    $default  reduce using rule 290 (class_modifier)


State 11

  293 class_modifier: FINAL •

    $default  reduce using rule 293 (class_modifier)


State 12

  292 class_modifier: STATIC •

    $default  reduce using rule 292 (class_modifier)


State 13

  294 class_modifier: STRICTFP •

    $default  reduce using rule 294 (class_modifier)


State 14

  291 class_modifier: ABSTRACT •

    $default  reduce using rule 291 (class_modifier)


State 15

  287 class_modifiers: class_modifiers class_modifier •

    $default  reduce using rule 287 (class_modifiers)


State 16

    9 type_identifier: IDENTIFIER •

    $default  reduce using rule 9 (type_identifier)


State 17

  286 normal_class_declaration: class_modifiers CLASS type_identifier • type_parameters_opt class_extends_opt class_body

    LANGULAR  shift, and go to state 18

    $default  reduce using rule 296 (type_parameters_opt)

    type_parameters_opt  go to state 19
    type_parameters      go to state 20


State 18

  297 type_parameters: LANGULAR • type_parameter_list RANGULAR

    $default  reduce using rule 399 (annotations)

    type_parameter_list      go to state 21
    type_parameter           go to state 22
    type_parameter_modifier  go to state 23
    annotations              go to state 24


State 19

  286 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt • class_extends_opt class_body

    EXTENDS  shift, and go to state 25

    $default  reduce using rule 315 (class_extends_opt)

    class_extends_opt  go to state 26
    class_extends      go to state 27


State 20

  295 type_parameters_opt: type_parameters •

    $default  reduce using rule 295 (type_parameters_opt)


State 21

  297 type_parameters: LANGULAR type_parameter_list • RANGULAR
  298 type_parameter_list: type_parameter_list • COMMA type_parameter

    COMMA     shift, and go to state 28
    RANGULAR  shift, and go to state 29


State 22

  299 type_parameter_list: type_parameter •

    $default  reduce using rule 299 (type_parameter_list)


State 23

  300 type_parameter: type_parameter_modifier • type_identifier type_bound_opt

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 30


State 24

  301 type_parameter_modifier: annotations •
  398 annotations: annotations • annotation

    AT  shift, and go to state 31

    $default  reduce using rule 301 (type_parameter_modifier)

    annotation  go to state 32


State 25

  316 class_extends: EXTENDS • class_type

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    class_type                            go to state 35
    class_or_interface_type               go to state 36
    annotations                           go to state 37


State 26

  286 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt class_extends_opt • class_body

    LMPARA  shift, and go to state 38

    class_body  go to state 39


State 27

  314 class_extends_opt: class_extends •

    $default  reduce using rule 314 (class_extends_opt)


State 28

  298 type_parameter_list: type_parameter_list COMMA • type_parameter

    $default  reduce using rule 399 (annotations)

    type_parameter           go to state 40
    type_parameter_modifier  go to state 23
    annotations              go to state 24


State 29

  297 type_parameters: LANGULAR type_parameter_list RANGULAR •

    $default  reduce using rule 297 (type_parameters)


State 30

  300 type_parameter: type_parameter_modifier type_identifier • type_bound_opt

    EXTENDS  shift, and go to state 41

    $default  reduce using rule 303 (type_bound_opt)

    type_bound_opt  go to state 42
    type_bound      go to state 43


State 31

  400 annotation: AT • type_name annotation_body

    IDENTIFIER  shift, and go to state 44

    module_or_package_or_expression_name  go to state 45
    type_name                             go to state 46
    type_identifier                       go to state 47


State 32

  398 annotations: annotations annotation •

    $default  reduce using rule 398 (annotations)


State 33

    5 module_or_package_or_expression_name: IDENTIFIER •

    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 34

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT IDENTIFIER
  310 class_type: module_or_package_or_expression_name • DOT annotations type_identifier type_arguments_opt

    DOT  shift, and go to state 48


State 35

  313 class_or_interface_type: class_type •
  316 class_extends: EXTENDS class_type •

    LMPARA    reduce using rule 316 (class_extends)
    $default  reduce using rule 313 (class_or_interface_type)


State 36

  309 class_type: class_or_interface_type • DOT annotations type_identifier type_arguments_opt

    DOT  shift, and go to state 49


State 37

  308 class_type: annotations • type_identifier type_arguments_opt
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 50
    annotation       go to state 32


State 38

  317 class_body: LMPARA • class_content RMPARA

    $default  reduce using rule 319 (class_content)

    class_content  go to state 51


State 39

  286 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt class_extends_opt class_body •

    $default  reduce using rule 286 (normal_class_declaration)


State 40

  298 type_parameter_list: type_parameter_list COMMA type_parameter •

    $default  reduce using rule 298 (type_parameter_list)


State 41

  304 type_bound: EXTENDS • type_variable_or_class_or_interface_type_list

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name           go to state 34
    type_variable_or_class_or_interface_type_list  go to state 52
    type_variable                                  go to state 53
    class_type                                     go to state 54
    class_or_interface_type                        go to state 55
    annotations                                    go to state 56


State 42

  300 type_parameter: type_parameter_modifier type_identifier type_bound_opt •

    $default  reduce using rule 300 (type_parameter)


State 43

  302 type_bound_opt: type_bound •

    $default  reduce using rule 302 (type_bound_opt)


State 44

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •

    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    $default  reduce using rule 9 (type_identifier)


State 45

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT IDENTIFIER
    8 type_name: module_or_package_or_expression_name • DOT type_identifier

    DOT  shift, and go to state 57


State 46

  400 annotation: AT type_name • annotation_body

    LPAREN  shift, and go to state 58

    $default  reduce using rule 402 (annotation_body)

    annotation_body  go to state 59


State 47

    7 type_name: type_identifier •

    $default  reduce using rule 7 (type_name)


State 48

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT • IDENTIFIER
  310 class_type: module_or_package_or_expression_name DOT • annotations type_identifier type_arguments_opt

    IDENTIFIER  shift, and go to state 60

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    annotations  go to state 61


State 49

  309 class_type: class_or_interface_type DOT • annotations type_identifier type_arguments_opt

    $default  reduce using rule 399 (annotations)

    annotations  go to state 62


State 50

  308 class_type: annotations type_identifier • type_arguments_opt

    LT  shift, and go to state 63

    $default  reduce using rule 312 (type_arguments_opt)

    type_arguments      go to state 64
    type_arguments_opt  go to state 65


State 51

  317 class_body: LMPARA class_content • RMPARA
  318 class_content: class_content • class_body_declaration

    AT            shift, and go to state 31
    PUBLIC        shift, and go to state 66
    PRIVATE       shift, and go to state 67
    SEMICOLON     shift, and go to state 68
    SYNCHRONIZED  shift, and go to state 69
    FINAL         shift, and go to state 70
    RMPARA        shift, and go to state 71
    LMPARA        shift, and go to state 72
    PROTECTED     shift, and go to state 73
    STATIC        shift, and go to state 74
    TRANSIENT     shift, and go to state 75
    VOLATILE      shift, and go to state 76
    NATIVE        shift, and go to state 77
    STRICTFP      shift, and go to state 78
    ABSTRACT      shift, and go to state 79

    $default  reduce using rule 373 (constructor_modifiers)

    block                     go to state 80
    class_body_declaration    go to state 81
    class_member_declaration  go to state 82
    field_declaration         go to state 83
    field_modifier            go to state 84
    method_declaration        go to state 85
    method_modifier           go to state 86
    instance_initializer      go to state 87
    static_initializer        go to state 88
    constructor_declaration   go to state 89
    constructor_modifiers     go to state 90
    constructor_modifier      go to state 91
    annotation                go to state 92


State 52

  304 type_bound: EXTENDS type_variable_or_class_or_interface_type_list •

    $default  reduce using rule 304 (type_bound)


State 53

  305 type_variable_or_class_or_interface_type_list: type_variable •

    $default  reduce using rule 305 (type_variable_or_class_or_interface_type_list)


State 54

  313 class_or_interface_type: class_type •

    $default  reduce using rule 313 (class_or_interface_type)


State 55

  306 type_variable_or_class_or_interface_type_list: class_or_interface_type •
  309 class_type: class_or_interface_type • DOT annotations type_identifier type_arguments_opt

    DOT  shift, and go to state 49

    $default  reduce using rule 306 (type_variable_or_class_or_interface_type_list)


State 56

  307 type_variable: annotations • type_identifier
  308 class_type: annotations • type_identifier type_arguments_opt
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 93
    annotation       go to state 32


State 57

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT • IDENTIFIER
    8 type_name: module_or_package_or_expression_name DOT • type_identifier

    IDENTIFIER  shift, and go to state 94

    type_identifier  go to state 95


State 58

  401 annotation_body: LPAREN • annotation_content RPAREN

    AT           shift, and go to state 31
    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 97
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 114
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           [reduce using rule 399 (annotations)]
    RPAREN       reduce using rule 74 (method_reference)
    RPAREN       [reduce using rule 406 (element_value_pairs_list_opt)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    conditional_expression                go to state 125
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    annotation                            go to state 156
    annotation_content                    go to state 157
    element_value_pairs_list_opt          go to state 158
    element_value_pairs_list              go to state 159
    element_value_pair                    go to state 160
    element_value                         go to state 161
    element_value_array_initializer       go to state 162


State 59

  400 annotation: AT type_name annotation_body •

    $default  reduce using rule 400 (annotation)


State 60

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT IDENTIFIER •

    $default  reduce using rule 6 (module_or_package_or_expression_name)


State 61

  310 class_type: module_or_package_or_expression_name DOT annotations • type_identifier type_arguments_opt
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 163
    annotation       go to state 32


State 62

  309 class_type: class_or_interface_type DOT annotations • type_identifier type_arguments_opt
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 164
    annotation       go to state 32


State 63

   81 type_arguments: LT • type_argument_list GT

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_argument_list                    go to state 165
    type_argument                         go to state 166
    wildcard                              go to state 167
    type_variable                         go to state 168
    class_type                            go to state 54
    class_or_interface_type               go to state 169
    reference_type                        go to state 170
    array_type                            go to state 171
    primitive_type                        go to state 154
    annotations                           go to state 172


State 64

  311 type_arguments_opt: type_arguments •

    $default  reduce using rule 311 (type_arguments_opt)


State 65

  308 class_type: annotations type_identifier type_arguments_opt •

    $default  reduce using rule 308 (class_type)


State 66

  328 field_modifier: PUBLIC •
  337 method_modifier: PUBLIC •
  374 constructor_modifier: PUBLIC •

    AT         reduce using rule 374 (constructor_modifier)
    PUBLIC     reduce using rule 374 (constructor_modifier)
    PRIVATE    reduce using rule 374 (constructor_modifier)
    LANGULAR   reduce using rule 337 (method_modifier)
    LANGULAR   [reduce using rule 374 (constructor_modifier)]
    INT        reduce using rule 328 (field_modifier)
    INT        [reduce using rule 337 (method_modifier)]
    LONG       reduce using rule 328 (field_modifier)
    LONG       [reduce using rule 337 (method_modifier)]
    SHORT      reduce using rule 328 (field_modifier)
    SHORT      [reduce using rule 337 (method_modifier)]
    BYTE       reduce using rule 328 (field_modifier)
    BYTE       [reduce using rule 337 (method_modifier)]
    FLOAT      reduce using rule 328 (field_modifier)
    FLOAT      [reduce using rule 337 (method_modifier)]
    DOUBLE     reduce using rule 328 (field_modifier)
    DOUBLE     [reduce using rule 337 (method_modifier)]
    BOOLEAN    reduce using rule 328 (field_modifier)
    BOOLEAN    [reduce using rule 337 (method_modifier)]
    VOID       reduce using rule 337 (method_modifier)
    PROTECTED  reduce using rule 374 (constructor_modifier)
    $default   reduce using rule 328 (field_modifier)


State 67

  329 field_modifier: PRIVATE •
  338 method_modifier: PRIVATE •
  375 constructor_modifier: PRIVATE •

    AT         reduce using rule 375 (constructor_modifier)
    PUBLIC     reduce using rule 375 (constructor_modifier)
    PRIVATE    reduce using rule 375 (constructor_modifier)
    LANGULAR   reduce using rule 338 (method_modifier)
    LANGULAR   [reduce using rule 375 (constructor_modifier)]
    INT        reduce using rule 329 (field_modifier)
    INT        [reduce using rule 338 (method_modifier)]
    LONG       reduce using rule 329 (field_modifier)
    LONG       [reduce using rule 338 (method_modifier)]
    SHORT      reduce using rule 329 (field_modifier)
    SHORT      [reduce using rule 338 (method_modifier)]
    BYTE       reduce using rule 329 (field_modifier)
    BYTE       [reduce using rule 338 (method_modifier)]
    FLOAT      reduce using rule 329 (field_modifier)
    FLOAT      [reduce using rule 338 (method_modifier)]
    DOUBLE     reduce using rule 329 (field_modifier)
    DOUBLE     [reduce using rule 338 (method_modifier)]
    BOOLEAN    reduce using rule 329 (field_modifier)
    BOOLEAN    [reduce using rule 338 (method_modifier)]
    VOID       reduce using rule 338 (method_modifier)
    PROTECTED  reduce using rule 375 (constructor_modifier)
    $default   reduce using rule 329 (field_modifier)


State 68

  326 class_member_declaration: SEMICOLON •

    $default  reduce using rule 326 (class_member_declaration)


State 69

  342 method_modifier: SYNCHRONIZED •

    $default  reduce using rule 342 (method_modifier)


State 70

  331 field_modifier: FINAL •
  341 method_modifier: FINAL •

    LANGULAR  reduce using rule 341 (method_modifier)
    INT       reduce using rule 331 (field_modifier)
    INT       [reduce using rule 341 (method_modifier)]
    LONG      reduce using rule 331 (field_modifier)
    LONG      [reduce using rule 341 (method_modifier)]
    SHORT     reduce using rule 331 (field_modifier)
    SHORT     [reduce using rule 341 (method_modifier)]
    BYTE      reduce using rule 331 (field_modifier)
    BYTE      [reduce using rule 341 (method_modifier)]
    FLOAT     reduce using rule 331 (field_modifier)
    FLOAT     [reduce using rule 341 (method_modifier)]
    DOUBLE    reduce using rule 331 (field_modifier)
    DOUBLE    [reduce using rule 341 (method_modifier)]
    BOOLEAN   reduce using rule 331 (field_modifier)
    BOOLEAN   [reduce using rule 341 (method_modifier)]
    VOID      reduce using rule 341 (method_modifier)
    $default  reduce using rule 331 (field_modifier)


State 71

  317 class_body: LMPARA class_content RMPARA •

    $default  reduce using rule 317 (class_body)


State 72

   12 block: LMPARA • block_statements_opt RMPARA

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    COLON        reduce using rule 74 (method_reference)
    FINAL        reduce using rule 29 (variable_modifiers)
    FINAL        [reduce using rule 288 (class_modifiers)]
    VAR          reduce using rule 29 (variable_modifiers)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    RMPARA       reduce using rule 14 (block_statements_opt)
    $default     reduce using rule 288 (class_modifiers)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    block_statements_opt                     go to state 188
    block_statements                         go to state 189
    block_statement                          go to state 190
    local_class_or_interface_declaration     go to state 191
    local_variable_declaration_statement     go to state 192
    local_variable_declaration               go to state 193
    variable_modifiers                       go to state 194
    statement                                go to state 195
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    class_declaration                        go to state 229
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 73

  334 field_modifier: PROTECTED •
  346 method_modifier: PROTECTED •
  377 constructor_modifier: PROTECTED •

    AT         reduce using rule 377 (constructor_modifier)
    PUBLIC     reduce using rule 377 (constructor_modifier)
    PRIVATE    reduce using rule 377 (constructor_modifier)
    LANGULAR   reduce using rule 346 (method_modifier)
    LANGULAR   [reduce using rule 377 (constructor_modifier)]
    INT        reduce using rule 334 (field_modifier)
    INT        [reduce using rule 346 (method_modifier)]
    LONG       reduce using rule 334 (field_modifier)
    LONG       [reduce using rule 346 (method_modifier)]
    SHORT      reduce using rule 334 (field_modifier)
    SHORT      [reduce using rule 346 (method_modifier)]
    BYTE       reduce using rule 334 (field_modifier)
    BYTE       [reduce using rule 346 (method_modifier)]
    FLOAT      reduce using rule 334 (field_modifier)
    FLOAT      [reduce using rule 346 (method_modifier)]
    DOUBLE     reduce using rule 334 (field_modifier)
    DOUBLE     [reduce using rule 346 (method_modifier)]
    BOOLEAN    reduce using rule 334 (field_modifier)
    BOOLEAN    [reduce using rule 346 (method_modifier)]
    VOID       reduce using rule 346 (method_modifier)
    PROTECTED  reduce using rule 377 (constructor_modifier)
    $default   reduce using rule 334 (field_modifier)


State 74

  330 field_modifier: STATIC •
  340 method_modifier: STATIC •
  370 static_initializer: STATIC • block

    LMPARA  shift, and go to state 72

    LANGULAR  reduce using rule 340 (method_modifier)
    INT       reduce using rule 330 (field_modifier)
    INT       [reduce using rule 340 (method_modifier)]
    LONG      reduce using rule 330 (field_modifier)
    LONG      [reduce using rule 340 (method_modifier)]
    SHORT     reduce using rule 330 (field_modifier)
    SHORT     [reduce using rule 340 (method_modifier)]
    BYTE      reduce using rule 330 (field_modifier)
    BYTE      [reduce using rule 340 (method_modifier)]
    FLOAT     reduce using rule 330 (field_modifier)
    FLOAT     [reduce using rule 340 (method_modifier)]
    DOUBLE    reduce using rule 330 (field_modifier)
    DOUBLE    [reduce using rule 340 (method_modifier)]
    BOOLEAN   reduce using rule 330 (field_modifier)
    BOOLEAN   [reduce using rule 340 (method_modifier)]
    VOID      reduce using rule 340 (method_modifier)
    $default  reduce using rule 330 (field_modifier)

    block  go to state 230


State 75

  332 field_modifier: TRANSIENT •

    $default  reduce using rule 332 (field_modifier)


State 76

  333 field_modifier: VOLATILE •

    $default  reduce using rule 333 (field_modifier)


State 77

  343 method_modifier: NATIVE •

    $default  reduce using rule 343 (method_modifier)


State 78

  345 method_modifier: STRICTFP •

    $default  reduce using rule 345 (method_modifier)


State 79

  344 method_modifier: ABSTRACT •

    $default  reduce using rule 344 (method_modifier)


State 80

  369 instance_initializer: block •

    $default  reduce using rule 369 (instance_initializer)


State 81

  318 class_content: class_content class_body_declaration •

    $default  reduce using rule 318 (class_content)


State 82

  320 class_body_declaration: class_member_declaration •

    $default  reduce using rule 320 (class_body_declaration)


State 83

  324 class_member_declaration: field_declaration •

    $default  reduce using rule 324 (class_member_declaration)


State 84

  327 field_declaration: field_modifier • unanntype variable_declarators_list SEMICOLON

    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    unanntype             go to state 232
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235


State 85

  325 class_member_declaration: method_declaration •

    $default  reduce using rule 325 (class_member_declaration)


State 86

  336 method_declaration: method_modifier • method_header method_body

    LANGULAR  shift, and go to state 18
    INT       shift, and go to state 105
    LONG      shift, and go to state 106
    SHORT     shift, and go to state 107
    BYTE      shift, and go to state 108
    FLOAT     shift, and go to state 109
    DOUBLE    shift, and go to state 110
    BOOLEAN   shift, and go to state 231
    VOID      shift, and go to state 236

    unanntype             go to state 237
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235
    type_parameters       go to state 238
    method_header         go to state 239
    result                go to state 240


State 87

  321 class_body_declaration: instance_initializer •

    $default  reduce using rule 321 (class_body_declaration)


State 88

  322 class_body_declaration: static_initializer •

    $default  reduce using rule 322 (class_body_declaration)


State 89

  323 class_body_declaration: constructor_declaration •

    $default  reduce using rule 323 (class_body_declaration)


State 90

  371 constructor_declaration: constructor_modifiers • constructor_declarator throws_empty constructor_body

    LANGULAR  shift, and go to state 18

    type_parameters         go to state 241
    constructor_declarator  go to state 242


State 91

  372 constructor_modifiers: constructor_modifier • constructor_modifiers

    AT         shift, and go to state 31
    PUBLIC     shift, and go to state 243
    PRIVATE    shift, and go to state 244
    PROTECTED  shift, and go to state 245

    $default  reduce using rule 373 (constructor_modifiers)

    constructor_modifiers  go to state 246
    constructor_modifier   go to state 91
    annotation             go to state 247


State 92

  335 field_modifier: annotation •
  339 method_modifier: annotation •
  376 constructor_modifier: annotation •

    AT         reduce using rule 376 (constructor_modifier)
    PUBLIC     reduce using rule 376 (constructor_modifier)
    PRIVATE    reduce using rule 376 (constructor_modifier)
    LANGULAR   reduce using rule 339 (method_modifier)
    LANGULAR   [reduce using rule 376 (constructor_modifier)]
    INT        reduce using rule 335 (field_modifier)
    INT        [reduce using rule 339 (method_modifier)]
    LONG       reduce using rule 335 (field_modifier)
    LONG       [reduce using rule 339 (method_modifier)]
    SHORT      reduce using rule 335 (field_modifier)
    SHORT      [reduce using rule 339 (method_modifier)]
    BYTE       reduce using rule 335 (field_modifier)
    BYTE       [reduce using rule 339 (method_modifier)]
    FLOAT      reduce using rule 335 (field_modifier)
    FLOAT      [reduce using rule 339 (method_modifier)]
    DOUBLE     reduce using rule 335 (field_modifier)
    DOUBLE     [reduce using rule 339 (method_modifier)]
    BOOLEAN    reduce using rule 335 (field_modifier)
    BOOLEAN    [reduce using rule 339 (method_modifier)]
    VOID       reduce using rule 339 (method_modifier)
    PROTECTED  reduce using rule 376 (constructor_modifier)
    $default   reduce using rule 335 (field_modifier)


State 93

  307 type_variable: annotations type_identifier •
  308 class_type: annotations type_identifier • type_arguments_opt

    LT  shift, and go to state 63

    COMMA       reduce using rule 307 (type_variable)
    COMMA       [reduce using rule 312 (type_arguments_opt)]
    AT          reduce using rule 307 (type_variable)
    AT          [reduce using rule 312 (type_arguments_opt)]
    RPAREN      reduce using rule 307 (type_variable)
    RPAREN      [reduce using rule 312 (type_arguments_opt)]
    EQUALS      reduce using rule 307 (type_variable)
    EQUALS      [reduce using rule 312 (type_arguments_opt)]
    DOT         reduce using rule 312 (type_arguments_opt)
    RANGULAR    reduce using rule 307 (type_variable)
    RANGULAR    [reduce using rule 312 (type_arguments_opt)]
    SEMICOLON   reduce using rule 307 (type_variable)
    SEMICOLON   [reduce using rule 312 (type_arguments_opt)]
    COLON       reduce using rule 307 (type_variable)
    COLON       [reduce using rule 312 (type_arguments_opt)]
    OR          reduce using rule 307 (type_variable)
    OR          [reduce using rule 312 (type_arguments_opt)]
    LSPAR       reduce using rule 307 (type_variable)
    LSPAR       [reduce using rule 312 (type_arguments_opt)]
    RSPAR       reduce using rule 307 (type_variable)
    RSPAR       [reduce using rule 312 (type_arguments_opt)]
    QUESTION    reduce using rule 307 (type_variable)
    QUESTION    [reduce using rule 312 (type_arguments_opt)]
    NOT_EQUALS  reduce using rule 307 (type_variable)
    NOT_EQUALS  [reduce using rule 312 (type_arguments_opt)]
    LT          [reduce using rule 307 (type_variable)]
    LT          [reduce using rule 312 (type_arguments_opt)]
    GT          reduce using rule 307 (type_variable)
    GT          [reduce using rule 312 (type_arguments_opt)]
    LE          reduce using rule 307 (type_variable)
    LE          [reduce using rule 312 (type_arguments_opt)]
    GE          reduce using rule 307 (type_variable)
    GE          [reduce using rule 312 (type_arguments_opt)]
    INSTANCEOF  reduce using rule 307 (type_variable)
    INSTANCEOF  [reduce using rule 312 (type_arguments_opt)]
    AND         reduce using rule 307 (type_variable)
    AND         [reduce using rule 312 (type_arguments_opt)]
    XOR         reduce using rule 307 (type_variable)
    XOR         [reduce using rule 312 (type_arguments_opt)]
    RMPARA      reduce using rule 307 (type_variable)
    RMPARA      [reduce using rule 312 (type_arguments_opt)]
    LMPARA      reduce using rule 307 (type_variable)
    LMPARA      [reduce using rule 312 (type_arguments_opt)]
    $default    reduce using rule 307 (type_variable)

    type_arguments      go to state 64
    type_arguments_opt  go to state 65


State 94

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT IDENTIFIER •
    9 type_identifier: IDENTIFIER •

    COMMA       reduce using rule 6 (module_or_package_or_expression_name)
    COMMA       [reduce using rule 9 (type_identifier)]
    AT          reduce using rule 9 (type_identifier)
    LPAREN      reduce using rule 9 (type_identifier)
    RPAREN      reduce using rule 6 (module_or_package_or_expression_name)
    RPAREN      [reduce using rule 9 (type_identifier)]
    IDENTIFIER  reduce using rule 9 (type_identifier)
    DOT         reduce using rule 6 (module_or_package_or_expression_name)
    DOT         [reduce using rule 9 (type_identifier)]
    PUBLIC      reduce using rule 9 (type_identifier)
    PRIVATE     reduce using rule 9 (type_identifier)
    LANGULAR    reduce using rule 9 (type_identifier)
    FINAL       reduce using rule 9 (type_identifier)
    VAR         reduce using rule 9 (type_identifier)
    LSPAR       reduce using rule 6 (module_or_package_or_expression_name)
    LSPAR       [reduce using rule 9 (type_identifier)]
    ELLIPSIS    reduce using rule 9 (type_identifier)
    QUESTION    reduce using rule 6 (module_or_package_or_expression_name)
    QUESTION    [reduce using rule 9 (type_identifier)]
    INT         reduce using rule 9 (type_identifier)
    LONG        reduce using rule 9 (type_identifier)
    SHORT       reduce using rule 9 (type_identifier)
    BYTE        reduce using rule 9 (type_identifier)
    FLOAT       reduce using rule 9 (type_identifier)
    DOUBLE      reduce using rule 9 (type_identifier)
    BOOLEAN     reduce using rule 9 (type_identifier)
    VOID        reduce using rule 9 (type_identifier)
    RMPARA      reduce using rule 6 (module_or_package_or_expression_name)
    RMPARA      [reduce using rule 9 (type_identifier)]
    PROTECTED   reduce using rule 9 (type_identifier)
    $default    reduce using rule 6 (module_or_package_or_expression_name)


State 95

    8 type_name: module_or_package_or_expression_name DOT type_identifier •

    $default  reduce using rule 8 (type_name)


State 96

  262 primary_no_new_array: LPAREN • expression RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 250
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 97

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •
  409 element_value_pair: IDENTIFIER • EQUALS element_value

    EQUALS  shift, and go to state 256

    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    EQUALS    [reduce using rule 5 (module_or_package_or_expression_name)]
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 98

  232 unary_expression: PLUS • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 258
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 99

  233 unary_expression: MINUS • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 259
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 100

  235 pre_increment_expression: PLUS_PLUS • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 260
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 101

  236 pre_decrement_expression: MINUS_MINUS • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 261
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 102

  240 unary_expression_not_plus_minus: TILDE • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 262
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 103

  260 primary_no_new_array: THIS •

    $default  reduce using rule 260 (primary_no_new_array)


State 104

   68 method_invocation: SUPER • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   75 method_reference: SUPER • COLON COLON type_arguments IDENTIFIER
  181 field_access: SUPER • DOT IDENTIFIER

    DOT    shift, and go to state 263
    COLON  shift, and go to state 264


State 105

  280 integral_type: INT •

    $default  reduce using rule 280 (integral_type)


State 106

  281 integral_type: LONG •

    $default  reduce using rule 281 (integral_type)


State 107

  279 integral_type: SHORT •

    $default  reduce using rule 279 (integral_type)


State 108

  278 integral_type: BYTE •

    $default  reduce using rule 278 (integral_type)


State 109

  282 floating_point_type: FLOAT •

    $default  reduce using rule 282 (floating_point_type)


State 110

  283 floating_point_type: DOUBLE •

    $default  reduce using rule 283 (floating_point_type)


State 111

  269 class_literal: BOOLEAN • brackets DOT CLASS

    $default  reduce using rule 272 (brackets)

    brackets  go to state 265


State 112

  270 class_literal: VOID • DOT CLASS

    DOT  shift, and go to state 266


State 113

  241 unary_expression_not_plus_minus: NOT • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 267
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 114

  413 element_value_array_initializer: LMPARA • element_value_list_opt comma_opt RMPARA

    AT           shift, and go to state 31
    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 114
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    conditional_expression                go to state 125
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    annotation                            go to state 156
    element_value                         go to state 268
    element_value_array_initializer       go to state 162
    element_value_list_opt                go to state 269
    element_value_list                    go to state 270


State 115

  258 primary_no_new_array: LITERAL •

    $default  reduce using rule 258 (primary_no_new_array)


State 116

  248 array_creation_expression: NEW • array_creation_folllow

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    array_creation_folllow                go to state 271
    class_type                            go to state 54
    class_or_interface_type               go to state 272
    primitive_type                        go to state 273
    annotations                           go to state 274


State 117

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT IDENTIFIER
    8 type_name: module_or_package_or_expression_name • DOT type_identifier
   66 method_invocation: module_or_package_or_expression_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   78 method_reference: module_or_package_or_expression_name • COLON COLON type_arguments IDENTIFIER
  183 array_access: module_or_package_or_expression_name • LSPAR expression RSPAR
  243 postfix_expression: module_or_package_or_expression_name •
  310 class_type: module_or_package_or_expression_name • DOT annotations type_identifier type_arguments_opt

    DOT    shift, and go to state 275
    COLON  shift, and go to state 276
    LSPAR  shift, and go to state 277

    COLON     [reduce using rule 243 (postfix_expression)]
    $default  reduce using rule 243 (postfix_expression)


State 118

   65 method_invocation: type_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   69                  | type_name • DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   76 method_reference: type_name • DOT SUPER COLON COLON type_arguments IDENTIFIER
  182 field_access: type_name • DOT IDENTIFIER
  261 primary_no_new_array: type_name • DOT THIS
  267 class_literal: type_name • brackets DOT CLASS

    DOT  shift, and go to state 278

    DOT       [reduce using rule 272 (brackets)]
    $default  reduce using rule 272 (brackets)

    brackets  go to state 279


State 119

   64 method_invocation: method_name • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 280


State 120

   10 method_name: unqualified_method_identifier •

    $default  reduce using rule 10 (method_name)


State 121

  265 primary_no_new_array: method_invocation •

    $default  reduce using rule 265 (primary_no_new_array)


State 122

  266 primary_no_new_array: method_reference •

    $default  reduce using rule 266 (primary_no_new_array)


State 123

  263 primary_no_new_array: field_access •

    $default  reduce using rule 263 (primary_no_new_array)


State 124

  264 primary_no_new_array: array_access •

    $default  reduce using rule 264 (primary_no_new_array)


State 125

  410 element_value: conditional_expression •

    $default  reduce using rule 410 (element_value)


State 126

  197 conditional_expression: conditional_or_expression •
  198                       | conditional_or_expression • QUESTION expression COLON conditional_expression
  199                       | conditional_or_expression • QUESTION expression COLON lambda_expression
  201 conditional_or_expression: conditional_or_expression • OR conditional_and_expression

    OR        shift, and go to state 281
    QUESTION  shift, and go to state 282

    $default  reduce using rule 197 (conditional_expression)


State 127

  200 conditional_or_expression: conditional_and_expression •
  203 conditional_and_expression: conditional_and_expression • AND inclusive_or_expression

    AND  shift, and go to state 283

    $default  reduce using rule 200 (conditional_or_expression)


State 128

  202 conditional_and_expression: inclusive_or_expression •
  205 inclusive_or_expression: inclusive_or_expression • OR exclusive_or_expression

    OR  shift, and go to state 284

    OR        [reduce using rule 202 (conditional_and_expression)]
    $default  reduce using rule 202 (conditional_and_expression)


State 129

  204 inclusive_or_expression: exclusive_or_expression •
  207 exclusive_or_expression: exclusive_or_expression • XOR and_expression

    XOR  shift, and go to state 285

    $default  reduce using rule 204 (inclusive_or_expression)


State 130

  206 exclusive_or_expression: and_expression •
  209 and_expression: and_expression • AND equality_expression

    AND  shift, and go to state 286

    AND       [reduce using rule 206 (exclusive_or_expression)]
    $default  reduce using rule 206 (exclusive_or_expression)


State 131

  208 and_expression: equality_expression •
  211 equality_expression: equality_expression • EQUALS relational_expression
  212                    | equality_expression • NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 287
    NOT_EQUALS  shift, and go to state 288

    $default  reduce using rule 208 (and_expression)


State 132

  210 equality_expression: relational_expression •
  214 relational_expression: relational_expression • LT shift_expression
  215                      | relational_expression • GT shift_expression
  216                      | relational_expression • LE shift_expression
  217                      | relational_expression • GE shift_expression
  218                      | relational_expression • INSTANCEOF reference_type

    LT          shift, and go to state 289
    GT          shift, and go to state 290
    LE          shift, and go to state 291
    GE          shift, and go to state 292
    INSTANCEOF  shift, and go to state 293

    $default  reduce using rule 210 (equality_expression)


State 133

  213 relational_expression: shift_expression •
  220 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  221                 | shift_expression • RIGHT_SHIFT additive_expression
  222                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 294
    RIGHT_SHIFT           shift, and go to state 295
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 296

    $default  reduce using rule 213 (relational_expression)


State 134

  219 shift_expression: additive_expression •
  224 additive_expression: additive_expression • PLUS multiplicative_expression
  225                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 297
    MINUS  shift, and go to state 298

    $default  reduce using rule 219 (shift_expression)


State 135

  223 additive_expression: multiplicative_expression •
  227 multiplicative_expression: multiplicative_expression • TIMES unary_expression
  228                          | multiplicative_expression • DIVIDE unary_expression
  229                          | multiplicative_expression • MOD unary_expression

    TIMES   shift, and go to state 299
    DIVIDE  shift, and go to state 300
    MOD     shift, and go to state 301

    $default  reduce using rule 223 (additive_expression)


State 136

  226 multiplicative_expression: unary_expression •

    $default  reduce using rule 226 (multiplicative_expression)


State 137

  230 unary_expression: pre_increment_expression •

    $default  reduce using rule 230 (unary_expression)


State 138

  231 unary_expression: pre_decrement_expression •

    $default  reduce using rule 231 (unary_expression)


State 139

  244 postfix_expression: post_increment_expression •

    $default  reduce using rule 244 (postfix_expression)


State 140

  245 postfix_expression: post_decrement_expression •

    $default  reduce using rule 245 (postfix_expression)


State 141

  234 unary_expression: unary_expression_not_plus_minus •

    $default  reduce using rule 234 (unary_expression)


State 142

  237 post_increment_expression: postfix_expression • PLUS_PLUS
  238 post_decrement_expression: postfix_expression • MINUS_MINUS
  239 unary_expression_not_plus_minus: postfix_expression •

    PLUS_PLUS    shift, and go to state 302
    MINUS_MINUS  shift, and go to state 303

    $default  reduce using rule 239 (unary_expression_not_plus_minus)


State 143

   67 method_invocation: primary • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   77 method_reference: primary • COLON COLON type_arguments IDENTIFIER
  180 field_access: primary • DOT IDENTIFIER
  242 postfix_expression: primary •

    DOT    shift, and go to state 304
    COLON  shift, and go to state 305

    COLON     [reduce using rule 242 (postfix_expression)]
    $default  reduce using rule 242 (postfix_expression)


State 144

  247 primary: array_creation_expression •

    $default  reduce using rule 247 (primary)


State 145

  184 array_access: primary_no_new_array • LSPAR expression RSPAR
  246 primary: primary_no_new_array •

    LSPAR  shift, and go to state 306

    $default  reduce using rule 246 (primary)


State 146

  259 primary_no_new_array: class_literal •

    $default  reduce using rule 259 (primary_no_new_array)


State 147

  268 class_literal: numeric_type • brackets DOT CLASS

    $default  reduce using rule 272 (brackets)

    brackets  go to state 307


State 148

  276 numeric_type: integral_type •

    $default  reduce using rule 276 (numeric_type)


State 149

  277 numeric_type: floating_point_type •

    $default  reduce using rule 277 (numeric_type)


State 150

  395 array_type: type_variable • dims

    $default  reduce using rule 399 (annotations)

    dims         go to state 308
    annotations  go to state 309


State 151

   79 method_reference: class_type • COLON COLON type_arguments NEW
  313 class_or_interface_type: class_type •

    COLON  shift, and go to state 310

    $default  reduce using rule 313 (class_or_interface_type)


State 152

  309 class_type: class_or_interface_type • DOT annotations type_identifier type_arguments_opt
  394 array_type: class_or_interface_type • dims

    DOT  shift, and go to state 49

    $default  reduce using rule 399 (annotations)

    dims         go to state 311
    annotations  go to state 309


State 153

   80 method_reference: array_type • COLON COLON NEW

    COLON  shift, and go to state 312


State 154

  393 array_type: primitive_type • dims

    $default  reduce using rule 399 (annotations)

    dims         go to state 313
    annotations  go to state 309


State 155

  307 type_variable: annotations • type_identifier
  308 class_type: annotations • type_identifier type_arguments_opt
  396 primitive_type: annotations • numeric_type
  397               | annotations • boolean
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 105
    LONG        shift, and go to state 106
    SHORT       shift, and go to state 107
    BYTE        shift, and go to state 108
    FLOAT       shift, and go to state 109
    DOUBLE      shift, and go to state 110
    BOOLEAN     shift, and go to state 231

    type_identifier      go to state 93
    numeric_type         go to state 314
    integral_type        go to state 148
    floating_point_type  go to state 149
    boolean              go to state 315
    annotation           go to state 32


State 156

  411 element_value: annotation •

    $default  reduce using rule 411 (element_value)


State 157

  401 annotation_body: LPAREN annotation_content • RPAREN

    RPAREN  shift, and go to state 316


State 158

  404 annotation_content: element_value_pairs_list_opt •

    $default  reduce using rule 404 (annotation_content)


State 159

  405 element_value_pairs_list_opt: element_value_pairs_list •
  407 element_value_pairs_list: element_value_pairs_list • COMMA element_value_pair

    COMMA  shift, and go to state 317

    $default  reduce using rule 405 (element_value_pairs_list_opt)


State 160

  408 element_value_pairs_list: element_value_pair •

    $default  reduce using rule 408 (element_value_pairs_list)


State 161

  403 annotation_content: element_value •

    $default  reduce using rule 403 (annotation_content)


State 162

  412 element_value: element_value_array_initializer •

    $default  reduce using rule 412 (element_value)


State 163

  310 class_type: module_or_package_or_expression_name DOT annotations type_identifier • type_arguments_opt

    LT  shift, and go to state 63

    LT        [reduce using rule 312 (type_arguments_opt)]
    $default  reduce using rule 312 (type_arguments_opt)

    type_arguments      go to state 64
    type_arguments_opt  go to state 318


State 164

  309 class_type: class_or_interface_type DOT annotations type_identifier • type_arguments_opt

    LT  shift, and go to state 63

    LT        [reduce using rule 312 (type_arguments_opt)]
    $default  reduce using rule 312 (type_arguments_opt)

    type_arguments      go to state 64
    type_arguments_opt  go to state 319


State 165

   81 type_arguments: LT type_argument_list • GT
   82 type_argument_list: type_argument_list • COMMA type_argument

    COMMA  shift, and go to state 320
    GT     shift, and go to state 321


State 166

   83 type_argument_list: type_argument •

    $default  reduce using rule 83 (type_argument_list)


State 167

   85 type_argument: wildcard •

    $default  reduce using rule 85 (type_argument)


State 168

  392 reference_type: type_variable •
  395 array_type: type_variable • dims

    AT        reduce using rule 399 (annotations)
    LSPAR     reduce using rule 399 (annotations)
    $default  reduce using rule 392 (reference_type)

    dims         go to state 308
    annotations  go to state 309


State 169

  309 class_type: class_or_interface_type • DOT annotations type_identifier type_arguments_opt
  390 reference_type: class_or_interface_type •
  394 array_type: class_or_interface_type • dims

    DOT  shift, and go to state 49

    AT        reduce using rule 399 (annotations)
    LSPAR     reduce using rule 399 (annotations)
    $default  reduce using rule 390 (reference_type)

    dims         go to state 311
    annotations  go to state 309


State 170

   84 type_argument: reference_type •

    $default  reduce using rule 84 (type_argument)


State 171

  391 reference_type: array_type •

    $default  reduce using rule 391 (reference_type)


State 172

   86 wildcard: annotations • QUESTION wildcard_bound_opt
  307 type_variable: annotations • type_identifier
  308 class_type: annotations • type_identifier type_arguments_opt
  396 primitive_type: annotations • numeric_type
  397               | annotations • boolean
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16
    QUESTION    shift, and go to state 322
    INT         shift, and go to state 105
    LONG        shift, and go to state 106
    SHORT       shift, and go to state 107
    BYTE        shift, and go to state 108
    FLOAT       shift, and go to state 109
    DOUBLE      shift, and go to state 110
    BOOLEAN     shift, and go to state 231

    type_identifier      go to state 93
    numeric_type         go to state 314
    integral_type        go to state 148
    floating_point_type  go to state 149
    boolean              go to state 315
    annotation           go to state 32


State 173

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •
   51 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 323

    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    COLON     [reduce using rule 5 (module_or_package_or_expression_name)]
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 174

   50 empty_statement: SEMICOLON •

    $default  reduce using rule 50 (empty_statement)


State 175

  132 return: RETURN •

    $default  reduce using rule 132 (return)


State 176

  135 try_statement: TRY • block catches_opt finally_opt

    LMPARA  shift, and go to state 72

    block  go to state 324


State 177

  133 synchronized_statement: SYNCHRONIZED • LPAREN expression RPAREN block

    LPAREN  shift, and go to state 325


State 178

  134 throw_statement: THROW • expression SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 326
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 179

  123 assert: ASSERT •

    $default  reduce using rule 123 (assert)


State 180

  126 break: BREAK •

    $default  reduce using rule 126 (break)


State 181

  129 continue: CONTINUE •

    $default  reduce using rule 129 (continue)


State 182

  103 if: IF •

    $default  reduce using rule 103 (if)


State 183

  106 while: WHILE •

    $default  reduce using rule 106 (while)


State 184

  108 for: FOR •

    $default  reduce using rule 108 (for)


State 185

   60 class_instance_creation_expression: NEW • type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body
  248 array_creation_expression: NEW • array_creation_folllow

    IDENTIFIER  shift, and go to state 33
    LT          shift, and go to state 63

    AT          reduce using rule 312 (type_arguments_opt)
    AT          [reduce using rule 399 (annotations)]
    IDENTIFIER  [reduce using rule 312 (type_arguments_opt)]
    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_arguments                        go to state 64
    array_creation_folllow                go to state 271
    class_type                            go to state 54
    type_arguments_opt                    go to state 327
    class_or_interface_type               go to state 272
    primitive_type                        go to state 273
    annotations                           go to state 274


State 186

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT IDENTIFIER
    8 type_name: module_or_package_or_expression_name • DOT type_identifier
   66 method_invocation: module_or_package_or_expression_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   78 method_reference: module_or_package_or_expression_name • COLON COLON type_arguments IDENTIFIER
  177 left_hand_side: module_or_package_or_expression_name •
  183 array_access: module_or_package_or_expression_name • LSPAR expression RSPAR
  243 postfix_expression: module_or_package_or_expression_name •
  310 class_type: module_or_package_or_expression_name • DOT annotations type_identifier type_arguments_opt

    DOT    shift, and go to state 275
    COLON  shift, and go to state 276
    LSPAR  shift, and go to state 277

    EQUALS                       reduce using rule 177 (left_hand_side)
    EQUALS                       [reduce using rule 243 (postfix_expression)]
    COLON                        [reduce using rule 243 (postfix_expression)]
    TIMES_EQUALS                 reduce using rule 177 (left_hand_side)
    DIVIDE_EQUALS                reduce using rule 177 (left_hand_side)
    MOD_EQUALS                   reduce using rule 177 (left_hand_side)
    PLUS_EQUALS                  reduce using rule 177 (left_hand_side)
    MINUS_EQUALS                 reduce using rule 177 (left_hand_side)
    LEFT_SHIFT_EQUALS            reduce using rule 177 (left_hand_side)
    RIGHT_SHIFT_EQUALS           reduce using rule 177 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 177 (left_hand_side)
    AND_EQUALS                   reduce using rule 177 (left_hand_side)
    XOR_EQUALS                   reduce using rule 177 (left_hand_side)
    OR_EQUALS                    reduce using rule 177 (left_hand_side)
    $default                     reduce using rule 243 (postfix_expression)


State 187

   40 statement_without_trailing_substatement: block •

    $default  reduce using rule 40 (statement_without_trailing_substatement)


State 188

   12 block: LMPARA block_statements_opt • RMPARA

    RMPARA  shift, and go to state 328


State 189

   13 block_statements_opt: block_statements •
   15 block_statements: block_statements • block_statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    COLON        reduce using rule 74 (method_reference)
    FINAL        reduce using rule 29 (variable_modifiers)
    FINAL        [reduce using rule 288 (class_modifiers)]
    VAR          reduce using rule 29 (variable_modifiers)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    RMPARA       reduce using rule 13 (block_statements_opt)
    $default     reduce using rule 288 (class_modifiers)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    block_statement                          go to state 329
    local_class_or_interface_declaration     go to state 191
    local_variable_declaration_statement     go to state 192
    local_variable_declaration               go to state 193
    variable_modifiers                       go to state 194
    statement                                go to state 195
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    class_declaration                        go to state 229
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 190

   16 block_statements: block_statement •

    $default  reduce using rule 16 (block_statements)


State 191

   17 block_statement: local_class_or_interface_declaration •

    $default  reduce using rule 17 (block_statement)


State 192

   18 block_statement: local_variable_declaration_statement •

    $default  reduce using rule 18 (block_statement)


State 193

   21 local_variable_declaration_statement: local_variable_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 330


State 194

   22 local_variable_declaration: variable_modifiers • local_variable_type variable_declarators_list
   28 variable_modifiers: variable_modifiers • variable_modifier

    AT       shift, and go to state 31
    FINAL    shift, and go to state 331
    VAR      shift, and go to state 332
    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    variable_modifier     go to state 333
    final                 go to state 334
    local_variable_type   go to state 335
    var                   go to state 336
    unanntype             go to state 337
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235
    annotation            go to state 338


State 195

   19 block_statement: statement •

    $default  reduce using rule 19 (block_statement)


State 196

   35 statement: statement_without_trailing_substatement •

    $default  reduce using rule 35 (statement)


State 197

   41 statement_without_trailing_substatement: empty_statement •

    $default  reduce using rule 41 (statement_without_trailing_substatement)


State 198

   36 statement: labeled_statement •

    $default  reduce using rule 36 (statement)


State 199

   42 statement_without_trailing_substatement: expression_statement •

    $default  reduce using rule 42 (statement_without_trailing_substatement)


State 200

   52 expression_statement: statement_expression • SEMICOLON

    SEMICOLON  shift, and go to state 339


State 201

   59 statement_expression: class_instance_creation_expression •

    $default  reduce using rule 59 (statement_expression)


State 202

   58 statement_expression: method_invocation •
  265 primary_no_new_array: method_invocation •

    COMMA      reduce using rule 58 (statement_expression)
    RPAREN     reduce using rule 58 (statement_expression)
    SEMICOLON  reduce using rule 58 (statement_expression)
    $default   reduce using rule 265 (primary_no_new_array)


State 203

   37 statement: if_then_else_statement •

    $default  reduce using rule 37 (statement)


State 204

   89 if_then_else_statement: if • LPAREN expression RPAREN if_footer

    LPAREN  shift, and go to state 340


State 205

   38 statement: while_statement •

    $default  reduce using rule 38 (statement)


State 206

  105 while_statement: while • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 341


State 207

   39 statement: for_statement •

    $default  reduce using rule 39 (statement)


State 208

  107 for_statement: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN  shift, and go to state 342


State 209

   43 statement_without_trailing_substatement: assert_statement •

    $default  reduce using rule 43 (statement_without_trailing_substatement)


State 210

  121 assert_statement: assert • expression SEMICOLON
  122                 | assert • expression COLON expression SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 343
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 211

   44 statement_without_trailing_substatement: break_statement •

    $default  reduce using rule 44 (statement_without_trailing_substatement)


State 212

  124 break_statement: break • SEMICOLON
  125                | break • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 344
    SEMICOLON   shift, and go to state 345


State 213

   45 statement_without_trailing_substatement: continue_statement •

    $default  reduce using rule 45 (statement_without_trailing_substatement)


State 214

  127 continue_statement: continue • SEMICOLON
  128                   | continue • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 346
    SEMICOLON   shift, and go to state 347


State 215

   46 statement_without_trailing_substatement: return_statement •

    $default  reduce using rule 46 (statement_without_trailing_substatement)


State 216

  130 return_statement: return • SEMICOLON
  131                 | return • expression SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    SEMICOLON    shift, and go to state 348
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    SEMICOLON    [reduce using rule 74 (method_reference)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 349
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 217

   47 statement_without_trailing_substatement: synchronized_statement •

    $default  reduce using rule 47 (statement_without_trailing_substatement)


State 218

   48 statement_without_trailing_substatement: throw_statement •

    $default  reduce using rule 48 (statement_without_trailing_substatement)


State 219

   49 statement_without_trailing_substatement: try_statement •

    $default  reduce using rule 49 (statement_without_trailing_substatement)


State 220

   53 statement_expression: assignment •

    $default  reduce using rule 53 (statement_expression)


State 221

  176 assignment: left_hand_side • assignment_operator expression

    EQUALS                       shift, and go to state 350
    TIMES_EQUALS                 shift, and go to state 351
    DIVIDE_EQUALS                shift, and go to state 352
    MOD_EQUALS                   shift, and go to state 353
    PLUS_EQUALS                  shift, and go to state 354
    MINUS_EQUALS                 shift, and go to state 355
    LEFT_SHIFT_EQUALS            shift, and go to state 356
    RIGHT_SHIFT_EQUALS           shift, and go to state 357
    UNSIGNED_RIGHT_SHIFT_EQUALS  shift, and go to state 358
    AND_EQUALS                   shift, and go to state 359
    XOR_EQUALS                   shift, and go to state 360
    OR_EQUALS                    shift, and go to state 361

    assignment_operator  go to state 362


State 222

  178 left_hand_side: field_access •
  263 primary_no_new_array: field_access •

    EQUALS                       reduce using rule 178 (left_hand_side)
    EQUALS                       [reduce using rule 263 (primary_no_new_array)]
    TIMES_EQUALS                 reduce using rule 178 (left_hand_side)
    DIVIDE_EQUALS                reduce using rule 178 (left_hand_side)
    MOD_EQUALS                   reduce using rule 178 (left_hand_side)
    PLUS_EQUALS                  reduce using rule 178 (left_hand_side)
    MINUS_EQUALS                 reduce using rule 178 (left_hand_side)
    LEFT_SHIFT_EQUALS            reduce using rule 178 (left_hand_side)
    RIGHT_SHIFT_EQUALS           reduce using rule 178 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 178 (left_hand_side)
    AND_EQUALS                   reduce using rule 178 (left_hand_side)
    XOR_EQUALS                   reduce using rule 178 (left_hand_side)
    OR_EQUALS                    reduce using rule 178 (left_hand_side)
    $default                     reduce using rule 263 (primary_no_new_array)


State 223

  179 left_hand_side: array_access •
  264 primary_no_new_array: array_access •

    EQUALS                       reduce using rule 179 (left_hand_side)
    EQUALS                       [reduce using rule 264 (primary_no_new_array)]
    TIMES_EQUALS                 reduce using rule 179 (left_hand_side)
    DIVIDE_EQUALS                reduce using rule 179 (left_hand_side)
    MOD_EQUALS                   reduce using rule 179 (left_hand_side)
    PLUS_EQUALS                  reduce using rule 179 (left_hand_side)
    MINUS_EQUALS                 reduce using rule 179 (left_hand_side)
    LEFT_SHIFT_EQUALS            reduce using rule 179 (left_hand_side)
    RIGHT_SHIFT_EQUALS           reduce using rule 179 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 179 (left_hand_side)
    AND_EQUALS                   reduce using rule 179 (left_hand_side)
    XOR_EQUALS                   reduce using rule 179 (left_hand_side)
    OR_EQUALS                    reduce using rule 179 (left_hand_side)
    $default                     reduce using rule 264 (primary_no_new_array)


State 224

   54 statement_expression: pre_increment_expression •

    $default  reduce using rule 54 (statement_expression)


State 225

   55 statement_expression: pre_decrement_expression •

    $default  reduce using rule 55 (statement_expression)


State 226

   56 statement_expression: post_increment_expression •
  244 postfix_expression: post_increment_expression •

    PLUS_PLUS    reduce using rule 244 (postfix_expression)
    MINUS_MINUS  reduce using rule 244 (postfix_expression)
    $default     reduce using rule 56 (statement_expression)


State 227

   57 statement_expression: post_decrement_expression •
  245 postfix_expression: post_decrement_expression •

    PLUS_PLUS    reduce using rule 245 (postfix_expression)
    MINUS_MINUS  reduce using rule 245 (postfix_expression)
    $default     reduce using rule 57 (statement_expression)


State 228

  237 post_increment_expression: postfix_expression • PLUS_PLUS
  238 post_decrement_expression: postfix_expression • MINUS_MINUS

    PLUS_PLUS    shift, and go to state 302
    MINUS_MINUS  shift, and go to state 303


State 229

   20 local_class_or_interface_declaration: class_declaration •

    $default  reduce using rule 20 (local_class_or_interface_declaration)


State 230

  370 static_initializer: STATIC block •

    $default  reduce using rule 370 (static_initializer)


State 231

  284 boolean: BOOLEAN •

    $default  reduce using rule 284 (boolean)


State 232

  327 field_declaration: field_modifier unanntype • variable_declarators_list SEMICOLON

    IDENTIFIER  shift, and go to state 363

    variable_declarators_list  go to state 364
    variable_declarator        go to state 365
    variable_declarator_id     go to state 366


State 233

  273 unanntype: unann_primitive_type •

    $default  reduce using rule 273 (unanntype)


State 234

  274 unann_primitive_type: numeric_type •

    $default  reduce using rule 274 (unann_primitive_type)


State 235

  275 unann_primitive_type: boolean •

    $default  reduce using rule 275 (unann_primitive_type)


State 236

  350 result: VOID •

    $default  reduce using rule 350 (result)


State 237

  349 result: unanntype •

    $default  reduce using rule 349 (result)


State 238

  348 method_header: type_parameters • annotations result method_declarator throws_empty

    $default  reduce using rule 399 (annotations)

    annotations  go to state 367


State 239

  336 method_declaration: method_modifier method_header • method_body

    SEMICOLON  shift, and go to state 368
    LMPARA     shift, and go to state 72

    block        go to state 369
    method_body  go to state 370


State 240

  347 method_header: result • method_declarator throws_empty

    IDENTIFIER  shift, and go to state 371

    method_declarator  go to state 372


State 241

  378 constructor_declarator: type_parameters • simple_type_name LPAREN reciever_parameter formal_parameter_list RPAREN

    IDENTIFIER  shift, and go to state 16

    type_identifier   go to state 373
    simple_type_name  go to state 374


State 242

  371 constructor_declaration: constructor_modifiers constructor_declarator • throws_empty constructor_body

    THROWS  shift, and go to state 375

    $default  reduce using rule 352 (throws_empty)

    throws_empty  go to state 376
    throws        go to state 377


State 243

  374 constructor_modifier: PUBLIC •

    $default  reduce using rule 374 (constructor_modifier)


State 244

  375 constructor_modifier: PRIVATE •

    $default  reduce using rule 375 (constructor_modifier)


State 245

  377 constructor_modifier: PROTECTED •

    $default  reduce using rule 377 (constructor_modifier)


State 246

  372 constructor_modifiers: constructor_modifier constructor_modifiers •

    $default  reduce using rule 372 (constructor_modifiers)


State 247

  376 constructor_modifier: annotation •

    $default  reduce using rule 376 (constructor_modifier)


State 248

  152 lambda_parameters: LPAREN • lambda_parameter_list_opt RPAREN
  262 primary_no_new_array: LPAREN • expression RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 378
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    RPAREN       reduce using rule 74 (method_reference)
    RPAREN       [reduce using rule 154 (lambda_parameter_list_opt)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    FINAL        reduce using rule 29 (variable_modifiers)
    VAR          reduce using rule 29 (variable_modifiers)
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    variable_modifiers                    go to state 379
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 250
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    lambda_parameter_list_opt             go to state 380
    lambda_parameter_list                 go to state 381
    lambda_parameter                      go to state 382
    variable_arity_parameter              go to state 383
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 249

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •
  151 lambda_parameters: IDENTIFIER •

    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    ARROW     reduce using rule 151 (lambda_parameters)
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 250

  262 primary_no_new_array: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 384


State 251

  148 expression: lambda_expression •

    $default  reduce using rule 148 (expression)


State 252

  150 lambda_expression: lambda_parameters • ARROW lambda_body

    ARROW  shift, and go to state 385


State 253

  149 expression: assignment_expression •

    $default  reduce using rule 149 (expression)


State 254

  175 assignment_expression: assignment •

    $default  reduce using rule 175 (assignment_expression)


State 255

  174 assignment_expression: conditional_expression •

    $default  reduce using rule 174 (assignment_expression)


State 256

  409 element_value_pair: IDENTIFIER EQUALS • element_value

    AT           shift, and go to state 31
    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 114
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    conditional_expression                go to state 125
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    annotation                            go to state 156
    element_value                         go to state 386
    element_value_array_initializer       go to state 162


State 257

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •

    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 258

  232 unary_expression: PLUS unary_expression •

    $default  reduce using rule 232 (unary_expression)


State 259

  233 unary_expression: MINUS unary_expression •

    $default  reduce using rule 233 (unary_expression)


State 260

  235 pre_increment_expression: PLUS_PLUS unary_expression •

    $default  reduce using rule 235 (pre_increment_expression)


State 261

  236 pre_decrement_expression: MINUS_MINUS unary_expression •

    $default  reduce using rule 236 (pre_decrement_expression)


State 262

  240 unary_expression_not_plus_minus: TILDE unary_expression •

    $default  reduce using rule 240 (unary_expression_not_plus_minus)


State 263

   68 method_invocation: SUPER DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  181 field_access: SUPER DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 387
    LT          shift, and go to state 63

    type_arguments  go to state 388


State 264

   75 method_reference: SUPER COLON • COLON type_arguments IDENTIFIER

    COLON  shift, and go to state 389


State 265

  269 class_literal: BOOLEAN brackets • DOT CLASS
  271 brackets: brackets • LSPAR RSPAR

    DOT    shift, and go to state 390
    LSPAR  shift, and go to state 391


State 266

  270 class_literal: VOID DOT • CLASS

    CLASS  shift, and go to state 392


State 267

  241 unary_expression_not_plus_minus: NOT unary_expression •

    $default  reduce using rule 241 (unary_expression_not_plus_minus)


State 268

  415 element_value_list: element_value • element_values

    $default  reduce using rule 417 (element_values)

    element_values  go to state 393


State 269

  413 element_value_array_initializer: LMPARA element_value_list_opt • comma_opt RMPARA

    COMMA  shift, and go to state 394

    $default  reduce using rule 421 (comma_opt)

    comma_opt  go to state 395


State 270

  414 element_value_list_opt: element_value_list •

    $default  reduce using rule 414 (element_value_list_opt)


State 271

  248 array_creation_expression: NEW array_creation_folllow •

    $default  reduce using rule 248 (array_creation_expression)


State 272

  250 array_creation_folllow: class_or_interface_type • array_creation_type_follow
  309 class_type: class_or_interface_type • DOT annotations type_identifier type_arguments_opt

    DOT  shift, and go to state 49

    $default  reduce using rule 399 (annotations)

    dims                        go to state 396
    array_creation_type_follow  go to state 397
    dimexprs                    go to state 398
    dimexpr                     go to state 399
    annotations                 go to state 400


State 273

  249 array_creation_folllow: primitive_type • array_creation_type_follow

    $default  reduce using rule 399 (annotations)

    dims                        go to state 396
    array_creation_type_follow  go to state 401
    dimexprs                    go to state 398
    dimexpr                     go to state 399
    annotations                 go to state 400


State 274

  308 class_type: annotations • type_identifier type_arguments_opt
  396 primitive_type: annotations • numeric_type
  397               | annotations • boolean
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 105
    LONG        shift, and go to state 106
    SHORT       shift, and go to state 107
    BYTE        shift, and go to state 108
    FLOAT       shift, and go to state 109
    DOUBLE      shift, and go to state 110
    BOOLEAN     shift, and go to state 231

    type_identifier      go to state 50
    numeric_type         go to state 314
    integral_type        go to state 148
    floating_point_type  go to state 149
    boolean              go to state 315
    annotation           go to state 32


State 275

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT • IDENTIFIER
    8 type_name: module_or_package_or_expression_name DOT • type_identifier
   66 method_invocation: module_or_package_or_expression_name DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  310 class_type: module_or_package_or_expression_name DOT • annotations type_identifier type_arguments_opt

    IDENTIFIER  shift, and go to state 94
    LT          shift, and go to state 63

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    type_identifier  go to state 95
    type_arguments   go to state 402
    annotations      go to state 61


State 276

   78 method_reference: module_or_package_or_expression_name COLON • COLON type_arguments IDENTIFIER

    COLON  shift, and go to state 403


State 277

  183 array_access: module_or_package_or_expression_name LSPAR • expression RSPAR

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 404
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 278

   65 method_invocation: type_name DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   69                  | type_name DOT • SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   76 method_reference: type_name DOT • SUPER COLON COLON type_arguments IDENTIFIER
  182 field_access: type_name DOT • IDENTIFIER
  261 primary_no_new_array: type_name DOT • THIS

    IDENTIFIER  shift, and go to state 405
    LT          shift, and go to state 63
    THIS        shift, and go to state 406
    SUPER       shift, and go to state 407

    type_arguments  go to state 408


State 279

  267 class_literal: type_name brackets • DOT CLASS
  271 brackets: brackets • LSPAR RSPAR

    DOT    shift, and go to state 409
    LSPAR  shift, and go to state 391


State 280

   64 method_invocation: method_name LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 410
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 281

  201 conditional_or_expression: conditional_or_expression OR • conditional_and_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    conditional_and_expression            go to state 413
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 282

  198 conditional_expression: conditional_or_expression QUESTION • expression COLON conditional_expression
  199                       | conditional_or_expression QUESTION • expression COLON lambda_expression

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 414
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 283

  203 conditional_and_expression: conditional_and_expression AND • inclusive_or_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    inclusive_or_expression               go to state 415
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 284

  205 inclusive_or_expression: inclusive_or_expression OR • exclusive_or_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    exclusive_or_expression               go to state 416
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 285

  207 exclusive_or_expression: exclusive_or_expression XOR • and_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    and_expression                        go to state 417
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 286

  209 and_expression: and_expression AND • equality_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    equality_expression                   go to state 418
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 287

  211 equality_expression: equality_expression EQUALS • relational_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    relational_expression                 go to state 419
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 288

  212 equality_expression: equality_expression NOT_EQUALS • relational_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    relational_expression                 go to state 420
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 289

  214 relational_expression: relational_expression LT • shift_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    shift_expression                      go to state 421
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 290

  215 relational_expression: relational_expression GT • shift_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    shift_expression                      go to state 422
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 291

  216 relational_expression: relational_expression LE • shift_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    shift_expression                      go to state 423
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 292

  217 relational_expression: relational_expression GE • shift_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    shift_expression                      go to state 424
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 293

  218 relational_expression: relational_expression INSTANCEOF • reference_type

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_variable                         go to state 168
    class_type                            go to state 54
    class_or_interface_type               go to state 169
    reference_type                        go to state 425
    array_type                            go to state 171
    primitive_type                        go to state 154
    annotations                           go to state 155


State 294

  220 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    additive_expression                   go to state 426
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 295

  221 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    additive_expression                   go to state 427
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 296

  222 shift_expression: shift_expression UNSIGNED_RIGHT_SHIFT • additive_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    additive_expression                   go to state 428
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 297

  224 additive_expression: additive_expression PLUS • multiplicative_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    multiplicative_expression             go to state 429
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 298

  225 additive_expression: additive_expression MINUS • multiplicative_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    multiplicative_expression             go to state 430
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 299

  227 multiplicative_expression: multiplicative_expression TIMES • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 431
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 300

  228 multiplicative_expression: multiplicative_expression DIVIDE • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 432
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 301

  229 multiplicative_expression: multiplicative_expression MOD • unary_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    unary_expression                      go to state 433
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 302

  237 post_increment_expression: postfix_expression PLUS_PLUS •

    $default  reduce using rule 237 (post_increment_expression)


State 303

  238 post_decrement_expression: postfix_expression MINUS_MINUS •

    $default  reduce using rule 238 (post_decrement_expression)


State 304

   67 method_invocation: primary DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  180 field_access: primary DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 434
    LT          shift, and go to state 63

    type_arguments  go to state 435


State 305

   77 method_reference: primary COLON • COLON type_arguments IDENTIFIER

    COLON  shift, and go to state 436


State 306

  184 array_access: primary_no_new_array LSPAR • expression RSPAR

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 437
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 307

  268 class_literal: numeric_type brackets • DOT CLASS
  271 brackets: brackets • LSPAR RSPAR

    DOT    shift, and go to state 438
    LSPAR  shift, and go to state 391


State 308

  395 array_type: type_variable dims •

    $default  reduce using rule 395 (array_type)


State 309

  167 dims: annotations • LSPAR RSPAR dim
  398 annotations: annotations • annotation

    AT     shift, and go to state 31
    LSPAR  shift, and go to state 439

    annotation  go to state 32


State 310

   79 method_reference: class_type COLON • COLON type_arguments NEW

    COLON  shift, and go to state 440


State 311

  394 array_type: class_or_interface_type dims •

    $default  reduce using rule 394 (array_type)


State 312

   80 method_reference: array_type COLON • COLON NEW

    COLON  shift, and go to state 441


State 313

  393 array_type: primitive_type dims •

    $default  reduce using rule 393 (array_type)


State 314

  396 primitive_type: annotations numeric_type •

    $default  reduce using rule 396 (primitive_type)


State 315

  397 primitive_type: annotations boolean •

    $default  reduce using rule 397 (primitive_type)


State 316

  401 annotation_body: LPAREN annotation_content RPAREN •

    $default  reduce using rule 401 (annotation_body)


State 317

  407 element_value_pairs_list: element_value_pairs_list COMMA • element_value_pair

    IDENTIFIER  shift, and go to state 442

    element_value_pair  go to state 443


State 318

  310 class_type: module_or_package_or_expression_name DOT annotations type_identifier type_arguments_opt •

    $default  reduce using rule 310 (class_type)


State 319

  309 class_type: class_or_interface_type DOT annotations type_identifier type_arguments_opt •

    $default  reduce using rule 309 (class_type)


State 320

   82 type_argument_list: type_argument_list COMMA • type_argument

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_argument                         go to state 444
    wildcard                              go to state 167
    type_variable                         go to state 168
    class_type                            go to state 54
    class_or_interface_type               go to state 169
    reference_type                        go to state 170
    array_type                            go to state 171
    primitive_type                        go to state 154
    annotations                           go to state 172


State 321

   81 type_arguments: LT type_argument_list GT •

    $default  reduce using rule 81 (type_arguments)


State 322

   86 wildcard: annotations QUESTION • wildcard_bound_opt

    SUPER    shift, and go to state 445
    EXTENDS  shift, and go to state 446

    wildcard_bound_opt  go to state 447


State 323

   51 labeled_statement: IDENTIFIER COLON • statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 448
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 324

  135 try_statement: TRY block • catches_opt finally_opt

    CATCH  shift, and go to state 449

    $default  reduce using rule 141 (catches_opt)

    catches       go to state 450
    catches_opt   go to state 451
    catch_clause  go to state 452
    catch         go to state 453


State 325

  133 synchronized_statement: SYNCHRONIZED LPAREN • expression RPAREN block

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 454
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 326

  134 throw_statement: THROW expression • SEMICOLON

    SEMICOLON  shift, and go to state 455


State 327

   60 class_instance_creation_expression: NEW type_arguments_opt • class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body

    $default  reduce using rule 399 (annotations)

    class_or_interface_type_to_instantiate  go to state 456
    annotations                             go to state 457


State 328

   12 block: LMPARA block_statements_opt RMPARA •

    $default  reduce using rule 12 (block)


State 329

   15 block_statements: block_statements block_statement •

    $default  reduce using rule 15 (block_statements)


State 330

   21 local_variable_declaration_statement: local_variable_declaration SEMICOLON •

    $default  reduce using rule 21 (local_variable_declaration_statement)


State 331

   32 final: FINAL •

    $default  reduce using rule 32 (final)


State 332

  165 var: VAR •

    $default  reduce using rule 165 (var)


State 333

   28 variable_modifiers: variable_modifiers variable_modifier •

    $default  reduce using rule 28 (variable_modifiers)


State 334

   31 variable_modifier: final •

    $default  reduce using rule 31 (variable_modifier)


State 335

   22 local_variable_declaration: variable_modifiers local_variable_type • variable_declarators_list

    IDENTIFIER  shift, and go to state 363

    variable_declarators_list  go to state 458
    variable_declarator        go to state 365
    variable_declarator_id     go to state 366


State 336

   34 local_variable_type: var •

    $default  reduce using rule 34 (local_variable_type)


State 337

   33 local_variable_type: unanntype •

    $default  reduce using rule 33 (local_variable_type)


State 338

   30 variable_modifier: annotation •

    $default  reduce using rule 30 (variable_modifier)


State 339

   52 expression_statement: statement_expression SEMICOLON •

    $default  reduce using rule 52 (expression_statement)


State 340

   89 if_then_else_statement: if LPAREN • expression RPAREN if_footer

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 459
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 341

  105 while_statement: while LPAREN • expression RPAREN statement

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 460
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 342

  107 for_statement: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    SEMICOLON    reduce using rule 110 (for_init_opt)
    COLON        reduce using rule 74 (method_reference)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 29 (variable_modifiers)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    local_variable_declaration            go to state 461
    variable_modifiers                    go to state 194
    statement_expression                  go to state 462
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    for_init_opt                          go to state 463
    for_init                              go to state 464
    statement_expression_list             go to state 465
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 343

  121 assert_statement: assert expression • SEMICOLON
  122                 | assert expression • COLON expression SEMICOLON

    SEMICOLON  shift, and go to state 466
    COLON      shift, and go to state 467


State 344

  125 break_statement: break IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 468


State 345

  124 break_statement: break SEMICOLON •

    $default  reduce using rule 124 (break_statement)


State 346

  128 continue_statement: continue IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 469


State 347

  127 continue_statement: continue SEMICOLON •

    $default  reduce using rule 127 (continue_statement)


State 348

  130 return_statement: return SEMICOLON •

    $default  reduce using rule 130 (return_statement)


State 349

  131 return_statement: return expression • SEMICOLON

    SEMICOLON  shift, and go to state 470


State 350

  185 assignment_operator: EQUALS •

    $default  reduce using rule 185 (assignment_operator)


State 351

  186 assignment_operator: TIMES_EQUALS •

    $default  reduce using rule 186 (assignment_operator)


State 352

  187 assignment_operator: DIVIDE_EQUALS •

    $default  reduce using rule 187 (assignment_operator)


State 353

  188 assignment_operator: MOD_EQUALS •

    $default  reduce using rule 188 (assignment_operator)


State 354

  189 assignment_operator: PLUS_EQUALS •

    $default  reduce using rule 189 (assignment_operator)


State 355

  190 assignment_operator: MINUS_EQUALS •

    $default  reduce using rule 190 (assignment_operator)


State 356

  191 assignment_operator: LEFT_SHIFT_EQUALS •

    $default  reduce using rule 191 (assignment_operator)


State 357

  192 assignment_operator: RIGHT_SHIFT_EQUALS •

    $default  reduce using rule 192 (assignment_operator)


State 358

  193 assignment_operator: UNSIGNED_RIGHT_SHIFT_EQUALS •

    $default  reduce using rule 193 (assignment_operator)


State 359

  194 assignment_operator: AND_EQUALS •

    $default  reduce using rule 194 (assignment_operator)


State 360

  195 assignment_operator: XOR_EQUALS •

    $default  reduce using rule 195 (assignment_operator)


State 361

  196 assignment_operator: OR_EQUALS •

    $default  reduce using rule 196 (assignment_operator)


State 362

  176 assignment: left_hand_side assignment_operator • expression

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 471
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 363

  166 variable_declarator_id: IDENTIFIER • dims

    $default  reduce using rule 399 (annotations)

    dims         go to state 472
    annotations  go to state 309


State 364

   23 variable_declarators_list: variable_declarators_list • COMMA variable_declarator
  327 field_declaration: field_modifier unanntype variable_declarators_list • SEMICOLON

    COMMA      shift, and go to state 473
    SEMICOLON  shift, and go to state 474


State 365

   24 variable_declarators_list: variable_declarator •

    $default  reduce using rule 24 (variable_declarators_list)


State 366

   25 variable_declarator: variable_declarator_id • variable_initializer_opt

    EQUALS  shift, and go to state 475

    $default  reduce using rule 27 (variable_initializer_opt)

    variable_initializer_opt  go to state 476


State 367

  348 method_header: type_parameters annotations • result method_declarator throws_empty
  398 annotations: annotations • annotation

    AT       shift, and go to state 31
    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231
    VOID     shift, and go to state 236

    unanntype             go to state 237
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235
    result                go to state 477
    annotation            go to state 32


State 368

  359 method_body: SEMICOLON •

    $default  reduce using rule 359 (method_body)


State 369

  358 method_body: block •

    $default  reduce using rule 358 (method_body)


State 370

  336 method_declaration: method_modifier method_header method_body •

    $default  reduce using rule 336 (method_declaration)


State 371

  360 method_declarator: IDENTIFIER • LPAREN reciever_parameter formal_parameter_list RPAREN dim

    LPAREN  shift, and go to state 478


State 372

  347 method_header: result method_declarator • throws_empty

    THROWS  shift, and go to state 375

    $default  reduce using rule 352 (throws_empty)

    throws_empty  go to state 479
    throws        go to state 377


State 373

  379 simple_type_name: type_identifier •

    $default  reduce using rule 379 (simple_type_name)


State 374

  378 constructor_declarator: type_parameters simple_type_name • LPAREN reciever_parameter formal_parameter_list RPAREN

    LPAREN  shift, and go to state 480


State 375

  353 throws: THROWS • exception_type_list

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_variable                         go to state 481
    class_type                            go to state 482
    class_or_interface_type               go to state 36
    exception_type_list                   go to state 483
    exception_type                        go to state 484
    annotations                           go to state 56


State 376

  371 constructor_declaration: constructor_modifiers constructor_declarator throws_empty • constructor_body

    LMPARA  shift, and go to state 485

    constructor_body  go to state 486


State 377

  351 throws_empty: throws •

    $default  reduce using rule 351 (throws_empty)


State 378

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •
  151 lambda_parameters: IDENTIFIER •
  156 lambda_parameter_list: IDENTIFIER • more_identifiers

    COMMA     reduce using rule 160 (more_identifiers)
    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    RPAREN    reduce using rule 5 (module_or_package_or_expression_name)
    RPAREN    [reduce using rule 160 (more_identifiers)]
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    ARROW     reduce using rule 151 (lambda_parameters)
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)

    more_identifiers  go to state 487


State 379

   28 variable_modifiers: variable_modifiers • variable_modifier
  161 lambda_parameter: variable_modifiers • lambda_parameter_type variable_declarator_id
  170 variable_arity_parameter: variable_modifiers • unanntype variable_arity_parameter_id

    AT       shift, and go to state 31
    FINAL    shift, and go to state 331
    VAR      shift, and go to state 332
    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    variable_modifier      go to state 333
    final                  go to state 334
    lambda_parameter_type  go to state 488
    var                    go to state 489
    unanntype              go to state 490
    unann_primitive_type   go to state 233
    numeric_type           go to state 234
    integral_type          go to state 148
    floating_point_type    go to state 149
    boolean                go to state 235
    annotation             go to state 338


State 380

  152 lambda_parameters: LPAREN lambda_parameter_list_opt • RPAREN

    RPAREN  shift, and go to state 491


State 381

  153 lambda_parameter_list_opt: lambda_parameter_list •

    $default  reduce using rule 153 (lambda_parameter_list_opt)


State 382

  155 lambda_parameter_list: lambda_parameter • more_lambda_parameters

    $default  reduce using rule 158 (more_lambda_parameters)

    more_lambda_parameters  go to state 492


State 383

  162 lambda_parameter: variable_arity_parameter •

    $default  reduce using rule 162 (lambda_parameter)


State 384

  262 primary_no_new_array: LPAREN expression RPAREN •

    $default  reduce using rule 262 (primary_no_new_array)


State 385

  150 lambda_expression: lambda_parameters ARROW • lambda_body

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 72
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    block                                 go to state 493
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 494
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    lambda_body                           go to state 495
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 386

  409 element_value_pair: IDENTIFIER EQUALS element_value •

    $default  reduce using rule 409 (element_value_pair)


State 387

  181 field_access: SUPER DOT IDENTIFIER •

    $default  reduce using rule 181 (field_access)


State 388

   68 method_invocation: SUPER DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 496


State 389

   75 method_reference: SUPER COLON COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 63

    type_arguments  go to state 497


State 390

  269 class_literal: BOOLEAN brackets DOT • CLASS

    CLASS  shift, and go to state 498


State 391

  271 brackets: brackets LSPAR • RSPAR

    RSPAR  shift, and go to state 499


State 392

  270 class_literal: VOID DOT CLASS •

    $default  reduce using rule 270 (class_literal)


State 393

  415 element_value_list: element_value element_values •
  416 element_values: element_values • COMMA element_value

    COMMA  shift, and go to state 500

    COMMA     [reduce using rule 415 (element_value_list)]
    $default  reduce using rule 415 (element_value_list)


State 394

  420 comma_opt: COMMA •

    $default  reduce using rule 420 (comma_opt)


State 395

  413 element_value_array_initializer: LMPARA element_value_list_opt comma_opt • RMPARA

    RMPARA  shift, and go to state 501


State 396

  252 array_creation_type_follow: dims • array_initializer

    LMPARA  shift, and go to state 502

    array_initializer  go to state 503


State 397

  250 array_creation_folllow: class_or_interface_type array_creation_type_follow •

    $default  reduce using rule 250 (array_creation_folllow)


State 398

  251 array_creation_type_follow: dimexprs • dims_opt
  253 dimexprs: dimexprs • dimexpr

    AT        reduce using rule 399 (annotations)
    LSPAR     reduce using rule 399 (annotations)
    $default  reduce using rule 257 (dims_opt)

    dims         go to state 504
    dimexpr      go to state 505
    dims_opt     go to state 506
    annotations  go to state 400


State 399

  254 dimexprs: dimexpr •

    $default  reduce using rule 254 (dimexprs)


State 400

  167 dims: annotations • LSPAR RSPAR dim
  255 dimexpr: annotations • LSPAR expression RSPAR
  398 annotations: annotations • annotation

    AT     shift, and go to state 31
    LSPAR  shift, and go to state 507

    annotation  go to state 32


State 401

  249 array_creation_folllow: primitive_type array_creation_type_follow •

    $default  reduce using rule 249 (array_creation_folllow)


State 402

   66 method_invocation: module_or_package_or_expression_name DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 508


State 403

   78 method_reference: module_or_package_or_expression_name COLON COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 63

    type_arguments  go to state 509


State 404

  183 array_access: module_or_package_or_expression_name LSPAR expression • RSPAR

    RSPAR  shift, and go to state 510


State 405

  182 field_access: type_name DOT IDENTIFIER •

    $default  reduce using rule 182 (field_access)


State 406

  261 primary_no_new_array: type_name DOT THIS •

    $default  reduce using rule 261 (primary_no_new_array)


State 407

   69 method_invocation: type_name DOT SUPER • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   76 method_reference: type_name DOT SUPER • COLON COLON type_arguments IDENTIFIER

    DOT    shift, and go to state 511
    COLON  shift, and go to state 512


State 408

   65 method_invocation: type_name DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 513


State 409

  267 class_literal: type_name brackets DOT • CLASS

    CLASS  shift, and go to state 514


State 410

   64 method_invocation: method_name LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 515


State 411

   70 argument_list_optional: argument_list •
   72 argument_list: argument_list • COMMA expression

    COMMA  shift, and go to state 516

    $default  reduce using rule 70 (argument_list_optional)


State 412

   73 argument_list: expression •

    $default  reduce using rule 73 (argument_list)


State 413

  201 conditional_or_expression: conditional_or_expression OR conditional_and_expression •
  203 conditional_and_expression: conditional_and_expression • AND inclusive_or_expression

    AND  shift, and go to state 283

    $default  reduce using rule 201 (conditional_or_expression)


State 414

  198 conditional_expression: conditional_or_expression QUESTION expression • COLON conditional_expression
  199                       | conditional_or_expression QUESTION expression • COLON lambda_expression

    COLON  shift, and go to state 517


State 415

  203 conditional_and_expression: conditional_and_expression AND inclusive_or_expression •
  205 inclusive_or_expression: inclusive_or_expression • OR exclusive_or_expression

    OR  shift, and go to state 284

    OR        [reduce using rule 203 (conditional_and_expression)]
    $default  reduce using rule 203 (conditional_and_expression)


State 416

  205 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression •
  207 exclusive_or_expression: exclusive_or_expression • XOR and_expression

    XOR  shift, and go to state 285

    $default  reduce using rule 205 (inclusive_or_expression)


State 417

  207 exclusive_or_expression: exclusive_or_expression XOR and_expression •
  209 and_expression: and_expression • AND equality_expression

    AND  shift, and go to state 286

    AND       [reduce using rule 207 (exclusive_or_expression)]
    $default  reduce using rule 207 (exclusive_or_expression)


State 418

  209 and_expression: and_expression AND equality_expression •
  211 equality_expression: equality_expression • EQUALS relational_expression
  212                    | equality_expression • NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 287
    NOT_EQUALS  shift, and go to state 288

    $default  reduce using rule 209 (and_expression)


State 419

  211 equality_expression: equality_expression EQUALS relational_expression •
  214 relational_expression: relational_expression • LT shift_expression
  215                      | relational_expression • GT shift_expression
  216                      | relational_expression • LE shift_expression
  217                      | relational_expression • GE shift_expression
  218                      | relational_expression • INSTANCEOF reference_type

    LT          shift, and go to state 289
    GT          shift, and go to state 290
    LE          shift, and go to state 291
    GE          shift, and go to state 292
    INSTANCEOF  shift, and go to state 293

    $default  reduce using rule 211 (equality_expression)


State 420

  212 equality_expression: equality_expression NOT_EQUALS relational_expression •
  214 relational_expression: relational_expression • LT shift_expression
  215                      | relational_expression • GT shift_expression
  216                      | relational_expression • LE shift_expression
  217                      | relational_expression • GE shift_expression
  218                      | relational_expression • INSTANCEOF reference_type

    LT          shift, and go to state 289
    GT          shift, and go to state 290
    LE          shift, and go to state 291
    GE          shift, and go to state 292
    INSTANCEOF  shift, and go to state 293

    $default  reduce using rule 212 (equality_expression)


State 421

  214 relational_expression: relational_expression LT shift_expression •
  220 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  221                 | shift_expression • RIGHT_SHIFT additive_expression
  222                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 294
    RIGHT_SHIFT           shift, and go to state 295
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 296

    $default  reduce using rule 214 (relational_expression)


State 422

  215 relational_expression: relational_expression GT shift_expression •
  220 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  221                 | shift_expression • RIGHT_SHIFT additive_expression
  222                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 294
    RIGHT_SHIFT           shift, and go to state 295
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 296

    $default  reduce using rule 215 (relational_expression)


State 423

  216 relational_expression: relational_expression LE shift_expression •
  220 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  221                 | shift_expression • RIGHT_SHIFT additive_expression
  222                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 294
    RIGHT_SHIFT           shift, and go to state 295
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 296

    $default  reduce using rule 216 (relational_expression)


State 424

  217 relational_expression: relational_expression GE shift_expression •
  220 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  221                 | shift_expression • RIGHT_SHIFT additive_expression
  222                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 294
    RIGHT_SHIFT           shift, and go to state 295
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 296

    $default  reduce using rule 217 (relational_expression)


State 425

  218 relational_expression: relational_expression INSTANCEOF reference_type •

    $default  reduce using rule 218 (relational_expression)


State 426

  220 shift_expression: shift_expression LEFT_SHIFT additive_expression •
  224 additive_expression: additive_expression • PLUS multiplicative_expression
  225                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 297
    MINUS  shift, and go to state 298

    $default  reduce using rule 220 (shift_expression)


State 427

  221 shift_expression: shift_expression RIGHT_SHIFT additive_expression •
  224 additive_expression: additive_expression • PLUS multiplicative_expression
  225                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 297
    MINUS  shift, and go to state 298

    $default  reduce using rule 221 (shift_expression)


State 428

  222 shift_expression: shift_expression UNSIGNED_RIGHT_SHIFT additive_expression •
  224 additive_expression: additive_expression • PLUS multiplicative_expression
  225                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 297
    MINUS  shift, and go to state 298

    $default  reduce using rule 222 (shift_expression)


State 429

  224 additive_expression: additive_expression PLUS multiplicative_expression •
  227 multiplicative_expression: multiplicative_expression • TIMES unary_expression
  228                          | multiplicative_expression • DIVIDE unary_expression
  229                          | multiplicative_expression • MOD unary_expression

    TIMES   shift, and go to state 299
    DIVIDE  shift, and go to state 300
    MOD     shift, and go to state 301

    $default  reduce using rule 224 (additive_expression)


State 430

  225 additive_expression: additive_expression MINUS multiplicative_expression •
  227 multiplicative_expression: multiplicative_expression • TIMES unary_expression
  228                          | multiplicative_expression • DIVIDE unary_expression
  229                          | multiplicative_expression • MOD unary_expression

    TIMES   shift, and go to state 299
    DIVIDE  shift, and go to state 300
    MOD     shift, and go to state 301

    $default  reduce using rule 225 (additive_expression)


State 431

  227 multiplicative_expression: multiplicative_expression TIMES unary_expression •

    $default  reduce using rule 227 (multiplicative_expression)


State 432

  228 multiplicative_expression: multiplicative_expression DIVIDE unary_expression •

    $default  reduce using rule 228 (multiplicative_expression)


State 433

  229 multiplicative_expression: multiplicative_expression MOD unary_expression •

    $default  reduce using rule 229 (multiplicative_expression)


State 434

  180 field_access: primary DOT IDENTIFIER •

    $default  reduce using rule 180 (field_access)


State 435

   67 method_invocation: primary DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 518


State 436

   77 method_reference: primary COLON COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 63

    type_arguments  go to state 519


State 437

  184 array_access: primary_no_new_array LSPAR expression • RSPAR

    RSPAR  shift, and go to state 520


State 438

  268 class_literal: numeric_type brackets DOT • CLASS

    CLASS  shift, and go to state 521


State 439

  167 dims: annotations LSPAR • RSPAR dim

    RSPAR  shift, and go to state 522


State 440

   79 method_reference: class_type COLON COLON • type_arguments NEW

    LT  shift, and go to state 63

    type_arguments  go to state 523


State 441

   80 method_reference: array_type COLON COLON • NEW

    NEW  shift, and go to state 524


State 442

  409 element_value_pair: IDENTIFIER • EQUALS element_value

    EQUALS  shift, and go to state 256


State 443

  407 element_value_pairs_list: element_value_pairs_list COMMA element_value_pair •

    $default  reduce using rule 407 (element_value_pairs_list)


State 444

   82 type_argument_list: type_argument_list COMMA type_argument •

    $default  reduce using rule 82 (type_argument_list)


State 445

   88 wildcard_bound_opt: SUPER • reference_type

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_variable                         go to state 168
    class_type                            go to state 54
    class_or_interface_type               go to state 169
    reference_type                        go to state 525
    array_type                            go to state 171
    primitive_type                        go to state 154
    annotations                           go to state 155


State 446

   87 wildcard_bound_opt: EXTENDS • reference_type

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_variable                         go to state 168
    class_type                            go to state 54
    class_or_interface_type               go to state 169
    reference_type                        go to state 526
    array_type                            go to state 171
    primitive_type                        go to state 154
    annotations                           go to state 155


State 447

   86 wildcard: annotations QUESTION wildcard_bound_opt •

    $default  reduce using rule 86 (wildcard)


State 448

   51 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 51 (labeled_statement)


State 449

  143 catch: CATCH •

    $default  reduce using rule 143 (catch)


State 450

  140 catches_opt: catches •

    $default  reduce using rule 140 (catches_opt)


State 451

  135 try_statement: TRY block catches_opt • finally_opt

    FINALLY  shift, and go to state 527

    $default  reduce using rule 137 (finally_opt)

    finally_opt  go to state 528
    finally      go to state 529


State 452

  138 catches: catch_clause • catches
  139        | catch_clause •

    CATCH  shift, and go to state 449

    $default  reduce using rule 139 (catches)

    catches       go to state 530
    catch_clause  go to state 452
    catch         go to state 453


State 453

  142 catch_clause: catch • LPAREN catch_formal_parameter RPAREN block

    LPAREN  shift, and go to state 531


State 454

  133 synchronized_statement: SYNCHRONIZED LPAREN expression • RPAREN block

    RPAREN  shift, and go to state 532


State 455

  134 throw_statement: THROW expression SEMICOLON •

    $default  reduce using rule 134 (throw_statement)


State 456

   60 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate • LPAREN argument_list_optional RPAREN class_body

    LPAREN  shift, and go to state 533


State 457

   61 class_or_interface_type_to_instantiate: annotations • IDENTIFIER dot_annotation_indentifiers_optional type_arguments_opt
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 534

    annotation  go to state 32


State 458

   22 local_variable_declaration: variable_modifiers local_variable_type variable_declarators_list •
   23 variable_declarators_list: variable_declarators_list • COMMA variable_declarator

    COMMA  shift, and go to state 473

    $default  reduce using rule 22 (local_variable_declaration)


State 459

   89 if_then_else_statement: if LPAREN expression • RPAREN if_footer

    RPAREN  shift, and go to state 535


State 460

  105 while_statement: while LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 536


State 461

  112 for_init: local_variable_declaration •

    $default  reduce using rule 112 (for_init)


State 462

  113 statement_expression_list: statement_expression • statement_expressions

    $default  reduce using rule 115 (statement_expressions)

    statement_expressions  go to state 537


State 463

  107 for_statement: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 538


State 464

  109 for_init_opt: for_init •

    $default  reduce using rule 109 (for_init_opt)


State 465

  111 for_init: statement_expression_list •

    $default  reduce using rule 111 (for_init)


State 466

  121 assert_statement: assert expression SEMICOLON •

    $default  reduce using rule 121 (assert_statement)


State 467

  122 assert_statement: assert expression COLON • expression SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 539
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 468

  125 break_statement: break IDENTIFIER SEMICOLON •

    $default  reduce using rule 125 (break_statement)


State 469

  128 continue_statement: continue IDENTIFIER SEMICOLON •

    $default  reduce using rule 128 (continue_statement)


State 470

  131 return_statement: return expression SEMICOLON •

    $default  reduce using rule 131 (return_statement)


State 471

  176 assignment: left_hand_side assignment_operator expression •

    $default  reduce using rule 176 (assignment)


State 472

  166 variable_declarator_id: IDENTIFIER dims •

    $default  reduce using rule 166 (variable_declarator_id)


State 473

   23 variable_declarators_list: variable_declarators_list COMMA • variable_declarator

    IDENTIFIER  shift, and go to state 363

    variable_declarator     go to state 540
    variable_declarator_id  go to state 366


State 474

  327 field_declaration: field_modifier unanntype variable_declarators_list SEMICOLON •

    $default  reduce using rule 327 (field_declaration)


State 475

   26 variable_initializer_opt: EQUALS • variable_initializer

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 502
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 541
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    array_initializer                     go to state 542
    variable_initializer                  go to state 543


State 476

   25 variable_declarator: variable_declarator_id variable_initializer_opt •

    $default  reduce using rule 25 (variable_declarator)


State 477

  348 method_header: type_parameters annotations result • method_declarator throws_empty

    IDENTIFIER  shift, and go to state 371

    method_declarator  go to state 544


State 478

  360 method_declarator: IDENTIFIER LPAREN • reciever_parameter formal_parameter_list RPAREN dim

    AT        reduce using rule 363 (reciever_parameter)
    AT        [reduce using rule 399 (annotations)]
    INT       reduce using rule 363 (reciever_parameter)
    INT       [reduce using rule 399 (annotations)]
    LONG      reduce using rule 363 (reciever_parameter)
    LONG      [reduce using rule 399 (annotations)]
    SHORT     reduce using rule 363 (reciever_parameter)
    SHORT     [reduce using rule 399 (annotations)]
    BYTE      reduce using rule 363 (reciever_parameter)
    BYTE      [reduce using rule 399 (annotations)]
    FLOAT     reduce using rule 363 (reciever_parameter)
    FLOAT     [reduce using rule 399 (annotations)]
    DOUBLE    reduce using rule 363 (reciever_parameter)
    DOUBLE    [reduce using rule 399 (annotations)]
    BOOLEAN   reduce using rule 363 (reciever_parameter)
    BOOLEAN   [reduce using rule 399 (annotations)]
    $default  reduce using rule 363 (reciever_parameter)

    reciever_parameter  go to state 545
    annotations         go to state 546


State 479

  347 method_header: result method_declarator throws_empty •

    $default  reduce using rule 347 (method_header)


State 480

  378 constructor_declarator: type_parameters simple_type_name LPAREN • reciever_parameter formal_parameter_list RPAREN

    AT        reduce using rule 363 (reciever_parameter)
    AT        [reduce using rule 399 (annotations)]
    INT       reduce using rule 363 (reciever_parameter)
    INT       [reduce using rule 399 (annotations)]
    LONG      reduce using rule 363 (reciever_parameter)
    LONG      [reduce using rule 399 (annotations)]
    SHORT     reduce using rule 363 (reciever_parameter)
    SHORT     [reduce using rule 399 (annotations)]
    BYTE      reduce using rule 363 (reciever_parameter)
    BYTE      [reduce using rule 399 (annotations)]
    FLOAT     reduce using rule 363 (reciever_parameter)
    FLOAT     [reduce using rule 399 (annotations)]
    DOUBLE    reduce using rule 363 (reciever_parameter)
    DOUBLE    [reduce using rule 399 (annotations)]
    BOOLEAN   reduce using rule 363 (reciever_parameter)
    BOOLEAN   [reduce using rule 399 (annotations)]
    $default  reduce using rule 363 (reciever_parameter)

    reciever_parameter  go to state 547
    annotations         go to state 546


State 481

  357 exception_type: type_variable •

    $default  reduce using rule 357 (exception_type)


State 482

  313 class_or_interface_type: class_type •
  356 exception_type: class_type •

    DOT       reduce using rule 313 (class_or_interface_type)
    $default  reduce using rule 356 (exception_type)


State 483

  353 throws: THROWS exception_type_list •
  354 exception_type_list: exception_type_list • COMMA exception_type

    COMMA  shift, and go to state 548

    $default  reduce using rule 353 (throws)


State 484

  355 exception_type_list: exception_type •

    $default  reduce using rule 355 (exception_type_list)


State 485

  380 constructor_body: LMPARA • explicit_constructor_invocation block_statements RMPARA
  381                 | LMPARA • explicit_constructor_invocation RMPARA
  382                 | LMPARA • block_statements RMPARA
  383                 | LMPARA • RMPARA

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    LT            shift, and go to state 63
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    RMPARA        shift, and go to state 549
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    COLON        reduce using rule 74 (method_reference)
    FINAL        reduce using rule 29 (variable_modifiers)
    FINAL        [reduce using rule 288 (class_modifiers)]
    VAR          reduce using rule 29 (variable_modifiers)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    THIS         [reduce using rule 389 (type_arguments_empty)]
    SUPER        [reduce using rule 389 (type_arguments_empty)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 288 (class_modifiers)

    module_or_package_or_expression_name     go to state 550
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    block_statements                         go to state 551
    block_statement                          go to state 190
    local_class_or_interface_declaration     go to state 191
    local_variable_declaration_statement     go to state 192
    local_variable_declaration               go to state 193
    variable_modifiers                       go to state 194
    statement                                go to state 195
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    type_arguments                           go to state 552
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 553
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    class_declaration                        go to state 229
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    explicit_constructor_invocation          go to state 554
    type_arguments_empty                     go to state 555
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 486

  371 constructor_declaration: constructor_modifiers constructor_declarator throws_empty constructor_body •

    $default  reduce using rule 371 (constructor_declaration)


State 487

  156 lambda_parameter_list: IDENTIFIER more_identifiers •
  159 more_identifiers: more_identifiers • COMMA IDENTIFIER

    COMMA  shift, and go to state 556

    $default  reduce using rule 156 (lambda_parameter_list)


State 488

  161 lambda_parameter: variable_modifiers lambda_parameter_type • variable_declarator_id

    IDENTIFIER  shift, and go to state 363

    variable_declarator_id  go to state 557


State 489

  164 lambda_parameter_type: var •

    $default  reduce using rule 164 (lambda_parameter_type)


State 490

  163 lambda_parameter_type: unanntype •
  170 variable_arity_parameter: variable_modifiers unanntype • variable_arity_parameter_id

    IDENTIFIER  reduce using rule 163 (lambda_parameter_type)
    $default    reduce using rule 399 (annotations)

    variable_arity_parameter_id  go to state 558
    annotations                  go to state 559


State 491

  152 lambda_parameters: LPAREN lambda_parameter_list_opt RPAREN •

    $default  reduce using rule 152 (lambda_parameters)


State 492

  155 lambda_parameter_list: lambda_parameter more_lambda_parameters •
  157 more_lambda_parameters: more_lambda_parameters • COMMA lambda_parameter

    COMMA  shift, and go to state 560

    $default  reduce using rule 155 (lambda_parameter_list)


State 493

  173 lambda_body: block •

    $default  reduce using rule 173 (lambda_body)


State 494

  172 lambda_body: expression •

    $default  reduce using rule 172 (lambda_body)


State 495

  150 lambda_expression: lambda_parameters ARROW lambda_body •

    $default  reduce using rule 150 (lambda_expression)


State 496

   68 method_invocation: SUPER DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 561


State 497

   75 method_reference: SUPER COLON COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 562


State 498

  269 class_literal: BOOLEAN brackets DOT CLASS •

    $default  reduce using rule 269 (class_literal)


State 499

  271 brackets: brackets LSPAR RSPAR •

    $default  reduce using rule 271 (brackets)


State 500

  416 element_values: element_values COMMA • element_value

    AT           shift, and go to state 31
    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 114
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    field_access                          go to state 123
    array_access                          go to state 124
    conditional_expression                go to state 125
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    annotation                            go to state 156
    element_value                         go to state 563
    element_value_array_initializer       go to state 162


State 501

  413 element_value_array_initializer: LMPARA element_value_list_opt comma_opt RMPARA •

    $default  reduce using rule 413 (element_value_array_initializer)


State 502

  418 array_initializer: LMPARA • variable_initializer_list_opt comma_opt RMPARA

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 502
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 541
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    array_initializer                     go to state 542
    variable_initializer_list_opt         go to state 564
    variable_initializer_list             go to state 565
    variable_initializer                  go to state 566


State 503

  252 array_creation_type_follow: dims array_initializer •

    $default  reduce using rule 252 (array_creation_type_follow)


State 504

  256 dims_opt: dims •

    $default  reduce using rule 256 (dims_opt)


State 505

  253 dimexprs: dimexprs dimexpr •

    $default  reduce using rule 253 (dimexprs)


State 506

  251 array_creation_type_follow: dimexprs dims_opt •

    $default  reduce using rule 251 (array_creation_type_follow)


State 507

  167 dims: annotations LSPAR • RSPAR dim
  255 dimexpr: annotations LSPAR • expression RSPAR

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    RSPAR        shift, and go to state 522
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    RSPAR        [reduce using rule 74 (method_reference)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 567
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 508

   66 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 568


State 509

   78 method_reference: module_or_package_or_expression_name COLON COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 569


State 510

  183 array_access: module_or_package_or_expression_name LSPAR expression RSPAR •

    $default  reduce using rule 183 (array_access)


State 511

   69 method_invocation: type_name DOT SUPER DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN

    LT  shift, and go to state 63

    type_arguments  go to state 570


State 512

   76 method_reference: type_name DOT SUPER COLON • COLON type_arguments IDENTIFIER

    COLON  shift, and go to state 571


State 513

   65 method_invocation: type_name DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 572


State 514

  267 class_literal: type_name brackets DOT CLASS •

    $default  reduce using rule 267 (class_literal)


State 515

   64 method_invocation: method_name LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 64 (method_invocation)


State 516

   72 argument_list: argument_list COMMA • expression

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 573
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 517

  198 conditional_expression: conditional_or_expression QUESTION expression COLON • conditional_expression
  199                       | conditional_or_expression QUESTION expression COLON • lambda_expression

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 117
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    lambda_expression                     go to state 574
    lambda_parameters                     go to state 252
    field_access                          go to state 123
    array_access                          go to state 124
    conditional_expression                go to state 575
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 518

   67 method_invocation: primary DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 576


State 519

   77 method_reference: primary COLON COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 577


State 520

  184 array_access: primary_no_new_array LSPAR expression RSPAR •

    $default  reduce using rule 184 (array_access)


State 521

  268 class_literal: numeric_type brackets DOT CLASS •

    $default  reduce using rule 268 (class_literal)


State 522

  167 dims: annotations LSPAR RSPAR • dim

    AT        reduce using rule 399 (annotations)
    LSPAR     reduce using rule 399 (annotations)
    $default  reduce using rule 169 (dim)

    dim          go to state 578
    annotations  go to state 579


State 523

   79 method_reference: class_type COLON COLON type_arguments • NEW

    NEW  shift, and go to state 580


State 524

   80 method_reference: array_type COLON COLON NEW •

    $default  reduce using rule 80 (method_reference)


State 525

   88 wildcard_bound_opt: SUPER reference_type •

    $default  reduce using rule 88 (wildcard_bound_opt)


State 526

   87 wildcard_bound_opt: EXTENDS reference_type •

    $default  reduce using rule 87 (wildcard_bound_opt)


State 527

  147 finally: FINALLY • block

    LMPARA  shift, and go to state 72

    block  go to state 581


State 528

  135 try_statement: TRY block catches_opt finally_opt •

    $default  reduce using rule 135 (try_statement)


State 529

  136 finally_opt: finally •

    $default  reduce using rule 136 (finally_opt)


State 530

  138 catches: catch_clause catches •

    $default  reduce using rule 138 (catches)


State 531

  142 catch_clause: catch LPAREN • catch_formal_parameter RPAREN block

    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    catch_formal_parameter  go to state 582
    catch_type              go to state 583
    unanntype               go to state 584
    unann_primitive_type    go to state 233
    numeric_type            go to state 234
    integral_type           go to state 148
    floating_point_type     go to state 149
    boolean                 go to state 235


State 532

  133 synchronized_statement: SYNCHRONIZED LPAREN expression RPAREN • block

    LMPARA  shift, and go to state 72

    block  go to state 585


State 533

   60 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN • argument_list_optional RPAREN class_body

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 586
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 534

   61 class_or_interface_type_to_instantiate: annotations IDENTIFIER • dot_annotation_indentifiers_optional type_arguments_opt

    $default  reduce using rule 63 (dot_annotation_indentifiers_optional)

    dot_annotation_indentifiers_optional  go to state 587


State 535

   89 if_then_else_statement: if LPAREN expression RPAREN • if_footer

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 588
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 589
    statement_without_trailing_substatement  go to state 590
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if_footer                                go to state 591
    statement_no_short_if                    go to state 592
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 598
    while_statement                          go to state 205
    while                                    go to state 599
    for_statement                            go to state 207
    for                                      go to state 600
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 536

  105 while_statement: while LPAREN expression RPAREN • statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 601
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 537

  113 statement_expression_list: statement_expression statement_expressions •
  114 statement_expressions: statement_expressions • COMMA statement_expression

    COMMA  shift, and go to state 602

    $default  reduce using rule 113 (statement_expression_list)


State 538

  107 for_statement: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    SEMICOLON    reduce using rule 74 (method_reference)
    SEMICOLON    [reduce using rule 117 (expression_opt)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression_opt                        go to state 603
    expression                            go to state 604
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 539

  122 assert_statement: assert expression COLON expression • SEMICOLON

    SEMICOLON  shift, and go to state 605


State 540

   23 variable_declarators_list: variable_declarators_list COMMA variable_declarator •

    $default  reduce using rule 23 (variable_declarators_list)


State 541

  425 variable_initializer: expression •

    $default  reduce using rule 425 (variable_initializer)


State 542

  426 variable_initializer: array_initializer •

    $default  reduce using rule 426 (variable_initializer)


State 543

   26 variable_initializer_opt: EQUALS variable_initializer •

    $default  reduce using rule 26 (variable_initializer_opt)


State 544

  348 method_header: type_parameters annotations result method_declarator • throws_empty

    THROWS  shift, and go to state 375

    $default  reduce using rule 352 (throws_empty)

    throws_empty  go to state 606
    throws        go to state 377


State 545

  360 method_declarator: IDENTIFIER LPAREN reciever_parameter • formal_parameter_list RPAREN dim

    COMMA     reduce using rule 366 (formal_parameter_list)
    RPAREN    reduce using rule 366 (formal_parameter_list)
    $default  reduce using rule 29 (variable_modifiers)

    variable_modifiers        go to state 607
    variable_arity_parameter  go to state 608
    formal_parameter_list     go to state 609
    formal_parameter          go to state 610


State 546

  361 reciever_parameter: annotations • unanntype IDENTIFIER DOT THIS
  362                   | annotations • unanntype THIS
  398 annotations: annotations • annotation

    AT       shift, and go to state 31
    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    unanntype             go to state 611
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235
    annotation            go to state 32


State 547

  378 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter • formal_parameter_list RPAREN

    COMMA     reduce using rule 366 (formal_parameter_list)
    RPAREN    reduce using rule 366 (formal_parameter_list)
    $default  reduce using rule 29 (variable_modifiers)

    variable_modifiers        go to state 607
    variable_arity_parameter  go to state 608
    formal_parameter_list     go to state 612
    formal_parameter          go to state 610


State 548

  354 exception_type_list: exception_type_list COMMA • exception_type

    IDENTIFIER  shift, and go to state 33

    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 399 (annotations)

    module_or_package_or_expression_name  go to state 34
    type_variable                         go to state 481
    class_type                            go to state 482
    class_or_interface_type               go to state 36
    exception_type                        go to state 613
    annotations                           go to state 56


State 549

  383 constructor_body: LMPARA RMPARA •

    $default  reduce using rule 383 (constructor_body)


State 550

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT IDENTIFIER
    8 type_name: module_or_package_or_expression_name • DOT type_identifier
   66 method_invocation: module_or_package_or_expression_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   78 method_reference: module_or_package_or_expression_name • COLON COLON type_arguments IDENTIFIER
  177 left_hand_side: module_or_package_or_expression_name •
  183 array_access: module_or_package_or_expression_name • LSPAR expression RSPAR
  243 postfix_expression: module_or_package_or_expression_name •
  310 class_type: module_or_package_or_expression_name • DOT annotations type_identifier type_arguments_opt
  386 explicit_constructor_invocation: module_or_package_or_expression_name • DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    DOT    shift, and go to state 614
    COLON  shift, and go to state 276
    LSPAR  shift, and go to state 277

    PLUS_PLUS    reduce using rule 243 (postfix_expression)
    MINUS_MINUS  reduce using rule 243 (postfix_expression)
    $default     reduce using rule 177 (left_hand_side)


State 551

   15 block_statements: block_statements • block_statement
  382 constructor_body: LMPARA block_statements • RMPARA

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    RMPARA        shift, and go to state 615
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    COLON        reduce using rule 74 (method_reference)
    FINAL        reduce using rule 29 (variable_modifiers)
    FINAL        [reduce using rule 288 (class_modifiers)]
    VAR          reduce using rule 29 (variable_modifiers)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 288 (class_modifiers)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    block_statement                          go to state 329
    local_class_or_interface_declaration     go to state 191
    local_variable_declaration_statement     go to state 192
    local_variable_declaration               go to state 193
    variable_modifiers                       go to state 194
    statement                                go to state 195
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    class_declaration                        go to state 229
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 552

  388 type_arguments_empty: type_arguments •

    $default  reduce using rule 388 (type_arguments_empty)


State 553

   67 method_invocation: primary • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   77 method_reference: primary • COLON COLON type_arguments IDENTIFIER
  180 field_access: primary • DOT IDENTIFIER
  242 postfix_expression: primary •
  387 explicit_constructor_invocation: primary • DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    DOT    shift, and go to state 616
    COLON  shift, and go to state 305

    $default  reduce using rule 242 (postfix_expression)


State 554

  380 constructor_body: LMPARA explicit_constructor_invocation • block_statements RMPARA
  381                 | LMPARA explicit_constructor_invocation • RMPARA

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    RMPARA        shift, and go to state 617
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    COLON        reduce using rule 74 (method_reference)
    FINAL        reduce using rule 29 (variable_modifiers)
    FINAL        [reduce using rule 288 (class_modifiers)]
    VAR          reduce using rule 29 (variable_modifiers)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 288 (class_modifiers)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    block_statements                         go to state 618
    block_statement                          go to state 190
    local_class_or_interface_declaration     go to state 191
    local_variable_declaration_statement     go to state 192
    local_variable_declaration               go to state 193
    variable_modifiers                       go to state 194
    statement                                go to state 195
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    class_declaration                        go to state 229
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 555

  384 explicit_constructor_invocation: type_arguments_empty • THIS LPAREN argument_list_optional RPAREN SEMICOLON
  385                                | type_arguments_empty • SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    THIS   shift, and go to state 619
    SUPER  shift, and go to state 620


State 556

  159 more_identifiers: more_identifiers COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 621


State 557

  161 lambda_parameter: variable_modifiers lambda_parameter_type variable_declarator_id •

    $default  reduce using rule 161 (lambda_parameter)


State 558

  170 variable_arity_parameter: variable_modifiers unanntype variable_arity_parameter_id •

    $default  reduce using rule 170 (variable_arity_parameter)


State 559

  171 variable_arity_parameter_id: annotations • ELLIPSIS IDENTIFIER
  398 annotations: annotations • annotation

    AT        shift, and go to state 31
    ELLIPSIS  shift, and go to state 622

    annotation  go to state 32


State 560

  157 more_lambda_parameters: more_lambda_parameters COMMA • lambda_parameter

    $default  reduce using rule 29 (variable_modifiers)

    variable_modifiers        go to state 379
    lambda_parameter          go to state 623
    variable_arity_parameter  go to state 383


State 561

   68 method_invocation: SUPER DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 624
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 562

   75 method_reference: SUPER COLON COLON type_arguments IDENTIFIER •

    $default  reduce using rule 75 (method_reference)


State 563

  416 element_values: element_values COMMA element_value •

    $default  reduce using rule 416 (element_values)


State 564

  418 array_initializer: LMPARA variable_initializer_list_opt • comma_opt RMPARA

    COMMA  shift, and go to state 394

    $default  reduce using rule 421 (comma_opt)

    comma_opt  go to state 625


State 565

  419 variable_initializer_list_opt: variable_initializer_list •

    $default  reduce using rule 419 (variable_initializer_list_opt)


State 566

  422 variable_initializer_list: variable_initializer • variable_init

    $default  reduce using rule 424 (variable_init)

    variable_init  go to state 626


State 567

  255 dimexpr: annotations LSPAR expression • RSPAR

    RSPAR  shift, and go to state 627


State 568

   66 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 628
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 569

   78 method_reference: module_or_package_or_expression_name COLON COLON type_arguments IDENTIFIER •

    $default  reduce using rule 78 (method_reference)


State 570

   69 method_invocation: type_name DOT SUPER DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 629


State 571

   76 method_reference: type_name DOT SUPER COLON COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 63

    type_arguments  go to state 630


State 572

   65 method_invocation: type_name DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 631
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 573

   72 argument_list: argument_list COMMA expression •

    $default  reduce using rule 72 (argument_list)


State 574

  199 conditional_expression: conditional_or_expression QUESTION expression COLON lambda_expression •

    $default  reduce using rule 199 (conditional_expression)


State 575

  198 conditional_expression: conditional_or_expression QUESTION expression COLON conditional_expression •

    $default  reduce using rule 198 (conditional_expression)


State 576

   67 method_invocation: primary DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 632
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 577

   77 method_reference: primary COLON COLON type_arguments IDENTIFIER •

    $default  reduce using rule 77 (method_reference)


State 578

  167 dims: annotations LSPAR RSPAR dim •

    $default  reduce using rule 167 (dims)


State 579

  168 dim: annotations • LSPAR RSPAR
  398 annotations: annotations • annotation

    AT     shift, and go to state 31
    LSPAR  shift, and go to state 633

    annotation  go to state 32


State 580

   79 method_reference: class_type COLON COLON type_arguments NEW •

    $default  reduce using rule 79 (method_reference)


State 581

  147 finally: FINALLY block •

    $default  reduce using rule 147 (finally)


State 582

  142 catch_clause: catch LPAREN catch_formal_parameter • RPAREN block

    RPAREN  shift, and go to state 634


State 583

  144 catch_formal_parameter: catch_type • IDENTIFIER
  146 catch_type: catch_type • OR unanntype

    IDENTIFIER  shift, and go to state 635
    OR          shift, and go to state 636


State 584

  145 catch_type: unanntype •

    $default  reduce using rule 145 (catch_type)


State 585

  133 synchronized_statement: SYNCHRONIZED LPAREN expression RPAREN block •

    $default  reduce using rule 133 (synchronized_statement)


State 586

   60 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional • RPAREN class_body

    RPAREN  shift, and go to state 637


State 587

   61 class_or_interface_type_to_instantiate: annotations IDENTIFIER dot_annotation_indentifiers_optional • type_arguments_opt
   62 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional • DOT annotations IDENTIFIER

    DOT  shift, and go to state 638
    LT   shift, and go to state 63

    $default  reduce using rule 312 (type_arguments_opt)

    type_arguments      go to state 64
    type_arguments_opt  go to state 639


State 588

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •
   51 labeled_statement: IDENTIFIER • COLON statement
   97 labeled_statement_no_short_if: IDENTIFIER • COLON statement_no_short_if

    COLON  shift, and go to state 640

    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    COLON     [reduce using rule 5 (module_or_package_or_expression_name)]
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 589

   90 if_footer: statement •

    $default  reduce using rule 90 (if_footer)


State 590

   35 statement: statement_without_trailing_substatement •
   92 statement_no_short_if: statement_without_trailing_substatement •

    ELSE      reduce using rule 92 (statement_no_short_if)
    $default  reduce using rule 35 (statement)


State 591

   89 if_then_else_statement: if LPAREN expression RPAREN if_footer •

    $default  reduce using rule 89 (if_then_else_statement)


State 592

   91 if_footer: statement_no_short_if • else statement

    ELSE  shift, and go to state 641

    else  go to state 642


State 593

   93 statement_no_short_if: labeled_statement_no_short_if •

    $default  reduce using rule 93 (statement_no_short_if)


State 594

   94 statement_no_short_if: if_then_else_statement_no_short_if •

    $default  reduce using rule 94 (statement_no_short_if)


State 595

   95 statement_no_short_if: while_statement_no_short_if •

    $default  reduce using rule 95 (statement_no_short_if)


State 596

   96 statement_no_short_if: for_statement_no_short_if •

    $default  reduce using rule 96 (statement_no_short_if)


State 597

  101 for_statement_no_short_if: enhanced_for_statement_no_short_if •

    $default  reduce using rule 101 (for_statement_no_short_if)


State 598

   89 if_then_else_statement: if • LPAREN expression RPAREN if_footer
   98 if_then_else_statement_no_short_if: if • LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN  shift, and go to state 643


State 599

   99 while_statement_no_short_if: while • LPAREN expression RPAREN statement_no_short_if
  105 while_statement: while • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 644


State 600

  100 for_statement_no_short_if: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  102 enhanced_for_statement_no_short_if: for • LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if
  107 for_statement: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN  shift, and go to state 645


State 601

  105 while_statement: while LPAREN expression RPAREN statement •

    $default  reduce using rule 105 (while_statement)


State 602

  114 statement_expressions: statement_expressions COMMA • statement_expression

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    statement_expression                  go to state 646
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 603

  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 647


State 604

  116 expression_opt: expression •

    $default  reduce using rule 116 (expression_opt)


State 605

  122 assert_statement: assert expression COLON expression SEMICOLON •

    $default  reduce using rule 122 (assert_statement)


State 606

  348 method_header: type_parameters annotations result method_declarator throws_empty •

    $default  reduce using rule 348 (method_header)


State 607

   28 variable_modifiers: variable_modifiers • variable_modifier
  170 variable_arity_parameter: variable_modifiers • unanntype variable_arity_parameter_id
  367 formal_parameter: variable_modifiers • unanntype variable_declarator_id

    AT       shift, and go to state 31
    FINAL    shift, and go to state 331
    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    variable_modifier     go to state 333
    final                 go to state 334
    unanntype             go to state 648
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235
    annotation            go to state 338


State 608

  368 formal_parameter: variable_arity_parameter •

    $default  reduce using rule 368 (formal_parameter)


State 609

  360 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list • RPAREN dim
  364 formal_parameter_list: formal_parameter_list • COMMA formal_parameter

    COMMA   shift, and go to state 649
    RPAREN  shift, and go to state 650


State 610

  365 formal_parameter_list: formal_parameter •

    $default  reduce using rule 365 (formal_parameter_list)


State 611

  361 reciever_parameter: annotations unanntype • IDENTIFIER DOT THIS
  362                   | annotations unanntype • THIS

    IDENTIFIER  shift, and go to state 651
    THIS        shift, and go to state 652


State 612

  364 formal_parameter_list: formal_parameter_list • COMMA formal_parameter
  378 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter formal_parameter_list • RPAREN

    COMMA   shift, and go to state 649
    RPAREN  shift, and go to state 653


State 613

  354 exception_type_list: exception_type_list COMMA exception_type •

    $default  reduce using rule 354 (exception_type_list)


State 614

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT • IDENTIFIER
    8 type_name: module_or_package_or_expression_name DOT • type_identifier
   66 method_invocation: module_or_package_or_expression_name DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  310 class_type: module_or_package_or_expression_name DOT • annotations type_identifier type_arguments_opt
  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT • type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 94
    LT          shift, and go to state 63

    AT          reduce using rule 399 (annotations)
    IDENTIFIER  [reduce using rule 399 (annotations)]
    $default    reduce using rule 389 (type_arguments_empty)

    type_identifier       go to state 95
    type_arguments        go to state 654
    type_arguments_empty  go to state 655
    annotations           go to state 61


State 615

  382 constructor_body: LMPARA block_statements RMPARA •

    $default  reduce using rule 382 (constructor_body)


State 616

   67 method_invocation: primary DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  180 field_access: primary DOT • IDENTIFIER
  387 explicit_constructor_invocation: primary DOT • type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 434
    LT          shift, and go to state 63

    $default  reduce using rule 389 (type_arguments_empty)

    type_arguments        go to state 656
    type_arguments_empty  go to state 657


State 617

  381 constructor_body: LMPARA explicit_constructor_invocation RMPARA •

    $default  reduce using rule 381 (constructor_body)


State 618

   15 block_statements: block_statements • block_statement
  380 constructor_body: LMPARA explicit_constructor_invocation block_statements • RMPARA

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    RMPARA        shift, and go to state 658
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    COLON        reduce using rule 74 (method_reference)
    FINAL        reduce using rule 29 (variable_modifiers)
    FINAL        [reduce using rule 288 (class_modifiers)]
    VAR          reduce using rule 29 (variable_modifiers)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 288 (class_modifiers)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    block_statement                          go to state 329
    local_class_or_interface_declaration     go to state 191
    local_variable_declaration_statement     go to state 192
    local_variable_declaration               go to state 193
    variable_modifiers                       go to state 194
    statement                                go to state 195
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    class_declaration                        go to state 229
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 619

  384 explicit_constructor_invocation: type_arguments_empty THIS • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 659


State 620

  385 explicit_constructor_invocation: type_arguments_empty SUPER • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 660


State 621

  159 more_identifiers: more_identifiers COMMA IDENTIFIER •

    $default  reduce using rule 159 (more_identifiers)


State 622

  171 variable_arity_parameter_id: annotations ELLIPSIS • IDENTIFIER

    IDENTIFIER  shift, and go to state 661


State 623

  157 more_lambda_parameters: more_lambda_parameters COMMA lambda_parameter •

    $default  reduce using rule 157 (more_lambda_parameters)


State 624

   68 method_invocation: SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 662


State 625

  418 array_initializer: LMPARA variable_initializer_list_opt comma_opt • RMPARA

    RMPARA  shift, and go to state 663


State 626

  422 variable_initializer_list: variable_initializer variable_init •
  423 variable_init: variable_init • COMMA variable_initializer

    COMMA  shift, and go to state 664

    COMMA     [reduce using rule 422 (variable_initializer_list)]
    $default  reduce using rule 422 (variable_initializer_list)


State 627

  255 dimexpr: annotations LSPAR expression RSPAR •

    $default  reduce using rule 255 (dimexpr)


State 628

   66 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 665


State 629

   69 method_invocation: type_name DOT SUPER DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 666


State 630

   76 method_reference: type_name DOT SUPER COLON COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 667


State 631

   65 method_invocation: type_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 668


State 632

   67 method_invocation: primary DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 669


State 633

  168 dim: annotations LSPAR • RSPAR

    RSPAR  shift, and go to state 670


State 634

  142 catch_clause: catch LPAREN catch_formal_parameter RPAREN • block

    LMPARA  shift, and go to state 72

    block  go to state 671


State 635

  144 catch_formal_parameter: catch_type IDENTIFIER •

    $default  reduce using rule 144 (catch_formal_parameter)


State 636

  146 catch_type: catch_type OR • unanntype

    INT      shift, and go to state 105
    LONG     shift, and go to state 106
    SHORT    shift, and go to state 107
    BYTE     shift, and go to state 108
    FLOAT    shift, and go to state 109
    DOUBLE   shift, and go to state 110
    BOOLEAN  shift, and go to state 231

    unanntype             go to state 672
    unann_primitive_type  go to state 233
    numeric_type          go to state 234
    integral_type         go to state 148
    floating_point_type   go to state 149
    boolean               go to state 235


State 637

   60 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN • class_body

    LMPARA  shift, and go to state 38

    class_body  go to state 673


State 638

   62 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT • annotations IDENTIFIER

    $default  reduce using rule 399 (annotations)

    annotations  go to state 674


State 639

   61 class_or_interface_type_to_instantiate: annotations IDENTIFIER dot_annotation_indentifiers_optional type_arguments_opt •

    $default  reduce using rule 61 (class_or_interface_type_to_instantiate)


State 640

   51 labeled_statement: IDENTIFIER COLON • statement
   97 labeled_statement_no_short_if: IDENTIFIER COLON • statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 588
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 448
    statement_without_trailing_substatement  go to state 590
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    statement_no_short_if                    go to state 675
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 598
    while_statement                          go to state 205
    while                                    go to state 599
    for_statement                            go to state 207
    for                                      go to state 600
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 641

  104 else: ELSE •

    $default  reduce using rule 104 (else)


State 642

   91 if_footer: statement_no_short_if else • statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 676
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 643

   89 if_then_else_statement: if LPAREN • expression RPAREN if_footer
   98 if_then_else_statement_no_short_if: if LPAREN • expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 677
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 644

   99 while_statement_no_short_if: while LPAREN • expression RPAREN statement_no_short_if
  105 while_statement: while LPAREN • expression RPAREN statement

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 678
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 645

  100 for_statement_no_short_if: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  102 enhanced_for_statement_no_short_if: for LPAREN • local_variable_declaration COLON expression RPAREN statement_no_short_if
  107 for_statement: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    SEMICOLON    reduce using rule 110 (for_init_opt)
    COLON        reduce using rule 74 (method_reference)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 29 (variable_modifiers)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    local_variable_declaration            go to state 679
    variable_modifiers                    go to state 194
    statement_expression                  go to state 462
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    for_init_opt                          go to state 680
    for_init                              go to state 464
    statement_expression_list             go to state 465
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 646

  114 statement_expressions: statement_expressions COMMA statement_expression •

    $default  reduce using rule 114 (statement_expressions)


State 647

  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 119 (for_update_opt)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    statement_expression                  go to state 462
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    statement_expression_list             go to state 681
    for_update_opt                        go to state 682
    for_update                            go to state 683
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 648

  170 variable_arity_parameter: variable_modifiers unanntype • variable_arity_parameter_id
  367 formal_parameter: variable_modifiers unanntype • variable_declarator_id

    IDENTIFIER  shift, and go to state 363

    $default  reduce using rule 399 (annotations)

    variable_declarator_id       go to state 684
    variable_arity_parameter_id  go to state 558
    annotations                  go to state 559


State 649

  364 formal_parameter_list: formal_parameter_list COMMA • formal_parameter

    $default  reduce using rule 29 (variable_modifiers)

    variable_modifiers        go to state 607
    variable_arity_parameter  go to state 608
    formal_parameter          go to state 685


State 650

  360 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list RPAREN • dim

    AT        reduce using rule 399 (annotations)
    LSPAR     reduce using rule 399 (annotations)
    $default  reduce using rule 169 (dim)

    dim          go to state 686
    annotations  go to state 579


State 651

  361 reciever_parameter: annotations unanntype IDENTIFIER • DOT THIS

    DOT  shift, and go to state 687


State 652

  362 reciever_parameter: annotations unanntype THIS •

    $default  reduce using rule 362 (reciever_parameter)


State 653

  378 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter formal_parameter_list RPAREN •

    $default  reduce using rule 378 (constructor_declarator)


State 654

   66 method_invocation: module_or_package_or_expression_name DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN
  388 type_arguments_empty: type_arguments •

    IDENTIFIER  shift, and go to state 508

    $default  reduce using rule 388 (type_arguments_empty)


State 655

  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_empty • SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    SUPER  shift, and go to state 688


State 656

   67 method_invocation: primary DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN
  388 type_arguments_empty: type_arguments •

    IDENTIFIER  shift, and go to state 518

    $default  reduce using rule 388 (type_arguments_empty)


State 657

  387 explicit_constructor_invocation: primary DOT type_arguments_empty • SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    SUPER  shift, and go to state 689


State 658

  380 constructor_body: LMPARA explicit_constructor_invocation block_statements RMPARA •

    $default  reduce using rule 380 (constructor_body)


State 659

  384 explicit_constructor_invocation: type_arguments_empty THIS LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 690
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 660

  385 explicit_constructor_invocation: type_arguments_empty SUPER LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 691
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 661

  171 variable_arity_parameter_id: annotations ELLIPSIS IDENTIFIER •

    $default  reduce using rule 171 (variable_arity_parameter_id)


State 662

   68 method_invocation: SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 68 (method_invocation)


State 663

  418 array_initializer: LMPARA variable_initializer_list_opt comma_opt RMPARA •

    $default  reduce using rule 418 (array_initializer)


State 664

  423 variable_init: variable_init COMMA • variable_initializer

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LMPARA       shift, and go to state 502
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 541
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155
    array_initializer                     go to state 542
    variable_initializer                  go to state 692


State 665

   66 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 66 (method_invocation)


State 666

   69 method_invocation: type_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 693
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 667

   76 method_reference: type_name DOT SUPER COLON COLON type_arguments IDENTIFIER •

    $default  reduce using rule 76 (method_reference)


State 668

   65 method_invocation: type_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 65 (method_invocation)


State 669

   67 method_invocation: primary DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 67 (method_invocation)


State 670

  168 dim: annotations LSPAR RSPAR •

    $default  reduce using rule 168 (dim)


State 671

  142 catch_clause: catch LPAREN catch_formal_parameter RPAREN block •

    $default  reduce using rule 142 (catch_clause)


State 672

  146 catch_type: catch_type OR unanntype •

    $default  reduce using rule 146 (catch_type)


State 673

   60 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body •

    $default  reduce using rule 60 (class_instance_creation_expression)


State 674

   62 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT annotations • IDENTIFIER
  398 annotations: annotations • annotation

    AT          shift, and go to state 31
    IDENTIFIER  shift, and go to state 694

    annotation  go to state 32


State 675

   97 labeled_statement_no_short_if: IDENTIFIER COLON statement_no_short_if •

    $default  reduce using rule 97 (labeled_statement_no_short_if)


State 676

   91 if_footer: statement_no_short_if else statement •

    $default  reduce using rule 91 (if_footer)


State 677

   89 if_then_else_statement: if LPAREN expression • RPAREN if_footer
   98 if_then_else_statement_no_short_if: if LPAREN expression • RPAREN statement_no_short_if ELSE statement_no_short_if

    RPAREN  shift, and go to state 695


State 678

   99 while_statement_no_short_if: while LPAREN expression • RPAREN statement_no_short_if
  105 while_statement: while LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 696


State 679

  102 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration • COLON expression RPAREN statement_no_short_if
  112 for_init: local_variable_declaration •

    COLON  shift, and go to state 697

    $default  reduce using rule 112 (for_init)


State 680

  100 for_statement_no_short_if: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  107 for_statement: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 698


State 681

  120 for_update: statement_expression_list •

    $default  reduce using rule 120 (for_update)


State 682

  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement

    RPAREN  shift, and go to state 699


State 683

  118 for_update_opt: for_update •

    $default  reduce using rule 118 (for_update_opt)


State 684

  367 formal_parameter: variable_modifiers unanntype variable_declarator_id •

    $default  reduce using rule 367 (formal_parameter)


State 685

  364 formal_parameter_list: formal_parameter_list COMMA formal_parameter •

    $default  reduce using rule 364 (formal_parameter_list)


State 686

  360 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list RPAREN dim •

    $default  reduce using rule 360 (method_declarator)


State 687

  361 reciever_parameter: annotations unanntype IDENTIFIER DOT • THIS

    THIS  shift, and go to state 700


State 688

  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_empty SUPER • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 701


State 689

  387 explicit_constructor_invocation: primary DOT type_arguments_empty SUPER • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 702


State 690

  384 explicit_constructor_invocation: type_arguments_empty THIS LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 703


State 691

  385 explicit_constructor_invocation: type_arguments_empty SUPER LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 704


State 692

  423 variable_init: variable_init COMMA variable_initializer •

    $default  reduce using rule 423 (variable_init)


State 693

   69 method_invocation: type_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 705


State 694

   62 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT annotations IDENTIFIER •

    $default  reduce using rule 62 (dot_annotation_indentifiers_optional)


State 695

   89 if_then_else_statement: if LPAREN expression RPAREN • if_footer
   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN • statement_no_short_if ELSE statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 588
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 589
    statement_without_trailing_substatement  go to state 590
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if_footer                                go to state 591
    statement_no_short_if                    go to state 706
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 598
    while_statement                          go to state 205
    while                                    go to state 599
    for_statement                            go to state 207
    for                                      go to state 600
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 696

   99 while_statement_no_short_if: while LPAREN expression RPAREN • statement_no_short_if
  105 while_statement: while LPAREN expression RPAREN • statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 588
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 601
    statement_without_trailing_substatement  go to state 590
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    statement_no_short_if                    go to state 707
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 598
    while_statement                          go to state 205
    while                                    go to state 599
    for_statement                            go to state 207
    for                                      go to state 600
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 697

  102 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON • expression RPAREN statement_no_short_if

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 708
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 698

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  107 for_statement: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    SEMICOLON    reduce using rule 74 (method_reference)
    SEMICOLON    [reduce using rule 117 (expression_opt)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression_opt                        go to state 709
    expression                            go to state 604
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 699

  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 173
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 710
    statement_without_trailing_substatement  go to state 196
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    if                                       go to state 204
    while_statement                          go to state 205
    while                                    go to state 206
    for_statement                            go to state 207
    for                                      go to state 208
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 700

  361 reciever_parameter: annotations unanntype IDENTIFIER DOT THIS •

    $default  reduce using rule 361 (reciever_parameter)


State 701

  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_empty SUPER LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 711
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 702

  387 explicit_constructor_invocation: primary DOT type_arguments_empty SUPER LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 71 (argument_list_optional)
    RPAREN       [reduce using rule 74 (method_reference)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    argument_list_optional                go to state 712
    argument_list                         go to state 411
    method_reference                      go to state 122
    expression                            go to state 412
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 703

  384 explicit_constructor_invocation: type_arguments_empty THIS LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 713


State 704

  385 explicit_constructor_invocation: type_arguments_empty SUPER LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 714


State 705

   69 method_invocation: type_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 69 (method_invocation)


State 706

   91 if_footer: statement_no_short_if • else statement
   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if • ELSE statement_no_short_if

    ELSE  shift, and go to state 715

    else  go to state 642


State 707

   99 while_statement_no_short_if: while LPAREN expression RPAREN statement_no_short_if •

    $default  reduce using rule 99 (while_statement_no_short_if)


State 708

  102 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression • RPAREN statement_no_short_if

    RPAREN  shift, and go to state 716


State 709

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement_no_short_if
  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 717


State 710

  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement •

    $default  reduce using rule 107 (for_statement)


State 711

  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_empty SUPER LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 718


State 712

  387 explicit_constructor_invocation: primary DOT type_arguments_empty SUPER LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 719


State 713

  384 explicit_constructor_invocation: type_arguments_empty THIS LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 384 (explicit_constructor_invocation)


State 714

  385 explicit_constructor_invocation: type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 385 (explicit_constructor_invocation)


State 715

   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE • statement_no_short_if
  104 else: ELSE •

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT            reduce using rule 104 (else)
    AT            [reduce using rule 399 (annotations)]
    LPAREN        [reduce using rule 104 (else)]
    IDENTIFIER    [reduce using rule 104 (else)]
    IDENTIFIER    [reduce using rule 399 (annotations)]
    DOT           reduce using rule 74 (method_reference)
    DOT           [reduce using rule 104 (else)]
    SEMICOLON     [reduce using rule 104 (else)]
    COLON         reduce using rule 74 (method_reference)
    COLON         [reduce using rule 104 (else)]
    RETURN        [reduce using rule 104 (else)]
    TRY           [reduce using rule 104 (else)]
    SYNCHRONIZED  [reduce using rule 104 (else)]
    THROW         [reduce using rule 104 (else)]
    ASSERT        [reduce using rule 104 (else)]
    BREAK         [reduce using rule 104 (else)]
    CONTINUE      [reduce using rule 104 (else)]
    IF            [reduce using rule 104 (else)]
    WHILE         [reduce using rule 104 (else)]
    FOR           [reduce using rule 104 (else)]
    LSPAR         reduce using rule 74 (method_reference)
    LSPAR         [reduce using rule 104 (else)]
    PLUS_PLUS     [reduce using rule 74 (method_reference)]
    PLUS_PLUS     [reduce using rule 104 (else)]
    MINUS_MINUS   [reduce using rule 74 (method_reference)]
    MINUS_MINUS   [reduce using rule 104 (else)]
    THIS          [reduce using rule 104 (else)]
    SUPER         [reduce using rule 104 (else)]
    INT           [reduce using rule 104 (else)]
    INT           [reduce using rule 399 (annotations)]
    LONG          [reduce using rule 104 (else)]
    LONG          [reduce using rule 399 (annotations)]
    SHORT         [reduce using rule 104 (else)]
    SHORT         [reduce using rule 399 (annotations)]
    BYTE          [reduce using rule 104 (else)]
    BYTE          [reduce using rule 399 (annotations)]
    FLOAT         [reduce using rule 104 (else)]
    FLOAT         [reduce using rule 399 (annotations)]
    DOUBLE        [reduce using rule 104 (else)]
    DOUBLE        [reduce using rule 399 (annotations)]
    BOOLEAN       [reduce using rule 104 (else)]
    BOOLEAN       [reduce using rule 399 (annotations)]
    VOID          [reduce using rule 104 (else)]
    LMPARA        [reduce using rule 104 (else)]
    LITERAL       [reduce using rule 104 (else)]
    NEW           [reduce using rule 104 (else)]
    $default      reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 722
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 716

  102 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression RPAREN • statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 726
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 717

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement_no_short_if
  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 119 (for_update_opt)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    statement_expression                  go to state 462
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    statement_expression_list             go to state 681
    for_update_opt                        go to state 727
    for_update                            go to state 683
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 718

  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 728


State 719

  387 explicit_constructor_invocation: primary DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 729


State 720

    5 module_or_package_or_expression_name: IDENTIFIER •
    9 type_identifier: IDENTIFIER •
   11 unqualified_method_identifier: IDENTIFIER •
   97 labeled_statement_no_short_if: IDENTIFIER • COLON statement_no_short_if

    COLON  shift, and go to state 730

    LPAREN    reduce using rule 11 (unqualified_method_identifier)
    DOT       reduce using rule 5 (module_or_package_or_expression_name)
    DOT       [reduce using rule 9 (type_identifier)]
    COLON     [reduce using rule 5 (module_or_package_or_expression_name)]
    LSPAR     reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR     [reduce using rule 9 (type_identifier)]
    $default  reduce using rule 5 (module_or_package_or_expression_name)


State 721

   92 statement_no_short_if: statement_without_trailing_substatement •

    $default  reduce using rule 92 (statement_no_short_if)


State 722

   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if •

    $default  reduce using rule 98 (if_then_else_statement_no_short_if)


State 723

   98 if_then_else_statement_no_short_if: if • LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN  shift, and go to state 731


State 724

   99 while_statement_no_short_if: while • LPAREN expression RPAREN statement_no_short_if

    LPAREN  shift, and go to state 732


State 725

  100 for_statement_no_short_if: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  102 enhanced_for_statement_no_short_if: for • LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if

    LPAREN  shift, and go to state 733


State 726

  102 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if •

    $default  reduce using rule 102 (enhanced_for_statement_no_short_if)


State 727

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement_no_short_if
  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement

    RPAREN  shift, and go to state 734


State 728

  386 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 386 (explicit_constructor_invocation)


State 729

  387 explicit_constructor_invocation: primary DOT type_arguments_empty SUPER LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 387 (explicit_constructor_invocation)


State 730

   97 labeled_statement_no_short_if: IDENTIFIER COLON • statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 675
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 731

   98 if_then_else_statement_no_short_if: if LPAREN • expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 735
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 732

   99 while_statement_no_short_if: while LPAREN • expression RPAREN statement_no_short_if

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression                            go to state 736
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 733

  100 for_statement_no_short_if: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  102 enhanced_for_statement_no_short_if: for LPAREN • local_variable_declaration COLON expression RPAREN statement_no_short_if

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 29 (variable_modifiers)
    AT           [reduce using rule 399 (annotations)]
    IDENTIFIER   [reduce using rule 399 (annotations)]
    DOT          reduce using rule 74 (method_reference)
    SEMICOLON    reduce using rule 110 (for_init_opt)
    COLON        reduce using rule 74 (method_reference)
    LSPAR        reduce using rule 74 (method_reference)
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 29 (variable_modifiers)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 29 (variable_modifiers)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 29 (variable_modifiers)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 29 (variable_modifiers)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 29 (variable_modifiers)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 29 (variable_modifiers)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 29 (variable_modifiers)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 29 (variable_modifiers)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    local_variable_declaration            go to state 679
    variable_modifiers                    go to state 194
    statement_expression                  go to state 462
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    for_init_opt                          go to state 737
    for_init                              go to state 464
    statement_expression_list             go to state 465
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 734

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement_no_short_if
  107 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 588
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement                                go to state 710
    statement_without_trailing_substatement  go to state 590
    empty_statement                          go to state 197
    labeled_statement                        go to state 198
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    if_then_else_statement                   go to state 203
    statement_no_short_if                    go to state 738
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 598
    while_statement                          go to state 205
    while                                    go to state 599
    for_statement                            go to state 207
    for                                      go to state 600
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 735

   98 if_then_else_statement_no_short_if: if LPAREN expression • RPAREN statement_no_short_if ELSE statement_no_short_if

    RPAREN  shift, and go to state 739


State 736

   99 while_statement_no_short_if: while LPAREN expression • RPAREN statement_no_short_if

    RPAREN  shift, and go to state 740


State 737

  100 for_statement_no_short_if: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if

    SEMICOLON  shift, and go to state 741


State 738

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if •

    $default  reduce using rule 100 (for_statement_no_short_if)


State 739

   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN • statement_no_short_if ELSE statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 742
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 740

   99 while_statement_no_short_if: while LPAREN expression RPAREN • statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 707
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 741

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if

    LPAREN       shift, and go to state 248
    IDENTIFIER   shift, and go to state 249
    PLUS         shift, and go to state 98
    MINUS        shift, and go to state 99
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    TILDE        shift, and go to state 102
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    NOT          shift, and go to state 113
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 116

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    SEMICOLON    reduce using rule 74 (method_reference)
    SEMICOLON    [reduce using rule 117 (expression_opt)]
    PLUS         [reduce using rule 74 (method_reference)]
    MINUS        [reduce using rule 74 (method_reference)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    method_invocation                     go to state 121
    method_reference                      go to state 122
    expression_opt                        go to state 743
    expression                            go to state 604
    lambda_expression                     go to state 251
    lambda_parameters                     go to state 252
    assignment_expression                 go to state 253
    assignment                            go to state 254
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    conditional_expression                go to state 255
    conditional_or_expression             go to state 126
    conditional_and_expression            go to state 127
    inclusive_or_expression               go to state 128
    exclusive_or_expression               go to state 129
    and_expression                        go to state 130
    equality_expression                   go to state 131
    relational_expression                 go to state 132
    shift_expression                      go to state 133
    additive_expression                   go to state 134
    multiplicative_expression             go to state 135
    unary_expression                      go to state 136
    pre_increment_expression              go to state 137
    pre_decrement_expression              go to state 138
    post_increment_expression             go to state 139
    post_decrement_expression             go to state 140
    unary_expression_not_plus_minus       go to state 141
    postfix_expression                    go to state 142
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 742

   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if • ELSE statement_no_short_if

    ELSE  shift, and go to state 744


State 743

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement_no_short_if

    SEMICOLON  shift, and go to state 745


State 744

   98 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE • statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 722
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155


State 745

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement_no_short_if

    LPAREN       shift, and go to state 96
    IDENTIFIER   shift, and go to state 257
    PLUS_PLUS    shift, and go to state 100
    MINUS_MINUS  shift, and go to state 101
    THIS         shift, and go to state 103
    SUPER        shift, and go to state 104
    INT          shift, and go to state 105
    LONG         shift, and go to state 106
    SHORT        shift, and go to state 107
    BYTE         shift, and go to state 108
    FLOAT        shift, and go to state 109
    DOUBLE       shift, and go to state 110
    BOOLEAN      shift, and go to state 111
    VOID         shift, and go to state 112
    LITERAL      shift, and go to state 115
    NEW          shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    RPAREN       reduce using rule 119 (for_update_opt)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name  go to state 186
    type_name                             go to state 118
    type_identifier                       go to state 47
    method_name                           go to state 119
    unqualified_method_identifier         go to state 120
    statement_expression                  go to state 462
    class_instance_creation_expression    go to state 201
    method_invocation                     go to state 202
    method_reference                      go to state 122
    statement_expression_list             go to state 681
    for_update_opt                        go to state 746
    for_update                            go to state 683
    assignment                            go to state 220
    left_hand_side                        go to state 221
    field_access                          go to state 222
    array_access                          go to state 223
    pre_increment_expression              go to state 224
    pre_decrement_expression              go to state 225
    post_increment_expression             go to state 226
    post_decrement_expression             go to state 227
    postfix_expression                    go to state 228
    primary                               go to state 143
    array_creation_expression             go to state 144
    primary_no_new_array                  go to state 145
    class_literal                         go to state 146
    numeric_type                          go to state 147
    integral_type                         go to state 148
    floating_point_type                   go to state 149
    type_variable                         go to state 150
    class_type                            go to state 151
    class_or_interface_type               go to state 152
    array_type                            go to state 153
    primitive_type                        go to state 154
    annotations                           go to state 155


State 746

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement_no_short_if

    RPAREN  shift, and go to state 747


State 747

  100 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement_no_short_if

    LPAREN        shift, and go to state 96
    IDENTIFIER    shift, and go to state 720
    SEMICOLON     shift, and go to state 174
    RETURN        shift, and go to state 175
    TRY           shift, and go to state 176
    SYNCHRONIZED  shift, and go to state 177
    THROW         shift, and go to state 178
    ASSERT        shift, and go to state 179
    BREAK         shift, and go to state 180
    CONTINUE      shift, and go to state 181
    IF            shift, and go to state 182
    WHILE         shift, and go to state 183
    FOR           shift, and go to state 184
    PLUS_PLUS     shift, and go to state 100
    MINUS_MINUS   shift, and go to state 101
    THIS          shift, and go to state 103
    SUPER         shift, and go to state 104
    INT           shift, and go to state 105
    LONG          shift, and go to state 106
    SHORT         shift, and go to state 107
    BYTE          shift, and go to state 108
    FLOAT         shift, and go to state 109
    DOUBLE        shift, and go to state 110
    BOOLEAN       shift, and go to state 111
    VOID          shift, and go to state 112
    LMPARA        shift, and go to state 72
    LITERAL       shift, and go to state 115
    NEW           shift, and go to state 185

    AT           reduce using rule 399 (annotations)
    IDENTIFIER   [reduce using rule 399 (annotations)]
    PLUS_PLUS    [reduce using rule 74 (method_reference)]
    MINUS_MINUS  [reduce using rule 74 (method_reference)]
    INT          [reduce using rule 399 (annotations)]
    LONG         [reduce using rule 399 (annotations)]
    SHORT        [reduce using rule 399 (annotations)]
    BYTE         [reduce using rule 399 (annotations)]
    FLOAT        [reduce using rule 399 (annotations)]
    DOUBLE       [reduce using rule 399 (annotations)]
    BOOLEAN      [reduce using rule 399 (annotations)]
    $default     reduce using rule 74 (method_reference)

    module_or_package_or_expression_name     go to state 186
    type_name                                go to state 118
    type_identifier                          go to state 47
    method_name                              go to state 119
    unqualified_method_identifier            go to state 120
    block                                    go to state 187
    statement_without_trailing_substatement  go to state 721
    empty_statement                          go to state 197
    expression_statement                     go to state 199
    statement_expression                     go to state 200
    class_instance_creation_expression       go to state 201
    method_invocation                        go to state 202
    method_reference                         go to state 122
    statement_no_short_if                    go to state 738
    labeled_statement_no_short_if            go to state 593
    if_then_else_statement_no_short_if       go to state 594
    while_statement_no_short_if              go to state 595
    for_statement_no_short_if                go to state 596
    enhanced_for_statement_no_short_if       go to state 597
    if                                       go to state 723
    while                                    go to state 724
    for                                      go to state 725
    assert_statement                         go to state 209
    assert                                   go to state 210
    break_statement                          go to state 211
    break                                    go to state 212
    continue_statement                       go to state 213
    continue                                 go to state 214
    return_statement                         go to state 215
    return                                   go to state 216
    synchronized_statement                   go to state 217
    throw_statement                          go to state 218
    try_statement                            go to state 219
    assignment                               go to state 220
    left_hand_side                           go to state 221
    field_access                             go to state 222
    array_access                             go to state 223
    pre_increment_expression                 go to state 224
    pre_decrement_expression                 go to state 225
    post_increment_expression                go to state 226
    post_decrement_expression                go to state 227
    postfix_expression                       go to state 228
    primary                                  go to state 143
    array_creation_expression                go to state 144
    primary_no_new_array                     go to state 145
    class_literal                            go to state 146
    numeric_type                             go to state 147
    integral_type                            go to state 148
    floating_point_type                      go to state 149
    type_variable                            go to state 150
    class_type                               go to state 151
    class_or_interface_type                  go to state 152
    array_type                               go to state 153
    primitive_type                           go to state 154
    annotations                              go to state 155
