Terminals unused in grammar

    IDENTIFIER_NOT
    AT
    YIELD
    IMPLEMENTS
    PERMITS
    RECORD
    ENUM
    INTERFACE
    SEALED
    NON_SEALED
    DEFAULT
    OPEN
    TRANSITIVE
    MODULE
    REQUIRES
    EXPORTS
    OPENS
    USES
    PROVIDES
    WITH
    IMPORT
    ASTERISK
    PACKAGE
    TO


State 32 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 70 conflicts: 9 shift/reduce, 1 reduce/reduce
State 82 conflicts: 7 reduce/reduce
State 89 conflicts: 1 shift/reduce, 7 reduce/reduce
State 100 conflicts: 4 shift/reduce
State 106 conflicts: 4 shift/reduce
State 113 conflicts: 4 shift/reduce
State 114 conflicts: 4 shift/reduce
State 117 conflicts: 1 reduce/reduce
State 120 conflicts: 1 shift/reduce
State 121 conflicts: 3 shift/reduce, 14 reduce/reduce
State 122 conflicts: 1 shift/reduce, 3 reduce/reduce
State 127 conflicts: 9 shift/reduce, 1 reduce/reduce
State 149 conflicts: 4 shift/reduce
State 155 conflicts: 5 shift/reduce
State 161 conflicts: 1 reduce/reduce
State 162 conflicts: 1 reduce/reduce
State 172 conflicts: 1 reduce/reduce
State 193 conflicts: 11 shift/reduce
State 195 conflicts: 4 shift/reduce
State 196 conflicts: 4 shift/reduce
State 197 conflicts: 4 shift/reduce
State 198 conflicts: 4 shift/reduce
State 209 conflicts: 1 shift/reduce
State 211 conflicts: 1 shift/reduce
State 224 conflicts: 2 shift/reduce
State 226 conflicts: 4 shift/reduce
State 229 conflicts: 3 shift/reduce, 2 reduce/reduce
State 244 conflicts: 4 shift/reduce
State 246 conflicts: 4 shift/reduce, 1 reduce/reduce
State 258 conflicts: 4 shift/reduce
State 259 conflicts: 4 shift/reduce
State 260 conflicts: 9 shift/reduce
State 280 conflicts: 4 shift/reduce
State 285 conflicts: 4 shift/reduce
State 306 conflicts: 1 reduce/reduce
State 317 conflicts: 4 shift/reduce
State 318 conflicts: 4 shift/reduce
State 319 conflicts: 4 shift/reduce
State 320 conflicts: 4 shift/reduce
State 321 conflicts: 4 shift/reduce
State 322 conflicts: 4 shift/reduce
State 323 conflicts: 4 shift/reduce
State 324 conflicts: 4 shift/reduce
State 325 conflicts: 4 shift/reduce
State 326 conflicts: 4 shift/reduce
State 327 conflicts: 4 shift/reduce
State 328 conflicts: 4 shift/reduce
State 329 conflicts: 4 shift/reduce
State 331 conflicts: 4 shift/reduce
State 332 conflicts: 4 shift/reduce
State 333 conflicts: 4 shift/reduce
State 334 conflicts: 4 shift/reduce
State 335 conflicts: 4 shift/reduce
State 336 conflicts: 4 shift/reduce
State 337 conflicts: 4 shift/reduce
State 338 conflicts: 4 shift/reduce
State 353 conflicts: 5 shift/reduce
State 380 conflicts: 4 shift/reduce
State 395 conflicts: 4 shift/reduce
State 398 conflicts: 7 shift/reduce
State 400 conflicts: 7 shift/reduce
State 404 conflicts: 11 shift/reduce, 1 reduce/reduce
State 418 conflicts: 1 shift/reduce
State 420 conflicts: 1 shift/reduce
State 448 conflicts: 4 shift/reduce
State 454 conflicts: 4 shift/reduce, 1 reduce/reduce
State 462 conflicts: 4 shift/reduce
State 463 conflicts: 2 shift/reduce
State 464 conflicts: 2 shift/reduce
State 466 conflicts: 4 shift/reduce
State 483 conflicts: 3 shift/reduce, 14 reduce/reduce
State 484 conflicts: 9 shift/reduce, 1 reduce/reduce
State 487 conflicts: 9 shift/reduce, 1 reduce/reduce
State 493 conflicts: 4 shift/reduce
State 499 conflicts: 4 shift/reduce, 1 reduce/reduce
State 509 conflicts: 4 shift/reduce, 1 reduce/reduce
State 525 conflicts: 2 shift/reduce
State 529 conflicts: 4 shift/reduce, 1 reduce/reduce
State 538 conflicts: 1 shift/reduce
State 544 conflicts: 9 shift/reduce, 1 reduce/reduce
State 556 conflicts: 1 shift/reduce
State 562 conflicts: 2 shift/reduce
State 564 conflicts: 2 shift/reduce
State 565 conflicts: 4 shift/reduce
State 566 conflicts: 4 shift/reduce
State 567 conflicts: 9 shift/reduce
State 569 conflicts: 2 shift/reduce
State 580 conflicts: 4 shift/reduce, 1 reduce/reduce
State 581 conflicts: 4 shift/reduce, 1 reduce/reduce
State 587 conflicts: 4 shift/reduce
State 589 conflicts: 4 shift/reduce, 1 reduce/reduce
State 611 conflicts: 2 shift/reduce
State 612 conflicts: 2 shift/reduce
State 613 conflicts: 4 shift/reduce
State 614 conflicts: 4 shift/reduce
State 615 conflicts: 2 shift/reduce
State 616 conflicts: 4 shift/reduce, 1 reduce/reduce
State 617 conflicts: 4 shift/reduce, 1 reduce/reduce
State 630 conflicts: 28 shift/reduce, 5 reduce/reduce
State 631 conflicts: 2 shift/reduce
State 632 conflicts: 2 shift/reduce
State 645 conflicts: 2 shift/reduce
State 646 conflicts: 4 shift/reduce
State 647 conflicts: 4 shift/reduce
State 648 conflicts: 9 shift/reduce
State 649 conflicts: 2 shift/reduce
State 654 conflicts: 2 shift/reduce
State 655 conflicts: 2 shift/reduce
State 656 conflicts: 4 shift/reduce
State 659 conflicts: 2 shift/reduce
State 660 conflicts: 2 shift/reduce
State 662 conflicts: 2 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: ordinary_complilation_unit

    2 ordinary_complilation_unit: top_level_class_or_interface_declarations

    3 top_level_class_or_interface_declarations: top_level_class_or_interface_declarations class_declaration
    4                                          | ε

    5 module_or_package_or_expression_name: type_identifier
    6                                     | module_or_package_or_expression_name DOT type_identifier

    7 type_identifier: IDENTIFIER

    8 method_name: unqualified_method_identifier

    9 unqualified_method_identifier: IDENTIFIER

   10 block: LMPARA block_statements_opt RMPARA

   11 block_statements_opt: block_statements
   12                     | ε

   13 block_statements: block_statements block_statement
   14                 | block_statement

   15 block_statement: local_class_or_interface_declaration
   16                | local_variable_declaration_statement
   17                | statement

   18 local_class_or_interface_declaration: class_declaration

   19 local_variable_declaration_statement: local_variable_declaration SEMICOLON

   20 local_variable_declaration: variable_modifiers local_variable_type variable_declarators_list

   21 variable_declarators_list: variable_declarators_list COMMA variable_declarator
   22                          | variable_declarator

   23 variable_declarator: variable_declarator_id variable_initializer_opt

   24 variable_initializer_opt: EQUALS variable_initializer
   25                         | ε

   26 variable_modifiers: variable_modifiers variable_modifier
   27                   | ε

   28 variable_modifier: final

   29 final: FINAL

   30 local_variable_type: unanntype
   31                    | var

   32 statement: statement_without_trailing_substatement
   33          | labeled_statement
   34          | if_then_else_statement
   35          | while_statement
   36          | for_statement

   37 statement_without_trailing_substatement: block
   38                                        | empty_statement
   39                                        | expression_statement
   40                                        | assert_statement
   41                                        | break_statement
   42                                        | continue_statement
   43                                        | return_statement
   44                                        | synchronized_statement
   45                                        | throw_statement
   46                                        | try_statement

   47 empty_statement: SEMICOLON

   48 labeled_statement: IDENTIFIER COLON statement

   49 expression_statement: statement_expression SEMICOLON

   50 statement_expression: assignment
   51                     | pre_increment_expression
   52                     | pre_decrement_expression
   53                     | post_increment_expression
   54                     | post_decrement_expression
   55                     | method_invocation
   56                     | class_instance_creation_expression

   57 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body

   58 class_or_interface_type_to_instantiate: IDENTIFIER dot_annotation_indentifiers_optional type_arguments_opt

   59 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT IDENTIFIER
   60                                     | ε

   61 method_invocation: method_name LPAREN argument_list_optional RPAREN
   62                  | module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   63                  | primary DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   64                  | SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   65                  | module_or_package_or_expression_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN

   66 argument_list_optional: argument_list
   67                       | ε

   68 argument_list: argument_list COMMA expression
   69              | expression

   70 method_reference: ε
   71                 | SUPER DOUBLE_COLON type_arguments IDENTIFIER
   72                 | module_or_package_or_expression_name DOT SUPER DOUBLE_COLON type_arguments IDENTIFIER
   73                 | primary DOUBLE_COLON type_arguments IDENTIFIER
   74                 | module_or_package_or_expression_name DOUBLE_COLON type_arguments IDENTIFIER
   75                 | class_type DOUBLE_COLON type_arguments NEW
   76                 | array_type DOUBLE_COLON NEW

   77 type_arguments: LT type_argument_list GT

   78 type_argument_list: type_argument_list COMMA type_argument
   79                   | type_argument

   80 type_argument: reference_type
   81              | wildcard

   82 wildcard: QUESTION wildcard_bound_opt

   83 wildcard_bound_opt: EXTENDS reference_type
   84                   | SUPER reference_type

   85 if_then_else_statement: if LPAREN expression RPAREN if_footer

   86 if_footer: statement
   87          | statement_no_short_if else statement

   88 statement_no_short_if: statement_without_trailing_substatement
   89                      | labeled_statement_no_short_if
   90                      | if_then_else_statement_no_short_if
   91                      | while_statement_no_short_if
   92                      | for_statement_no_short_if

   93 labeled_statement_no_short_if: IDENTIFIER COLON statement_no_short_if

   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if

   95 while_statement_no_short_if: while LPAREN expression RPAREN statement_no_short_if

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
   97                          | enhanced_for_statement_no_short_if

   98 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if

   99 if: IF

  100 else: ELSE

  101 while_statement: while LPAREN expression RPAREN statement

  102 while: WHILE

  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

  104 for: FOR

  105 for_init_opt: for_init
  106             | ε

  107 for_init: statement_expression_list
  108         | local_variable_declaration

  109 statement_expression_list: statement_expression statement_expressions

  110 statement_expressions: statement_expressions COMMA statement_expression
  111                      | ε

  112 expression_opt: expression

  113 for_update_opt: for_update
  114               | ε

  115 for_update: statement_expression_list

  116 assert_statement: assert expression SEMICOLON
  117                 | assert expression COLON expression SEMICOLON

  118 assert: ASSERT

  119 break_statement: break SEMICOLON
  120                | break IDENTIFIER SEMICOLON

  121 break: BREAK

  122 continue_statement: continue SEMICOLON
  123                   | continue IDENTIFIER SEMICOLON

  124 continue: CONTINUE

  125 return_statement: return SEMICOLON
  126                 | return expression SEMICOLON

  127 return: RETURN

  128 synchronized_statement: SYNCHRONIZED LPAREN expression RPAREN block

  129 throw_statement: THROW expression SEMICOLON

  130 try_statement: TRY block catches_opt finally_opt

  131 finally_opt: finally
  132            | ε

  133 catches: catch_clause catches
  134        | catch_clause

  135 catches_opt: catches
  136            | ε

  137 catch_clause: catch LPAREN catch_formal_parameter RPAREN block

  138 catch: CATCH

  139 catch_formal_parameter: catch_type IDENTIFIER

  140 catch_type: unanntype
  141           | catch_type OR unanntype

  142 finally: FINALLY block

  143 expression: lambda_expression
  144           | assignment_expression

  145 lambda_expression: lambda_parameters ARROW lambda_body

  146 lambda_parameters: IDENTIFIER
  147                  | LPAREN lambda_parameter_list_opt RPAREN

  148 lambda_parameter_list_opt: lambda_parameter_list

  149 lambda_parameter_list: lambda_parameter more_lambda_parameters
  150                      | IDENTIFIER more_identifiers

  151 more_lambda_parameters: more_lambda_parameters COMMA lambda_parameter
  152                       | ε

  153 more_identifiers: more_identifiers COMMA IDENTIFIER
  154                 | ε

  155 lambda_parameter: variable_modifiers lambda_parameter_type variable_declarator_id
  156                 | variable_arity_parameter

  157 lambda_parameter_type: unanntype
  158                      | var

  159 var: VAR

  160 variable_declarator_id: IDENTIFIER dims

  161 dims: LSPAR RSPAR dim

  162 dim: LSPAR RSPAR
  163    | ε

  164 variable_arity_parameter: variable_modifiers unanntype variable_arity_parameter_id

  165 variable_arity_parameter_id: ELLIPSIS IDENTIFIER

  166 lambda_body: expression
  167            | block

  168 assignment_expression: conditional_expression
  169                      | assignment

  170 assignment: left_hand_side assignment_operator expression

  171 left_hand_side: module_or_package_or_expression_name
  172               | field_access
  173               | array_access

  174 field_access: primary DOT IDENTIFIER
  175             | SUPER DOT IDENTIFIER
  176             | module_or_package_or_expression_name

  177 array_access: module_or_package_or_expression_name LSPAR expression RSPAR
  178             | primary_no_new_array LSPAR expression RSPAR

  179 assignment_operator: EQUALS
  180                    | TIMES_EQUALS
  181                    | DIVIDE_EQUALS
  182                    | MOD_EQUALS
  183                    | PLUS_EQUALS
  184                    | MINUS_EQUALS
  185                    | LEFT_SHIFT_EQUALS
  186                    | RIGHT_SHIFT_EQUALS
  187                    | UNSIGNED_RIGHT_SHIFT_EQUALS
  188                    | AND_EQUALS
  189                    | XOR_EQUALS
  190                    | OR_EQUALS

  191 conditional_expression: conditional_or_expression
  192                       | conditional_or_expression QUESTION expression COLON conditional_expression
  193                       | conditional_or_expression QUESTION expression COLON lambda_expression

  194 conditional_or_expression: conditional_and_expression
  195                          | conditional_or_expression OR conditional_and_expression

  196 conditional_and_expression: inclusive_or_expression
  197                           | conditional_and_expression AND inclusive_or_expression

  198 inclusive_or_expression: exclusive_or_expression
  199                        | inclusive_or_expression OR exclusive_or_expression

  200 exclusive_or_expression: and_expression
  201                        | exclusive_or_expression XOR and_expression

  202 and_expression: equality_expression
  203               | and_expression AND equality_expression

  204 equality_expression: relational_expression
  205                    | equality_expression EQUALS relational_expression
  206                    | equality_expression NOT_EQUALS relational_expression

  207 relational_expression: shift_expression
  208                      | relational_expression LT shift_expression
  209                      | relational_expression GT shift_expression
  210                      | relational_expression LE shift_expression
  211                      | relational_expression GE shift_expression
  212                      | relational_expression INSTANCEOF reference_type

  213 shift_expression: additive_expression
  214                 | shift_expression LEFT_SHIFT additive_expression
  215                 | shift_expression RIGHT_SHIFT additive_expression
  216                 | shift_expression UNSIGNED_RIGHT_SHIFT additive_expression

  217 additive_expression: multiplicative_expression
  218                    | additive_expression PLUS multiplicative_expression
  219                    | additive_expression MINUS multiplicative_expression

  220 multiplicative_expression: unary_expression
  221                          | multiplicative_expression TIMES unary_expression
  222                          | multiplicative_expression DIVIDE unary_expression
  223                          | multiplicative_expression MOD unary_expression

  224 unary_expression: pre_increment_expression
  225                 | pre_decrement_expression
  226                 | PLUS unary_expression
  227                 | MINUS unary_expression
  228                 | unary_expression_not_plus_minus

  229 pre_increment_expression: PLUS_PLUS unary_expression

  230 pre_decrement_expression: MINUS_MINUS unary_expression

  231 post_increment_expression: postfix_expression PLUS_PLUS

  232 post_decrement_expression: postfix_expression MINUS_MINUS

  233 unary_expression_not_plus_minus: postfix_expression
  234                                | TILDE unary_expression
  235                                | NOT unary_expression

  236 postfix_expression: primary
  237                   | post_increment_expression
  238                   | post_decrement_expression

  239 primary: primary_no_new_array
  240        | array_creation_expression

  241 array_creation_expression: NEW array_creation_folllow

  242 array_creation_folllow: primitive_type array_creation_type_follow
  243                       | class_type array_creation_type_follow

  244 array_creation_type_follow: dimexprs dims_opt
  245                           | dims array_initializer

  246 dimexprs: dimexprs dimexpr
  247         | dimexpr

  248 dimexpr: LSPAR expression RSPAR

  249 dims_opt: dims
  250         | ε

  251 primary_no_new_array: LITERAL
  252                     | class_literal
  253                     | THIS
  254                     | module_or_package_or_expression_name DOT THIS
  255                     | LPAREN expression RPAREN
  256                     | field_access
  257                     | array_access
  258                     | method_invocation
  259                     | method_reference

  260 class_literal: module_or_package_or_expression_name brackets DOT CLASS
  261              | numeric_type brackets DOT CLASS
  262              | BOOLEAN brackets DOT CLASS
  263              | VOID DOT CLASS

  264 brackets: brackets LSPAR RSPAR
  265         | ε

  266 unanntype: unann_primitive_type

  267 unann_primitive_type: numeric_type
  268                     | boolean

  269 numeric_type: integral_type
  270             | floating_point_type

  271 integral_type: BYTE
  272              | SHORT
  273              | INT
  274              | LONG

  275 floating_point_type: FLOAT
  276                    | DOUBLE

  277 boolean: BOOLEAN

  278 class_declaration: normal_class_declaration

  279 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt class_extends_opt class_body

  280 class_modifiers: class_modifiers class_modifier
  281                | ε

  282 class_modifier: PUBLIC
  283               | PRIVATE
  284               | ABSTRACT
  285               | STATIC
  286               | FINAL
  287               | STRICTFP

  288 type_parameters_opt: type_parameters
  289                    | ε

  290 type_parameters: LANGULAR type_parameter_list RANGULAR

  291 type_parameter_list: type_parameter_list COMMA type_parameter
  292                    | type_parameter

  293 type_parameter: type_identifier type_bound_opt

  294 type_bound_opt: type_bound
  295               | ε

  296 type_bound: EXTENDS type_variable_or_class_or_interface_type_list

  297 type_variable_or_class_or_interface_type_list: class_type

  298 class_type: type_identifier type_arguments_opt
  299           | class_type DOT type_identifier type_arguments_opt

  300 type_arguments_opt: type_arguments
  301                   | ε

  302 class_extends_opt: class_extends
  303                  | ε

  304 class_extends: EXTENDS class_type

  305 class_body: LMPARA class_content RMPARA

  306 class_content: class_content class_body_declaration
  307              | ε

  308 class_body_declaration: class_member_declaration
  309                       | instance_initializer
  310                       | static_initializer
  311                       | constructor_declaration

  312 class_member_declaration: field_declaration
  313                         | method_declaration
  314                         | SEMICOLON

  315 field_declaration: field_modifier unanntype variable_declarators_list SEMICOLON

  316 static_final: STATIC
  317             | FINAL

  318 field_modifier: constructor_modifiers
  319               | static_final
  320               | TRANSIENT
  321               | VOLATILE

  322 method_declaration: method_modifier method_header method_body

  323 method_modifier: constructor_modifiers
  324                | static_final
  325                | SYNCHRONIZED
  326                | NATIVE
  327                | ABSTRACT
  328                | STRICTFP

  329 method_header: result method_declarator throws_empty
  330              | type_parameters result method_declarator throws_empty

  331 result: unanntype
  332       | VOID

  333 throws_empty: throws
  334             | ε

  335 throws: THROWS exception_type_list

  336 exception_type_list: exception_type_list COMMA exception_type
  337                    | exception_type

  338 exception_type: class_type

  339 method_body: block
  340            | SEMICOLON

  341 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list RPAREN dim

  342 reciever_parameter: unanntype IDENTIFIER DOT THIS
  343                   | unanntype THIS
  344                   | ε

  345 formal_parameter_list: formal_parameter_list COMMA formal_parameter
  346                      | formal_parameter
  347                      | ε

  348 formal_parameter: variable_modifiers unanntype variable_declarator_id
  349                 | variable_arity_parameter

  350 instance_initializer: block

  351 static_initializer: STATIC block

  352 constructor_declaration: constructor_modifiers constructor_declarator throws_empty constructor_body

  353 constructor_modifiers: constructor_modifier constructor_modifiers
  354                      | ε

  355 constructor_modifier: PUBLIC
  356                     | PRIVATE
  357                     | PROTECTED

  358 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter formal_parameter_list RPAREN

  359 simple_type_name: type_identifier

  360 constructor_body: LMPARA explicit_constructor_invocation block_statements RMPARA
  361                 | LMPARA explicit_constructor_invocation RMPARA
  362                 | LMPARA block_statements RMPARA
  363                 | LMPARA RMPARA

  364 explicit_constructor_invocation: type_arguments_opt THIS LPAREN argument_list_optional RPAREN SEMICOLON
  365                                | type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON
  366                                | module_or_package_or_expression_name DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON
  367                                | primary DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON

  368 reference_type: class_type
  369               | array_type

  370 array_type: primitive_type dims
  371           | class_type dims

  372 primitive_type: numeric_type
  373               | boolean

  374 array_initializer: LMPARA variable_initializer_list_opt comma_opt RMPARA

  375 variable_initializer_list_opt: variable_initializer_list

  376 comma_opt: COMMA
  377          | ε

  378 variable_initializer_list: variable_initializer variable_init

  379 variable_init: variable_init COMMA variable_initializer
  380              | ε

  381 variable_initializer: expression
  382                     | array_initializer


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER_NOT <str> (258)
    DOUBLE_COLON <str> (259) 71 72 73 74 75 76
    COMMA <str> (260) 21 68 78 110 151 153 291 336 345 376 379
    AT <str> (261)
    LPAREN <str> (262) 57 61 62 63 64 65 85 94 95 96 98 101 103 128 137 147 255 341 358 364 365 366 367
    RPAREN <str> (263) 57 61 62 63 64 65 85 94 95 96 98 101 103 128 137 147 255 341 358 364 365 366 367
    IDENTIFIER <str> (264) 7 9 48 58 59 62 63 64 65 71 72 73 74 93 120 123 139 146 150 153 160 165 174 175 341 342
    EQUALS <str> (265) 24 179 205
    DOT <str> (266) 6 59 62 63 64 65 72 174 175 254 260 261 262 263 299 342 366 367
    FINALLY <str> (267) 142
    CLASS <str> (268) 260 261 262 263 279
    PUBLIC <str> (269) 282 355
    PRIVATE <str> (270) 283 356
    LANGULAR <str> (271) 290
    RANGULAR <str> (272) 290
    SEMICOLON <str> (273) 19 47 49 96 103 116 117 119 120 122 123 125 126 129 314 315 340 364 365 366 367
    OR <str> (274) 141 195 199
    COLON <str> (275) 48 93 98 117 192 193
    RETURN <str> (276) 127
    TRY <str> (277) 130
    SYNCHRONIZED <str> (278) 128 325
    THROW <str> (279) 129
    ASSERT <str> (280) 118
    BREAK <str> (281) 121
    CONTINUE <str> (282) 124
    YIELD <str> (283)
    CATCH <str> (284) 138
    ARROW <str> (285) 145
    FINAL <str> (286) 29 286 317
    IF <str> (287) 99
    ELSE <str> (288) 94 100
    WHILE <str> (289) 102
    FOR <str> (290) 104
    VAR <str> (291) 159
    LSPAR <str> (292) 161 162 177 178 248 264
    RSPAR <str> (293) 161 162 177 178 248 264
    ELLIPSIS <str> (294) 165
    TIMES_EQUALS <str> (295) 180
    DIVIDE_EQUALS <str> (296) 181
    MOD_EQUALS <str> (297) 182
    PLUS_EQUALS <str> (298) 183
    MINUS_EQUALS <str> (299) 184
    LEFT_SHIFT_EQUALS <str> (300) 185
    RIGHT_SHIFT_EQUALS <str> (301) 186
    UNSIGNED_RIGHT_SHIFT_EQUALS <str> (302) 187
    AND_EQUALS <str> (303) 188
    XOR_EQUALS <str> (304) 189
    OR_EQUALS <str> (305) 190
    QUESTION <str> (306) 82 192 193
    NOT_EQUALS <str> (307) 206
    LT <str> (308) 77 208
    GT <str> (309) 77 209
    LE <str> (310) 210
    GE <str> (311) 211
    INSTANCEOF <str> (312) 212
    AND <str> (313) 197 203
    XOR <str> (314) 201
    PLUS <str> (315) 218 226
    MINUS <str> (316) 219 227
    TIMES <str> (317) 221
    DIVIDE <str> (318) 222
    MOD <str> (319) 223
    PLUS_PLUS <str> (320) 229 231
    MINUS_MINUS <str> (321) 230 232
    TILDE <str> (322) 234
    THIS <str> (323) 253 254 342 343 364
    SUPER <str> (324) 64 65 71 72 84 175 365 366 367
    INT <str> (325) 273
    LONG <str> (326) 274
    SHORT <str> (327) 272
    BYTE <str> (328) 271
    FLOAT <str> (329) 275
    DOUBLE <str> (330) 276
    BOOLEAN <str> (331) 262 277
    VOID <str> (332) 263 332
    NOT <str> (333) 235
    EXTENDS <str> (334) 83 296 304
    IMPLEMENTS <str> (335)
    PERMITS <str> (336)
    RMPARA <str> (337) 10 305 360 361 362 363 374
    LMPARA <str> (338) 10 305 360 361 362 363 374
    PROTECTED <str> (339) 357
    STATIC <str> (340) 285 316 351
    TRANSIENT <str> (341) 320
    VOLATILE <str> (342) 321
    NATIVE <str> (343) 326
    STRICTFP <str> (344) 287 328
    LEFT_SHIFT <str> (345) 214
    RIGHT_SHIFT <str> (346) 215
    UNSIGNED_RIGHT_SHIFT <str> (347) 216
    ABSTRACT <str> (348) 284 327
    RECORD <str> (349)
    ENUM <str> (350)
    LITERAL <str> (351) 251
    THROWS <str> (352) 335
    NEW <str> (353) 57 75 76 241
    INTERFACE <str> (354)
    SEALED <str> (355)
    NON_SEALED <str> (356)
    DEFAULT <str> (357)
    OPEN <str> (358)
    TRANSITIVE <str> (359)
    MODULE <str> (360)
    REQUIRES <str> (361)
    EXPORTS <str> (362)
    OPENS <str> (363)
    USES <str> (364)
    PROVIDES <str> (365)
    WITH <str> (366)
    IMPORT <str> (367)
    ASTERISK <str> (368)
    PACKAGE <str> (369)
    TO <str> (370)


Nonterminals, with rules where they appear

    $accept (116)
        on left: 0
    compilation_unit (117)
        on left: 1
        on right: 0
    ordinary_complilation_unit (118)
        on left: 2
        on right: 1
    top_level_class_or_interface_declarations (119)
        on left: 3 4
        on right: 2 3
    module_or_package_or_expression_name (120)
        on left: 5 6
        on right: 6 62 65 72 74 171 176 177 254 260 366
    type_identifier (121)
        on left: 7
        on right: 5 6 279 293 298 299 359
    method_name (122)
        on left: 8
        on right: 61
    unqualified_method_identifier (123)
        on left: 9
        on right: 8
    block (124)
        on left: 10
        on right: 37 128 130 137 142 167 339 350 351
    block_statements_opt (125)
        on left: 11 12
        on right: 10
    block_statements (126)
        on left: 13 14
        on right: 11 13 360 362
    block_statement (127)
        on left: 15 16 17
        on right: 13 14
    local_class_or_interface_declaration (128)
        on left: 18
        on right: 15
    local_variable_declaration_statement (129)
        on left: 19
        on right: 16
    local_variable_declaration (130)
        on left: 20
        on right: 19 98 108
    variable_declarators_list (131)
        on left: 21 22
        on right: 20 21 315
    variable_declarator (132)
        on left: 23
        on right: 21 22
    variable_initializer_opt (133)
        on left: 24 25
        on right: 23
    variable_modifiers (134)
        on left: 26 27
        on right: 20 26 155 164 348
    variable_modifier (135)
        on left: 28
        on right: 26
    final (136)
        on left: 29
        on right: 28
    local_variable_type (137)
        on left: 30 31
        on right: 20
    statement (138)
        on left: 32 33 34 35 36
        on right: 17 48 86 87 101 103
    statement_without_trailing_substatement (139)
        on left: 37 38 39 40 41 42 43 44 45 46
        on right: 32 88
    empty_statement (140)
        on left: 47
        on right: 38
    labeled_statement (141)
        on left: 48
        on right: 33
    expression_statement (142)
        on left: 49
        on right: 39
    statement_expression (143)
        on left: 50 51 52 53 54 55 56
        on right: 49 109 110
    class_instance_creation_expression (144)
        on left: 57
        on right: 56
    class_or_interface_type_to_instantiate (145)
        on left: 58
        on right: 57
    dot_annotation_indentifiers_optional (146)
        on left: 59 60
        on right: 58 59
    method_invocation (147)
        on left: 61 62 63 64 65
        on right: 55 258
    argument_list_optional (148)
        on left: 66 67
        on right: 57 61 62 63 64 65 364 365 366 367
    argument_list (149)
        on left: 68 69
        on right: 66 68
    method_reference (150)
        on left: 70 71 72 73 74 75 76
        on right: 259
    type_arguments (151)
        on left: 77
        on right: 62 63 64 65 71 72 73 74 75 300
    type_argument_list (152)
        on left: 78 79
        on right: 77 78
    type_argument (153)
        on left: 80 81
        on right: 78 79
    wildcard (154)
        on left: 82
        on right: 81
    wildcard_bound_opt (155)
        on left: 83 84
        on right: 82
    if_then_else_statement (156)
        on left: 85
        on right: 34
    if_footer (157)
        on left: 86 87
        on right: 85
    statement_no_short_if (158)
        on left: 88 89 90 91 92
        on right: 87 93 94 95 96 98
    labeled_statement_no_short_if (159)
        on left: 93
        on right: 89
    if_then_else_statement_no_short_if (160)
        on left: 94
        on right: 90
    while_statement_no_short_if (161)
        on left: 95
        on right: 91
    for_statement_no_short_if (162)
        on left: 96 97
        on right: 92
    enhanced_for_statement_no_short_if (163)
        on left: 98
        on right: 97
    if (164)
        on left: 99
        on right: 85 94
    else (165)
        on left: 100
        on right: 87
    while_statement (166)
        on left: 101
        on right: 35
    while (167)
        on left: 102
        on right: 95 101
    for_statement (168)
        on left: 103
        on right: 36
    for (169)
        on left: 104
        on right: 96 98 103
    for_init_opt (170)
        on left: 105 106
        on right: 96 103
    for_init (171)
        on left: 107 108
        on right: 105
    statement_expression_list (172)
        on left: 109
        on right: 107 115
    statement_expressions (173)
        on left: 110 111
        on right: 109 110
    expression_opt (174)
        on left: 112
        on right: 96 103
    for_update_opt (175)
        on left: 113 114
        on right: 96 103
    for_update (176)
        on left: 115
        on right: 113
    assert_statement (177)
        on left: 116 117
        on right: 40
    assert (178)
        on left: 118
        on right: 116 117
    break_statement (179)
        on left: 119 120
        on right: 41
    break (180)
        on left: 121
        on right: 119 120
    continue_statement (181)
        on left: 122 123
        on right: 42
    continue (182)
        on left: 124
        on right: 122 123
    return_statement (183)
        on left: 125 126
        on right: 43
    return (184)
        on left: 127
        on right: 125 126
    synchronized_statement (185)
        on left: 128
        on right: 44
    throw_statement (186)
        on left: 129
        on right: 45
    try_statement (187)
        on left: 130
        on right: 46
    finally_opt (188)
        on left: 131 132
        on right: 130
    catches (189)
        on left: 133 134
        on right: 133 135
    catches_opt (190)
        on left: 135 136
        on right: 130
    catch_clause (191)
        on left: 137
        on right: 133 134
    catch (192)
        on left: 138
        on right: 137
    catch_formal_parameter (193)
        on left: 139
        on right: 137
    catch_type (194)
        on left: 140 141
        on right: 139 141
    finally (195)
        on left: 142
        on right: 131
    expression (196)
        on left: 143 144
        on right: 68 69 85 94 95 98 101 112 116 117 126 128 129 166 170 177 178 192 193 248 255 381
    lambda_expression (197)
        on left: 145
        on right: 143 193
    lambda_parameters (198)
        on left: 146 147
        on right: 145
    lambda_parameter_list_opt (199)
        on left: 148
        on right: 147
    lambda_parameter_list (200)
        on left: 149 150
        on right: 148
    more_lambda_parameters (201)
        on left: 151 152
        on right: 149 151
    more_identifiers (202)
        on left: 153 154
        on right: 150 153
    lambda_parameter (203)
        on left: 155 156
        on right: 149 151
    lambda_parameter_type (204)
        on left: 157 158
        on right: 155
    var (205)
        on left: 159
        on right: 31 158
    variable_declarator_id (206)
        on left: 160
        on right: 23 155 348
    dims (207)
        on left: 161
        on right: 160 245 249 370 371
    dim (208)
        on left: 162 163
        on right: 161 341
    variable_arity_parameter (209)
        on left: 164
        on right: 156 349
    variable_arity_parameter_id (210)
        on left: 165
        on right: 164
    lambda_body (211)
        on left: 166 167
        on right: 145
    assignment_expression (212)
        on left: 168 169
        on right: 144
    assignment (213)
        on left: 170
        on right: 50 169
    left_hand_side (214)
        on left: 171 172 173
        on right: 170
    field_access (215)
        on left: 174 175 176
        on right: 172 256
    array_access (216)
        on left: 177 178
        on right: 173 257
    assignment_operator (217)
        on left: 179 180 181 182 183 184 185 186 187 188 189 190
        on right: 170
    conditional_expression (218)
        on left: 191 192 193
        on right: 168 192
    conditional_or_expression (219)
        on left: 194 195
        on right: 191 192 193 195
    conditional_and_expression (220)
        on left: 196 197
        on right: 194 195 197
    inclusive_or_expression (221)
        on left: 198 199
        on right: 196 197 199
    exclusive_or_expression (222)
        on left: 200 201
        on right: 198 199 201
    and_expression (223)
        on left: 202 203
        on right: 200 201 203
    equality_expression (224)
        on left: 204 205 206
        on right: 202 203 205 206
    relational_expression (225)
        on left: 207 208 209 210 211 212
        on right: 204 205 206 208 209 210 211 212
    shift_expression (226)
        on left: 213 214 215 216
        on right: 207 208 209 210 211 214 215 216
    additive_expression (227)
        on left: 217 218 219
        on right: 213 214 215 216 218 219
    multiplicative_expression (228)
        on left: 220 221 222 223
        on right: 217 218 219 221 222 223
    unary_expression (229)
        on left: 224 225 226 227 228
        on right: 220 221 222 223 226 227 229 230 234 235
    pre_increment_expression (230)
        on left: 229
        on right: 51 224
    pre_decrement_expression (231)
        on left: 230
        on right: 52 225
    post_increment_expression (232)
        on left: 231
        on right: 53 237
    post_decrement_expression (233)
        on left: 232
        on right: 54 238
    unary_expression_not_plus_minus (234)
        on left: 233 234 235
        on right: 228
    postfix_expression (235)
        on left: 236 237 238
        on right: 231 232 233
    primary (236)
        on left: 239 240
        on right: 63 73 174 236 367
    array_creation_expression (237)
        on left: 241
        on right: 240
    array_creation_folllow (238)
        on left: 242 243
        on right: 241
    array_creation_type_follow (239)
        on left: 244 245
        on right: 242 243
    dimexprs (240)
        on left: 246 247
        on right: 244 246
    dimexpr (241)
        on left: 248
        on right: 246 247
    dims_opt (242)
        on left: 249 250
        on right: 244
    primary_no_new_array (243)
        on left: 251 252 253 254 255 256 257 258 259
        on right: 178 239
    class_literal (244)
        on left: 260 261 262 263
        on right: 252
    brackets (245)
        on left: 264 265
        on right: 260 261 262 264
    unanntype (246)
        on left: 266
        on right: 30 140 141 157 164 315 331 342 343 348
    unann_primitive_type (247)
        on left: 267 268
        on right: 266
    numeric_type (248)
        on left: 269 270
        on right: 261 267 372
    integral_type (249)
        on left: 271 272 273 274
        on right: 269
    floating_point_type (250)
        on left: 275 276
        on right: 270
    boolean (251)
        on left: 277
        on right: 268 373
    class_declaration (252)
        on left: 278
        on right: 3 18
    normal_class_declaration (253)
        on left: 279
        on right: 278
    class_modifiers (254)
        on left: 280 281
        on right: 279 280
    class_modifier (255)
        on left: 282 283 284 285 286 287
        on right: 280
    type_parameters_opt (256)
        on left: 288 289
        on right: 279
    type_parameters (257)
        on left: 290
        on right: 288 330 358
    type_parameter_list (258)
        on left: 291 292
        on right: 290 291
    type_parameter (259)
        on left: 293
        on right: 291 292
    type_bound_opt (260)
        on left: 294 295
        on right: 293
    type_bound (261)
        on left: 296
        on right: 294
    type_variable_or_class_or_interface_type_list (262)
        on left: 297
        on right: 296
    class_type (263)
        on left: 298 299
        on right: 75 243 297 299 304 338 368 371
    type_arguments_opt (264)
        on left: 300 301
        on right: 57 58 298 299 364 365 366 367
    class_extends_opt (265)
        on left: 302 303
        on right: 279
    class_extends (266)
        on left: 304
        on right: 302
    class_body (267)
        on left: 305
        on right: 57 279
    class_content (268)
        on left: 306 307
        on right: 305 306
    class_body_declaration (269)
        on left: 308 309 310 311
        on right: 306
    class_member_declaration (270)
        on left: 312 313 314
        on right: 308
    field_declaration (271)
        on left: 315
        on right: 312
    static_final (272)
        on left: 316 317
        on right: 319 324
    field_modifier (273)
        on left: 318 319 320 321
        on right: 315
    method_declaration (274)
        on left: 322
        on right: 313
    method_modifier (275)
        on left: 323 324 325 326 327 328
        on right: 322
    method_header (276)
        on left: 329 330
        on right: 322
    result (277)
        on left: 331 332
        on right: 329 330
    throws_empty (278)
        on left: 333 334
        on right: 329 330 352
    throws (279)
        on left: 335
        on right: 333
    exception_type_list (280)
        on left: 336 337
        on right: 335 336
    exception_type (281)
        on left: 338
        on right: 336 337
    method_body (282)
        on left: 339 340
        on right: 322
    method_declarator (283)
        on left: 341
        on right: 329 330
    reciever_parameter (284)
        on left: 342 343 344
        on right: 341 358
    formal_parameter_list (285)
        on left: 345 346 347
        on right: 341 345 358
    formal_parameter (286)
        on left: 348 349
        on right: 345 346
    instance_initializer (287)
        on left: 350
        on right: 309
    static_initializer (288)
        on left: 351
        on right: 310
    constructor_declaration (289)
        on left: 352
        on right: 311
    constructor_modifiers (290)
        on left: 353 354
        on right: 318 323 352 353
    constructor_modifier (291)
        on left: 355 356 357
        on right: 353
    constructor_declarator (292)
        on left: 358
        on right: 352
    simple_type_name (293)
        on left: 359
        on right: 358
    constructor_body (294)
        on left: 360 361 362 363
        on right: 352
    explicit_constructor_invocation (295)
        on left: 364 365 366 367
        on right: 360 361
    reference_type (296)
        on left: 368 369
        on right: 80 83 84 212
    array_type (297)
        on left: 370 371
        on right: 76 369
    primitive_type (298)
        on left: 372 373
        on right: 242 370
    array_initializer (299)
        on left: 374
        on right: 245 382
    variable_initializer_list_opt (300)
        on left: 375
        on right: 374
    comma_opt (301)
        on left: 376 377
        on right: 374
    variable_initializer_list (302)
        on left: 378
        on right: 375
    variable_init (303)
        on left: 379 380
        on right: 378 379
    variable_initializer (304)
        on left: 381 382
        on right: 24 378 379


State 0

    0 $accept: • compilation_unit $end

    $default  reduce using rule 4 (top_level_class_or_interface_declarations)

    compilation_unit                           go to state 1
    ordinary_complilation_unit                 go to state 2
    top_level_class_or_interface_declarations  go to state 3


State 1

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 4


State 2

    1 compilation_unit: ordinary_complilation_unit •

    $default  reduce using rule 1 (compilation_unit)


State 3

    2 ordinary_complilation_unit: top_level_class_or_interface_declarations •
    3 top_level_class_or_interface_declarations: top_level_class_or_interface_declarations • class_declaration

    $end      reduce using rule 2 (ordinary_complilation_unit)
    $default  reduce using rule 281 (class_modifiers)

    class_declaration         go to state 5
    normal_class_declaration  go to state 6
    class_modifiers           go to state 7


State 4

    0 $accept: compilation_unit $end •

    $default  accept


State 5

    3 top_level_class_or_interface_declarations: top_level_class_or_interface_declarations class_declaration •

    $default  reduce using rule 3 (top_level_class_or_interface_declarations)


State 6

  278 class_declaration: normal_class_declaration •

    $default  reduce using rule 278 (class_declaration)


State 7

  279 normal_class_declaration: class_modifiers • CLASS type_identifier type_parameters_opt class_extends_opt class_body
  280 class_modifiers: class_modifiers • class_modifier

    CLASS     shift, and go to state 8
    PUBLIC    shift, and go to state 9
    PRIVATE   shift, and go to state 10
    FINAL     shift, and go to state 11
    STATIC    shift, and go to state 12
    STRICTFP  shift, and go to state 13
    ABSTRACT  shift, and go to state 14

    class_modifier  go to state 15


State 8

  279 normal_class_declaration: class_modifiers CLASS • type_identifier type_parameters_opt class_extends_opt class_body

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 17


State 9

  282 class_modifier: PUBLIC •

    $default  reduce using rule 282 (class_modifier)


State 10

  283 class_modifier: PRIVATE •

    $default  reduce using rule 283 (class_modifier)


State 11

  286 class_modifier: FINAL •

    $default  reduce using rule 286 (class_modifier)


State 12

  285 class_modifier: STATIC •

    $default  reduce using rule 285 (class_modifier)


State 13

  287 class_modifier: STRICTFP •

    $default  reduce using rule 287 (class_modifier)


State 14

  284 class_modifier: ABSTRACT •

    $default  reduce using rule 284 (class_modifier)


State 15

  280 class_modifiers: class_modifiers class_modifier •

    $default  reduce using rule 280 (class_modifiers)


State 16

    7 type_identifier: IDENTIFIER •

    $default  reduce using rule 7 (type_identifier)


State 17

  279 normal_class_declaration: class_modifiers CLASS type_identifier • type_parameters_opt class_extends_opt class_body

    LANGULAR  shift, and go to state 18

    $default  reduce using rule 289 (type_parameters_opt)

    type_parameters_opt  go to state 19
    type_parameters      go to state 20


State 18

  290 type_parameters: LANGULAR • type_parameter_list RANGULAR

    IDENTIFIER  shift, and go to state 16

    type_identifier      go to state 21
    type_parameter_list  go to state 22
    type_parameter       go to state 23


State 19

  279 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt • class_extends_opt class_body

    EXTENDS  shift, and go to state 24

    $default  reduce using rule 303 (class_extends_opt)

    class_extends_opt  go to state 25
    class_extends      go to state 26


State 20

  288 type_parameters_opt: type_parameters •

    $default  reduce using rule 288 (type_parameters_opt)


State 21

  293 type_parameter: type_identifier • type_bound_opt

    EXTENDS  shift, and go to state 27

    $default  reduce using rule 295 (type_bound_opt)

    type_bound_opt  go to state 28
    type_bound      go to state 29


State 22

  290 type_parameters: LANGULAR type_parameter_list • RANGULAR
  291 type_parameter_list: type_parameter_list • COMMA type_parameter

    COMMA     shift, and go to state 30
    RANGULAR  shift, and go to state 31


State 23

  292 type_parameter_list: type_parameter •

    $default  reduce using rule 292 (type_parameter_list)


State 24

  304 class_extends: EXTENDS • class_type

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 32
    class_type       go to state 33


State 25

  279 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt class_extends_opt • class_body

    LMPARA  shift, and go to state 34

    class_body  go to state 35


State 26

  302 class_extends_opt: class_extends •

    $default  reduce using rule 302 (class_extends_opt)


State 27

  296 type_bound: EXTENDS • type_variable_or_class_or_interface_type_list

    IDENTIFIER  shift, and go to state 16

    type_identifier                                go to state 32
    type_variable_or_class_or_interface_type_list  go to state 36
    class_type                                     go to state 37


State 28

  293 type_parameter: type_identifier type_bound_opt •

    $default  reduce using rule 293 (type_parameter)


State 29

  294 type_bound_opt: type_bound •

    $default  reduce using rule 294 (type_bound_opt)


State 30

  291 type_parameter_list: type_parameter_list COMMA • type_parameter

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 21
    type_parameter   go to state 38


State 31

  290 type_parameters: LANGULAR type_parameter_list RANGULAR •

    $default  reduce using rule 290 (type_parameters)


State 32

  298 class_type: type_identifier • type_arguments_opt

    LT  shift, and go to state 39

    LT        [reduce using rule 301 (type_arguments_opt)]
    $default  reduce using rule 301 (type_arguments_opt)

    type_arguments      go to state 40
    type_arguments_opt  go to state 41


State 33

  299 class_type: class_type • DOT type_identifier type_arguments_opt
  304 class_extends: EXTENDS class_type •

    DOT  shift, and go to state 42

    $default  reduce using rule 304 (class_extends)


State 34

  305 class_body: LMPARA • class_content RMPARA

    $default  reduce using rule 307 (class_content)

    class_content  go to state 43


State 35

  279 normal_class_declaration: class_modifiers CLASS type_identifier type_parameters_opt class_extends_opt class_body •

    $default  reduce using rule 279 (normal_class_declaration)


State 36

  296 type_bound: EXTENDS type_variable_or_class_or_interface_type_list •

    $default  reduce using rule 296 (type_bound)


State 37

  297 type_variable_or_class_or_interface_type_list: class_type •
  299 class_type: class_type • DOT type_identifier type_arguments_opt

    DOT  shift, and go to state 42

    $default  reduce using rule 297 (type_variable_or_class_or_interface_type_list)


State 38

  291 type_parameter_list: type_parameter_list COMMA type_parameter •

    $default  reduce using rule 291 (type_parameter_list)


State 39

   77 type_arguments: LT • type_argument_list GT

    IDENTIFIER  shift, and go to state 16
    QUESTION    shift, and go to state 44
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    type_identifier      go to state 32
    type_argument_list   go to state 52
    type_argument        go to state 53
    wildcard             go to state 54
    numeric_type         go to state 55
    integral_type        go to state 56
    floating_point_type  go to state 57
    boolean              go to state 58
    class_type           go to state 59
    reference_type       go to state 60
    array_type           go to state 61
    primitive_type       go to state 62


State 40

  300 type_arguments_opt: type_arguments •

    $default  reduce using rule 300 (type_arguments_opt)


State 41

  298 class_type: type_identifier type_arguments_opt •

    $default  reduce using rule 298 (class_type)


State 42

  299 class_type: class_type DOT • type_identifier type_arguments_opt

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 63


State 43

  305 class_body: LMPARA class_content • RMPARA
  306 class_content: class_content • class_body_declaration

    PUBLIC        shift, and go to state 64
    PRIVATE       shift, and go to state 65
    SEMICOLON     shift, and go to state 66
    SYNCHRONIZED  shift, and go to state 67
    FINAL         shift, and go to state 68
    RMPARA        shift, and go to state 69
    LMPARA        shift, and go to state 70
    PROTECTED     shift, and go to state 71
    STATIC        shift, and go to state 72
    TRANSIENT     shift, and go to state 73
    VOLATILE      shift, and go to state 74
    NATIVE        shift, and go to state 75
    STRICTFP      shift, and go to state 76
    ABSTRACT      shift, and go to state 77

    $default  reduce using rule 354 (constructor_modifiers)

    block                     go to state 78
    class_body_declaration    go to state 79
    class_member_declaration  go to state 80
    field_declaration         go to state 81
    static_final              go to state 82
    field_modifier            go to state 83
    method_declaration        go to state 84
    method_modifier           go to state 85
    instance_initializer      go to state 86
    static_initializer        go to state 87
    constructor_declaration   go to state 88
    constructor_modifiers     go to state 89
    constructor_modifier      go to state 90


State 44

   82 wildcard: QUESTION • wildcard_bound_opt

    SUPER    shift, and go to state 91
    EXTENDS  shift, and go to state 92

    wildcard_bound_opt  go to state 93


State 45

  273 integral_type: INT •

    $default  reduce using rule 273 (integral_type)


State 46

  274 integral_type: LONG •

    $default  reduce using rule 274 (integral_type)


State 47

  272 integral_type: SHORT •

    $default  reduce using rule 272 (integral_type)


State 48

  271 integral_type: BYTE •

    $default  reduce using rule 271 (integral_type)


State 49

  275 floating_point_type: FLOAT •

    $default  reduce using rule 275 (floating_point_type)


State 50

  276 floating_point_type: DOUBLE •

    $default  reduce using rule 276 (floating_point_type)


State 51

  277 boolean: BOOLEAN •

    $default  reduce using rule 277 (boolean)


State 52

   77 type_arguments: LT type_argument_list • GT
   78 type_argument_list: type_argument_list • COMMA type_argument

    COMMA  shift, and go to state 94
    GT     shift, and go to state 95


State 53

   79 type_argument_list: type_argument •

    $default  reduce using rule 79 (type_argument_list)


State 54

   81 type_argument: wildcard •

    $default  reduce using rule 81 (type_argument)


State 55

  372 primitive_type: numeric_type •

    $default  reduce using rule 372 (primitive_type)


State 56

  269 numeric_type: integral_type •

    $default  reduce using rule 269 (numeric_type)


State 57

  270 numeric_type: floating_point_type •

    $default  reduce using rule 270 (numeric_type)


State 58

  373 primitive_type: boolean •

    $default  reduce using rule 373 (primitive_type)


State 59

  299 class_type: class_type • DOT type_identifier type_arguments_opt
  368 reference_type: class_type •
  371 array_type: class_type • dims

    DOT    shift, and go to state 42
    LSPAR  shift, and go to state 96

    $default  reduce using rule 368 (reference_type)

    dims  go to state 97


State 60

   80 type_argument: reference_type •

    $default  reduce using rule 80 (type_argument)


State 61

  369 reference_type: array_type •

    $default  reduce using rule 369 (reference_type)


State 62

  370 array_type: primitive_type • dims

    LSPAR  shift, and go to state 96

    dims  go to state 98


State 63

  299 class_type: class_type DOT type_identifier • type_arguments_opt

    LT  shift, and go to state 39

    LT        [reduce using rule 301 (type_arguments_opt)]
    $default  reduce using rule 301 (type_arguments_opt)

    type_arguments      go to state 40
    type_arguments_opt  go to state 99


State 64

  355 constructor_modifier: PUBLIC •

    $default  reduce using rule 355 (constructor_modifier)


State 65

  356 constructor_modifier: PRIVATE •

    $default  reduce using rule 356 (constructor_modifier)


State 66

  314 class_member_declaration: SEMICOLON •

    $default  reduce using rule 314 (class_member_declaration)


State 67

  325 method_modifier: SYNCHRONIZED •

    $default  reduce using rule 325 (method_modifier)


State 68

  317 static_final: FINAL •

    $default  reduce using rule 317 (static_final)


State 69

  305 class_body: LMPARA class_content RMPARA •

    $default  reduce using rule 305 (class_body)


State 70

   10 block: LMPARA • block_statements_opt RMPARA

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOT           reduce using rule 70 (method_reference)
    FINAL         reduce using rule 27 (variable_modifiers)
    FINAL         [reduce using rule 281 (class_modifiers)]
    VAR           reduce using rule 27 (variable_modifiers)
    LSPAR         reduce using rule 70 (method_reference)
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    INT           [reduce using rule 27 (variable_modifiers)]
    LONG          [reduce using rule 27 (variable_modifiers)]
    SHORT         [reduce using rule 27 (variable_modifiers)]
    BYTE          [reduce using rule 27 (variable_modifiers)]
    FLOAT         [reduce using rule 27 (variable_modifiers)]
    DOUBLE        [reduce using rule 27 (variable_modifiers)]
    BOOLEAN       [reduce using rule 27 (variable_modifiers)]
    RMPARA        reduce using rule 12 (block_statements_opt)
    $default      reduce using rule 281 (class_modifiers)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    block_statements_opt                     go to state 126
    block_statements                         go to state 127
    block_statement                          go to state 128
    local_class_or_interface_declaration     go to state 129
    local_variable_declaration_statement     go to state 130
    local_variable_declaration               go to state 131
    variable_modifiers                       go to state 132
    statement                                go to state 133
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_declaration                        go to state 173
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 71

  357 constructor_modifier: PROTECTED •

    $default  reduce using rule 357 (constructor_modifier)


State 72

  316 static_final: STATIC •
  351 static_initializer: STATIC • block

    LMPARA  shift, and go to state 70

    $default  reduce using rule 316 (static_final)

    block  go to state 176


State 73

  320 field_modifier: TRANSIENT •

    $default  reduce using rule 320 (field_modifier)


State 74

  321 field_modifier: VOLATILE •

    $default  reduce using rule 321 (field_modifier)


State 75

  326 method_modifier: NATIVE •

    $default  reduce using rule 326 (method_modifier)


State 76

  328 method_modifier: STRICTFP •

    $default  reduce using rule 328 (method_modifier)


State 77

  327 method_modifier: ABSTRACT •

    $default  reduce using rule 327 (method_modifier)


State 78

  350 instance_initializer: block •

    $default  reduce using rule 350 (instance_initializer)


State 79

  306 class_content: class_content class_body_declaration •

    $default  reduce using rule 306 (class_content)


State 80

  308 class_body_declaration: class_member_declaration •

    $default  reduce using rule 308 (class_body_declaration)


State 81

  312 class_member_declaration: field_declaration •

    $default  reduce using rule 312 (class_member_declaration)


State 82

  319 field_modifier: static_final •
  324 method_modifier: static_final •

    LANGULAR  reduce using rule 324 (method_modifier)
    INT       reduce using rule 319 (field_modifier)
    INT       [reduce using rule 324 (method_modifier)]
    LONG      reduce using rule 319 (field_modifier)
    LONG      [reduce using rule 324 (method_modifier)]
    SHORT     reduce using rule 319 (field_modifier)
    SHORT     [reduce using rule 324 (method_modifier)]
    BYTE      reduce using rule 319 (field_modifier)
    BYTE      [reduce using rule 324 (method_modifier)]
    FLOAT     reduce using rule 319 (field_modifier)
    FLOAT     [reduce using rule 324 (method_modifier)]
    DOUBLE    reduce using rule 319 (field_modifier)
    DOUBLE    [reduce using rule 324 (method_modifier)]
    BOOLEAN   reduce using rule 319 (field_modifier)
    BOOLEAN   [reduce using rule 324 (method_modifier)]
    VOID      reduce using rule 324 (method_modifier)
    $default  reduce using rule 319 (field_modifier)


State 83

  315 field_declaration: field_modifier • unanntype variable_declarators_list SEMICOLON

    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    unanntype             go to state 177
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180


State 84

  313 class_member_declaration: method_declaration •

    $default  reduce using rule 313 (class_member_declaration)


State 85

  322 method_declaration: method_modifier • method_header method_body

    LANGULAR  shift, and go to state 18
    INT       shift, and go to state 45
    LONG      shift, and go to state 46
    SHORT     shift, and go to state 47
    BYTE      shift, and go to state 48
    FLOAT     shift, and go to state 49
    DOUBLE    shift, and go to state 50
    BOOLEAN   shift, and go to state 51
    VOID      shift, and go to state 181

    unanntype             go to state 182
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180
    type_parameters       go to state 183
    method_header         go to state 184
    result                go to state 185


State 86

  309 class_body_declaration: instance_initializer •

    $default  reduce using rule 309 (class_body_declaration)


State 87

  310 class_body_declaration: static_initializer •

    $default  reduce using rule 310 (class_body_declaration)


State 88

  311 class_body_declaration: constructor_declaration •

    $default  reduce using rule 311 (class_body_declaration)


State 89

  318 field_modifier: constructor_modifiers •
  323 method_modifier: constructor_modifiers •
  352 constructor_declaration: constructor_modifiers • constructor_declarator throws_empty constructor_body

    LANGULAR  shift, and go to state 18

    LANGULAR  [reduce using rule 323 (method_modifier)]
    INT       reduce using rule 318 (field_modifier)
    INT       [reduce using rule 323 (method_modifier)]
    LONG      reduce using rule 318 (field_modifier)
    LONG      [reduce using rule 323 (method_modifier)]
    SHORT     reduce using rule 318 (field_modifier)
    SHORT     [reduce using rule 323 (method_modifier)]
    BYTE      reduce using rule 318 (field_modifier)
    BYTE      [reduce using rule 323 (method_modifier)]
    FLOAT     reduce using rule 318 (field_modifier)
    FLOAT     [reduce using rule 323 (method_modifier)]
    DOUBLE    reduce using rule 318 (field_modifier)
    DOUBLE    [reduce using rule 323 (method_modifier)]
    BOOLEAN   reduce using rule 318 (field_modifier)
    BOOLEAN   [reduce using rule 323 (method_modifier)]
    VOID      reduce using rule 323 (method_modifier)
    $default  reduce using rule 318 (field_modifier)

    type_parameters         go to state 186
    constructor_declarator  go to state 187


State 90

  353 constructor_modifiers: constructor_modifier • constructor_modifiers

    PUBLIC     shift, and go to state 64
    PRIVATE    shift, and go to state 65
    PROTECTED  shift, and go to state 71

    $default  reduce using rule 354 (constructor_modifiers)

    constructor_modifiers  go to state 188
    constructor_modifier   go to state 90


State 91

   84 wildcard_bound_opt: SUPER • reference_type

    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    type_identifier      go to state 32
    numeric_type         go to state 55
    integral_type        go to state 56
    floating_point_type  go to state 57
    boolean              go to state 58
    class_type           go to state 59
    reference_type       go to state 189
    array_type           go to state 61
    primitive_type       go to state 62


State 92

   83 wildcard_bound_opt: EXTENDS • reference_type

    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    type_identifier      go to state 32
    numeric_type         go to state 55
    integral_type        go to state 56
    floating_point_type  go to state 57
    boolean              go to state 58
    class_type           go to state 59
    reference_type       go to state 190
    array_type           go to state 61
    primitive_type       go to state 62


State 93

   82 wildcard: QUESTION wildcard_bound_opt •

    $default  reduce using rule 82 (wildcard)


State 94

   78 type_argument_list: type_argument_list COMMA • type_argument

    IDENTIFIER  shift, and go to state 16
    QUESTION    shift, and go to state 44
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    type_identifier      go to state 32
    type_argument        go to state 191
    wildcard             go to state 54
    numeric_type         go to state 55
    integral_type        go to state 56
    floating_point_type  go to state 57
    boolean              go to state 58
    class_type           go to state 59
    reference_type       go to state 60
    array_type           go to state 61
    primitive_type       go to state 62


State 95

   77 type_arguments: LT type_argument_list GT •

    $default  reduce using rule 77 (type_arguments)


State 96

  161 dims: LSPAR • RSPAR dim

    RSPAR  shift, and go to state 192


State 97

  371 array_type: class_type dims •

    $default  reduce using rule 371 (array_type)


State 98

  370 array_type: primitive_type dims •

    $default  reduce using rule 370 (array_type)


State 99

  299 class_type: class_type DOT type_identifier type_arguments_opt •

    $default  reduce using rule 299 (class_type)


State 100

  255 primary_no_new_array: LPAREN • expression RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 201
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 101

    7 type_identifier: IDENTIFIER •
    9 unqualified_method_identifier: IDENTIFIER •
   48 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 224

    LPAREN    reduce using rule 9 (unqualified_method_identifier)
    $default  reduce using rule 7 (type_identifier)


State 102

   47 empty_statement: SEMICOLON •

    $default  reduce using rule 47 (empty_statement)


State 103

  127 return: RETURN •

    $default  reduce using rule 127 (return)


State 104

  130 try_statement: TRY • block catches_opt finally_opt

    LMPARA  shift, and go to state 70

    block  go to state 225


State 105

  128 synchronized_statement: SYNCHRONIZED • LPAREN expression RPAREN block

    LPAREN  shift, and go to state 226


State 106

  129 throw_statement: THROW • expression SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 227
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 107

  118 assert: ASSERT •

    $default  reduce using rule 118 (assert)


State 108

  121 break: BREAK •

    $default  reduce using rule 121 (break)


State 109

  124 continue: CONTINUE •

    $default  reduce using rule 124 (continue)


State 110

   99 if: IF •

    $default  reduce using rule 99 (if)


State 111

  102 while: WHILE •

    $default  reduce using rule 102 (while)


State 112

  104 for: FOR •

    $default  reduce using rule 104 (for)


State 113

  229 pre_increment_expression: PLUS_PLUS • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 232
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 114

  230 pre_decrement_expression: MINUS_MINUS • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 233
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 115

  253 primary_no_new_array: THIS •

    $default  reduce using rule 253 (primary_no_new_array)


State 116

   64 method_invocation: SUPER • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   71 method_reference: SUPER • DOUBLE_COLON type_arguments IDENTIFIER
  175 field_access: SUPER • DOT IDENTIFIER

    DOUBLE_COLON  shift, and go to state 234
    DOT           shift, and go to state 235


State 117

  262 class_literal: BOOLEAN • brackets DOT CLASS
  277 boolean: BOOLEAN •

    LSPAR     reduce using rule 265 (brackets)
    LSPAR     [reduce using rule 277 (boolean)]
    $default  reduce using rule 265 (brackets)

    brackets  go to state 236


State 118

  263 class_literal: VOID • DOT CLASS

    DOT  shift, and go to state 237


State 119

  251 primary_no_new_array: LITERAL •

    $default  reduce using rule 251 (primary_no_new_array)


State 120

   57 class_instance_creation_expression: NEW • type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body
  241 array_creation_expression: NEW • array_creation_folllow

    IDENTIFIER  shift, and go to state 16
    LT          shift, and go to state 39
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    IDENTIFIER  [reduce using rule 301 (type_arguments_opt)]

    type_identifier         go to state 32
    type_arguments          go to state 40
    array_creation_folllow  go to state 238
    numeric_type            go to state 55
    integral_type           go to state 56
    floating_point_type     go to state 57
    boolean                 go to state 58
    class_type              go to state 239
    type_arguments_opt      go to state 240
    primitive_type          go to state 241


State 121

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT type_identifier
   62 method_invocation: module_or_package_or_expression_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   65                  | module_or_package_or_expression_name • DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   72 method_reference: module_or_package_or_expression_name • DOT SUPER DOUBLE_COLON type_arguments IDENTIFIER
   74                 | module_or_package_or_expression_name • DOUBLE_COLON type_arguments IDENTIFIER
  171 left_hand_side: module_or_package_or_expression_name •
  176 field_access: module_or_package_or_expression_name •
  177 array_access: module_or_package_or_expression_name • LSPAR expression RSPAR
  254 primary_no_new_array: module_or_package_or_expression_name • DOT THIS
  260 class_literal: module_or_package_or_expression_name • brackets DOT CLASS

    DOUBLE_COLON  shift, and go to state 242
    DOT           shift, and go to state 243
    LSPAR         shift, and go to state 244

    DOUBLE_COLON                 [reduce using rule 176 (field_access)]
    EQUALS                       reduce using rule 171 (left_hand_side)
    EQUALS                       [reduce using rule 176 (field_access)]
    DOT                          [reduce using rule 176 (field_access)]
    DOT                          [reduce using rule 265 (brackets)]
    LSPAR                        [reduce using rule 176 (field_access)]
    LSPAR                        [reduce using rule 265 (brackets)]
    TIMES_EQUALS                 reduce using rule 171 (left_hand_side)
    TIMES_EQUALS                 [reduce using rule 176 (field_access)]
    DIVIDE_EQUALS                reduce using rule 171 (left_hand_side)
    DIVIDE_EQUALS                [reduce using rule 176 (field_access)]
    MOD_EQUALS                   reduce using rule 171 (left_hand_side)
    MOD_EQUALS                   [reduce using rule 176 (field_access)]
    PLUS_EQUALS                  reduce using rule 171 (left_hand_side)
    PLUS_EQUALS                  [reduce using rule 176 (field_access)]
    MINUS_EQUALS                 reduce using rule 171 (left_hand_side)
    MINUS_EQUALS                 [reduce using rule 176 (field_access)]
    LEFT_SHIFT_EQUALS            reduce using rule 171 (left_hand_side)
    LEFT_SHIFT_EQUALS            [reduce using rule 176 (field_access)]
    RIGHT_SHIFT_EQUALS           reduce using rule 171 (left_hand_side)
    RIGHT_SHIFT_EQUALS           [reduce using rule 176 (field_access)]
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 171 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  [reduce using rule 176 (field_access)]
    AND_EQUALS                   reduce using rule 171 (left_hand_side)
    AND_EQUALS                   [reduce using rule 176 (field_access)]
    XOR_EQUALS                   reduce using rule 171 (left_hand_side)
    XOR_EQUALS                   [reduce using rule 176 (field_access)]
    OR_EQUALS                    reduce using rule 171 (left_hand_side)
    OR_EQUALS                    [reduce using rule 176 (field_access)]
    $default                     reduce using rule 176 (field_access)

    brackets  go to state 245


State 122

    5 module_or_package_or_expression_name: type_identifier •
  298 class_type: type_identifier • type_arguments_opt

    LT  shift, and go to state 39

    DOUBLE_COLON  reduce using rule 5 (module_or_package_or_expression_name)
    DOUBLE_COLON  [reduce using rule 301 (type_arguments_opt)]
    DOT           reduce using rule 5 (module_or_package_or_expression_name)
    DOT           [reduce using rule 301 (type_arguments_opt)]
    LSPAR         reduce using rule 5 (module_or_package_or_expression_name)
    LSPAR         [reduce using rule 301 (type_arguments_opt)]
    LT            [reduce using rule 5 (module_or_package_or_expression_name)]
    $default      reduce using rule 5 (module_or_package_or_expression_name)

    type_arguments      go to state 40
    type_arguments_opt  go to state 41


State 123

   61 method_invocation: method_name • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 246


State 124

    8 method_name: unqualified_method_identifier •

    $default  reduce using rule 8 (method_name)


State 125

   37 statement_without_trailing_substatement: block •

    $default  reduce using rule 37 (statement_without_trailing_substatement)


State 126

   10 block: LMPARA block_statements_opt • RMPARA

    RMPARA  shift, and go to state 247


State 127

   11 block_statements_opt: block_statements •
   13 block_statements: block_statements • block_statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOT           reduce using rule 70 (method_reference)
    FINAL         reduce using rule 27 (variable_modifiers)
    FINAL         [reduce using rule 281 (class_modifiers)]
    VAR           reduce using rule 27 (variable_modifiers)
    LSPAR         reduce using rule 70 (method_reference)
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    INT           [reduce using rule 27 (variable_modifiers)]
    LONG          [reduce using rule 27 (variable_modifiers)]
    SHORT         [reduce using rule 27 (variable_modifiers)]
    BYTE          [reduce using rule 27 (variable_modifiers)]
    FLOAT         [reduce using rule 27 (variable_modifiers)]
    DOUBLE        [reduce using rule 27 (variable_modifiers)]
    BOOLEAN       [reduce using rule 27 (variable_modifiers)]
    RMPARA        reduce using rule 11 (block_statements_opt)
    $default      reduce using rule 281 (class_modifiers)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    block_statement                          go to state 248
    local_class_or_interface_declaration     go to state 129
    local_variable_declaration_statement     go to state 130
    local_variable_declaration               go to state 131
    variable_modifiers                       go to state 132
    statement                                go to state 133
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_declaration                        go to state 173
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 128

   14 block_statements: block_statement •

    $default  reduce using rule 14 (block_statements)


State 129

   15 block_statement: local_class_or_interface_declaration •

    $default  reduce using rule 15 (block_statement)


State 130

   16 block_statement: local_variable_declaration_statement •

    $default  reduce using rule 16 (block_statement)


State 131

   19 local_variable_declaration_statement: local_variable_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 249


State 132

   20 local_variable_declaration: variable_modifiers • local_variable_type variable_declarators_list
   26 variable_modifiers: variable_modifiers • variable_modifier

    FINAL    shift, and go to state 250
    VAR      shift, and go to state 251
    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    variable_modifier     go to state 252
    final                 go to state 253
    local_variable_type   go to state 254
    var                   go to state 255
    unanntype             go to state 256
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180


State 133

   17 block_statement: statement •

    $default  reduce using rule 17 (block_statement)


State 134

   32 statement: statement_without_trailing_substatement •

    $default  reduce using rule 32 (statement)


State 135

   38 statement_without_trailing_substatement: empty_statement •

    $default  reduce using rule 38 (statement_without_trailing_substatement)


State 136

   33 statement: labeled_statement •

    $default  reduce using rule 33 (statement)


State 137

   39 statement_without_trailing_substatement: expression_statement •

    $default  reduce using rule 39 (statement_without_trailing_substatement)


State 138

   49 expression_statement: statement_expression • SEMICOLON

    SEMICOLON  shift, and go to state 257


State 139

   56 statement_expression: class_instance_creation_expression •

    $default  reduce using rule 56 (statement_expression)


State 140

   55 statement_expression: method_invocation •
  258 primary_no_new_array: method_invocation •

    COMMA      reduce using rule 55 (statement_expression)
    RPAREN     reduce using rule 55 (statement_expression)
    SEMICOLON  reduce using rule 55 (statement_expression)
    $default   reduce using rule 258 (primary_no_new_array)


State 141

  259 primary_no_new_array: method_reference •

    $default  reduce using rule 259 (primary_no_new_array)


State 142

   34 statement: if_then_else_statement •

    $default  reduce using rule 34 (statement)


State 143

   85 if_then_else_statement: if • LPAREN expression RPAREN if_footer

    LPAREN  shift, and go to state 258


State 144

   35 statement: while_statement •

    $default  reduce using rule 35 (statement)


State 145

  101 while_statement: while • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 259


State 146

   36 statement: for_statement •

    $default  reduce using rule 36 (statement)


State 147

  103 for_statement: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN  shift, and go to state 260


State 148

   40 statement_without_trailing_substatement: assert_statement •

    $default  reduce using rule 40 (statement_without_trailing_substatement)


State 149

  116 assert_statement: assert • expression SEMICOLON
  117                 | assert • expression COLON expression SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 261
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 150

   41 statement_without_trailing_substatement: break_statement •

    $default  reduce using rule 41 (statement_without_trailing_substatement)


State 151

  119 break_statement: break • SEMICOLON
  120                | break • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 262
    SEMICOLON   shift, and go to state 263


State 152

   42 statement_without_trailing_substatement: continue_statement •

    $default  reduce using rule 42 (statement_without_trailing_substatement)


State 153

  122 continue_statement: continue • SEMICOLON
  123                   | continue • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 264
    SEMICOLON   shift, and go to state 265


State 154

   43 statement_without_trailing_substatement: return_statement •

    $default  reduce using rule 43 (statement_without_trailing_substatement)


State 155

  125 return_statement: return • SEMICOLON
  126                 | return • expression SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    SEMICOLON    shift, and go to state 266
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    SEMICOLON    [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 267
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 156

   44 statement_without_trailing_substatement: synchronized_statement •

    $default  reduce using rule 44 (statement_without_trailing_substatement)


State 157

   45 statement_without_trailing_substatement: throw_statement •

    $default  reduce using rule 45 (statement_without_trailing_substatement)


State 158

   46 statement_without_trailing_substatement: try_statement •

    $default  reduce using rule 46 (statement_without_trailing_substatement)


State 159

   50 statement_expression: assignment •

    $default  reduce using rule 50 (statement_expression)


State 160

  170 assignment: left_hand_side • assignment_operator expression

    EQUALS                       shift, and go to state 268
    TIMES_EQUALS                 shift, and go to state 269
    DIVIDE_EQUALS                shift, and go to state 270
    MOD_EQUALS                   shift, and go to state 271
    PLUS_EQUALS                  shift, and go to state 272
    MINUS_EQUALS                 shift, and go to state 273
    LEFT_SHIFT_EQUALS            shift, and go to state 274
    RIGHT_SHIFT_EQUALS           shift, and go to state 275
    UNSIGNED_RIGHT_SHIFT_EQUALS  shift, and go to state 276
    AND_EQUALS                   shift, and go to state 277
    XOR_EQUALS                   shift, and go to state 278
    OR_EQUALS                    shift, and go to state 279

    assignment_operator  go to state 280


State 161

  172 left_hand_side: field_access •
  256 primary_no_new_array: field_access •

    EQUALS                       reduce using rule 172 (left_hand_side)
    EQUALS                       [reduce using rule 256 (primary_no_new_array)]
    TIMES_EQUALS                 reduce using rule 172 (left_hand_side)
    DIVIDE_EQUALS                reduce using rule 172 (left_hand_side)
    MOD_EQUALS                   reduce using rule 172 (left_hand_side)
    PLUS_EQUALS                  reduce using rule 172 (left_hand_side)
    MINUS_EQUALS                 reduce using rule 172 (left_hand_side)
    LEFT_SHIFT_EQUALS            reduce using rule 172 (left_hand_side)
    RIGHT_SHIFT_EQUALS           reduce using rule 172 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 172 (left_hand_side)
    AND_EQUALS                   reduce using rule 172 (left_hand_side)
    XOR_EQUALS                   reduce using rule 172 (left_hand_side)
    OR_EQUALS                    reduce using rule 172 (left_hand_side)
    $default                     reduce using rule 256 (primary_no_new_array)


State 162

  173 left_hand_side: array_access •
  257 primary_no_new_array: array_access •

    EQUALS                       reduce using rule 173 (left_hand_side)
    EQUALS                       [reduce using rule 257 (primary_no_new_array)]
    TIMES_EQUALS                 reduce using rule 173 (left_hand_side)
    DIVIDE_EQUALS                reduce using rule 173 (left_hand_side)
    MOD_EQUALS                   reduce using rule 173 (left_hand_side)
    PLUS_EQUALS                  reduce using rule 173 (left_hand_side)
    MINUS_EQUALS                 reduce using rule 173 (left_hand_side)
    LEFT_SHIFT_EQUALS            reduce using rule 173 (left_hand_side)
    RIGHT_SHIFT_EQUALS           reduce using rule 173 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 173 (left_hand_side)
    AND_EQUALS                   reduce using rule 173 (left_hand_side)
    XOR_EQUALS                   reduce using rule 173 (left_hand_side)
    OR_EQUALS                    reduce using rule 173 (left_hand_side)
    $default                     reduce using rule 257 (primary_no_new_array)


State 163

   51 statement_expression: pre_increment_expression •

    $default  reduce using rule 51 (statement_expression)


State 164

   52 statement_expression: pre_decrement_expression •

    $default  reduce using rule 52 (statement_expression)


State 165

   53 statement_expression: post_increment_expression •
  237 postfix_expression: post_increment_expression •

    PLUS_PLUS    reduce using rule 237 (postfix_expression)
    MINUS_MINUS  reduce using rule 237 (postfix_expression)
    $default     reduce using rule 53 (statement_expression)


State 166

   54 statement_expression: post_decrement_expression •
  238 postfix_expression: post_decrement_expression •

    PLUS_PLUS    reduce using rule 238 (postfix_expression)
    MINUS_MINUS  reduce using rule 238 (postfix_expression)
    $default     reduce using rule 54 (statement_expression)


State 167

  231 post_increment_expression: postfix_expression • PLUS_PLUS
  232 post_decrement_expression: postfix_expression • MINUS_MINUS

    PLUS_PLUS    shift, and go to state 281
    MINUS_MINUS  shift, and go to state 282


State 168

   63 method_invocation: primary • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   73 method_reference: primary • DOUBLE_COLON type_arguments IDENTIFIER
  174 field_access: primary • DOT IDENTIFIER
  236 postfix_expression: primary •

    DOUBLE_COLON  shift, and go to state 283
    DOT           shift, and go to state 284

    $default  reduce using rule 236 (postfix_expression)


State 169

  240 primary: array_creation_expression •

    $default  reduce using rule 240 (primary)


State 170

  178 array_access: primary_no_new_array • LSPAR expression RSPAR
  239 primary: primary_no_new_array •

    LSPAR  shift, and go to state 285

    $default  reduce using rule 239 (primary)


State 171

  252 primary_no_new_array: class_literal •

    $default  reduce using rule 252 (primary_no_new_array)


State 172

  261 class_literal: numeric_type • brackets DOT CLASS
  372 primitive_type: numeric_type •

    LSPAR     reduce using rule 265 (brackets)
    LSPAR     [reduce using rule 372 (primitive_type)]
    $default  reduce using rule 265 (brackets)

    brackets  go to state 286


State 173

   18 local_class_or_interface_declaration: class_declaration •

    $default  reduce using rule 18 (local_class_or_interface_declaration)


State 174

   75 method_reference: class_type • DOUBLE_COLON type_arguments NEW
  299 class_type: class_type • DOT type_identifier type_arguments_opt
  371 array_type: class_type • dims

    DOUBLE_COLON  shift, and go to state 287
    DOT           shift, and go to state 42
    LSPAR         shift, and go to state 96

    dims  go to state 97


State 175

   76 method_reference: array_type • DOUBLE_COLON NEW

    DOUBLE_COLON  shift, and go to state 288


State 176

  351 static_initializer: STATIC block •

    $default  reduce using rule 351 (static_initializer)


State 177

  315 field_declaration: field_modifier unanntype • variable_declarators_list SEMICOLON

    IDENTIFIER  shift, and go to state 289

    variable_declarators_list  go to state 290
    variable_declarator        go to state 291
    variable_declarator_id     go to state 292


State 178

  266 unanntype: unann_primitive_type •

    $default  reduce using rule 266 (unanntype)


State 179

  267 unann_primitive_type: numeric_type •

    $default  reduce using rule 267 (unann_primitive_type)


State 180

  268 unann_primitive_type: boolean •

    $default  reduce using rule 268 (unann_primitive_type)


State 181

  332 result: VOID •

    $default  reduce using rule 332 (result)


State 182

  331 result: unanntype •

    $default  reduce using rule 331 (result)


State 183

  330 method_header: type_parameters • result method_declarator throws_empty

    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51
    VOID     shift, and go to state 181

    unanntype             go to state 182
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180
    result                go to state 293


State 184

  322 method_declaration: method_modifier method_header • method_body

    SEMICOLON  shift, and go to state 294
    LMPARA     shift, and go to state 70

    block        go to state 295
    method_body  go to state 296


State 185

  329 method_header: result • method_declarator throws_empty

    IDENTIFIER  shift, and go to state 297

    method_declarator  go to state 298


State 186

  358 constructor_declarator: type_parameters • simple_type_name LPAREN reciever_parameter formal_parameter_list RPAREN

    IDENTIFIER  shift, and go to state 16

    type_identifier   go to state 299
    simple_type_name  go to state 300


State 187

  352 constructor_declaration: constructor_modifiers constructor_declarator • throws_empty constructor_body

    THROWS  shift, and go to state 301

    $default  reduce using rule 334 (throws_empty)

    throws_empty  go to state 302
    throws        go to state 303


State 188

  353 constructor_modifiers: constructor_modifier constructor_modifiers •

    $default  reduce using rule 353 (constructor_modifiers)


State 189

   84 wildcard_bound_opt: SUPER reference_type •

    $default  reduce using rule 84 (wildcard_bound_opt)


State 190

   83 wildcard_bound_opt: EXTENDS reference_type •

    $default  reduce using rule 83 (wildcard_bound_opt)


State 191

   78 type_argument_list: type_argument_list COMMA type_argument •

    $default  reduce using rule 78 (type_argument_list)


State 192

  161 dims: LSPAR RSPAR • dim

    LSPAR  shift, and go to state 304

    $default  reduce using rule 163 (dim)

    dim  go to state 305


State 193

  147 lambda_parameters: LPAREN • lambda_parameter_list_opt RPAREN
  255 primary_no_new_array: LPAREN • expression RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 306
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    FINAL        reduce using rule 27 (variable_modifiers)
    VAR          reduce using rule 27 (variable_modifiers)
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    INT          [reduce using rule 27 (variable_modifiers)]
    LONG         [reduce using rule 27 (variable_modifiers)]
    SHORT        [reduce using rule 27 (variable_modifiers)]
    BYTE         [reduce using rule 27 (variable_modifiers)]
    FLOAT        [reduce using rule 27 (variable_modifiers)]
    DOUBLE       [reduce using rule 27 (variable_modifiers)]
    BOOLEAN      [reduce using rule 27 (variable_modifiers)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    variable_modifiers                    go to state 307
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 201
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    lambda_parameter_list_opt             go to state 308
    lambda_parameter_list                 go to state 309
    lambda_parameter                      go to state 310
    variable_arity_parameter              go to state 311
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 194

    7 type_identifier: IDENTIFIER •
    9 unqualified_method_identifier: IDENTIFIER •
  146 lambda_parameters: IDENTIFIER •

    LPAREN    reduce using rule 9 (unqualified_method_identifier)
    ARROW     reduce using rule 146 (lambda_parameters)
    $default  reduce using rule 7 (type_identifier)


State 195

  226 unary_expression: PLUS • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 312
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 196

  227 unary_expression: MINUS • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 313
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 197

  234 unary_expression_not_plus_minus: TILDE • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 314
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 198

  235 unary_expression_not_plus_minus: NOT • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 315
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 199

  241 array_creation_expression: NEW • array_creation_folllow

    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    type_identifier         go to state 32
    array_creation_folllow  go to state 238
    numeric_type            go to state 55
    integral_type           go to state 56
    floating_point_type     go to state 57
    boolean                 go to state 58
    class_type              go to state 239
    primitive_type          go to state 241


State 200

  258 primary_no_new_array: method_invocation •

    $default  reduce using rule 258 (primary_no_new_array)


State 201

  255 primary_no_new_array: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 316


State 202

  143 expression: lambda_expression •

    $default  reduce using rule 143 (expression)


State 203

  145 lambda_expression: lambda_parameters • ARROW lambda_body

    ARROW  shift, and go to state 317


State 204

  144 expression: assignment_expression •

    $default  reduce using rule 144 (expression)


State 205

  169 assignment_expression: assignment •

    $default  reduce using rule 169 (assignment_expression)


State 206

  168 assignment_expression: conditional_expression •

    $default  reduce using rule 168 (assignment_expression)


State 207

  191 conditional_expression: conditional_or_expression •
  192                       | conditional_or_expression • QUESTION expression COLON conditional_expression
  193                       | conditional_or_expression • QUESTION expression COLON lambda_expression
  195 conditional_or_expression: conditional_or_expression • OR conditional_and_expression

    OR        shift, and go to state 318
    QUESTION  shift, and go to state 319

    $default  reduce using rule 191 (conditional_expression)


State 208

  194 conditional_or_expression: conditional_and_expression •
  197 conditional_and_expression: conditional_and_expression • AND inclusive_or_expression

    AND  shift, and go to state 320

    $default  reduce using rule 194 (conditional_or_expression)


State 209

  196 conditional_and_expression: inclusive_or_expression •
  199 inclusive_or_expression: inclusive_or_expression • OR exclusive_or_expression

    OR  shift, and go to state 321

    OR        [reduce using rule 196 (conditional_and_expression)]
    $default  reduce using rule 196 (conditional_and_expression)


State 210

  198 inclusive_or_expression: exclusive_or_expression •
  201 exclusive_or_expression: exclusive_or_expression • XOR and_expression

    XOR  shift, and go to state 322

    $default  reduce using rule 198 (inclusive_or_expression)


State 211

  200 exclusive_or_expression: and_expression •
  203 and_expression: and_expression • AND equality_expression

    AND  shift, and go to state 323

    AND       [reduce using rule 200 (exclusive_or_expression)]
    $default  reduce using rule 200 (exclusive_or_expression)


State 212

  202 and_expression: equality_expression •
  205 equality_expression: equality_expression • EQUALS relational_expression
  206                    | equality_expression • NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 324
    NOT_EQUALS  shift, and go to state 325

    $default  reduce using rule 202 (and_expression)


State 213

  204 equality_expression: relational_expression •
  208 relational_expression: relational_expression • LT shift_expression
  209                      | relational_expression • GT shift_expression
  210                      | relational_expression • LE shift_expression
  211                      | relational_expression • GE shift_expression
  212                      | relational_expression • INSTANCEOF reference_type

    LT          shift, and go to state 326
    GT          shift, and go to state 327
    LE          shift, and go to state 328
    GE          shift, and go to state 329
    INSTANCEOF  shift, and go to state 330

    $default  reduce using rule 204 (equality_expression)


State 214

  207 relational_expression: shift_expression •
  214 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  215                 | shift_expression • RIGHT_SHIFT additive_expression
  216                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 331
    RIGHT_SHIFT           shift, and go to state 332
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 333

    $default  reduce using rule 207 (relational_expression)


State 215

  213 shift_expression: additive_expression •
  218 additive_expression: additive_expression • PLUS multiplicative_expression
  219                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335

    $default  reduce using rule 213 (shift_expression)


State 216

  217 additive_expression: multiplicative_expression •
  221 multiplicative_expression: multiplicative_expression • TIMES unary_expression
  222                          | multiplicative_expression • DIVIDE unary_expression
  223                          | multiplicative_expression • MOD unary_expression

    TIMES   shift, and go to state 336
    DIVIDE  shift, and go to state 337
    MOD     shift, and go to state 338

    $default  reduce using rule 217 (additive_expression)


State 217

  220 multiplicative_expression: unary_expression •

    $default  reduce using rule 220 (multiplicative_expression)


State 218

  224 unary_expression: pre_increment_expression •

    $default  reduce using rule 224 (unary_expression)


State 219

  225 unary_expression: pre_decrement_expression •

    $default  reduce using rule 225 (unary_expression)


State 220

  237 postfix_expression: post_increment_expression •

    $default  reduce using rule 237 (postfix_expression)


State 221

  238 postfix_expression: post_decrement_expression •

    $default  reduce using rule 238 (postfix_expression)


State 222

  228 unary_expression: unary_expression_not_plus_minus •

    $default  reduce using rule 228 (unary_expression)


State 223

  231 post_increment_expression: postfix_expression • PLUS_PLUS
  232 post_decrement_expression: postfix_expression • MINUS_MINUS
  233 unary_expression_not_plus_minus: postfix_expression •

    PLUS_PLUS    shift, and go to state 281
    MINUS_MINUS  shift, and go to state 282

    $default  reduce using rule 233 (unary_expression_not_plus_minus)


State 224

   48 labeled_statement: IDENTIFIER COLON • statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 339
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 225

  130 try_statement: TRY block • catches_opt finally_opt

    CATCH  shift, and go to state 340

    $default  reduce using rule 136 (catches_opt)

    catches       go to state 341
    catches_opt   go to state 342
    catch_clause  go to state 343
    catch         go to state 344


State 226

  128 synchronized_statement: SYNCHRONIZED LPAREN • expression RPAREN block

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 345
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 227

  129 throw_statement: THROW expression • SEMICOLON

    SEMICOLON  shift, and go to state 346


State 228

    7 type_identifier: IDENTIFIER •
    9 unqualified_method_identifier: IDENTIFIER •

    LPAREN    reduce using rule 9 (unqualified_method_identifier)
    $default  reduce using rule 7 (type_identifier)


State 229

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT type_identifier
   62 method_invocation: module_or_package_or_expression_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   65                  | module_or_package_or_expression_name • DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   72 method_reference: module_or_package_or_expression_name • DOT SUPER DOUBLE_COLON type_arguments IDENTIFIER
   74                 | module_or_package_or_expression_name • DOUBLE_COLON type_arguments IDENTIFIER
  176 field_access: module_or_package_or_expression_name •
  177 array_access: module_or_package_or_expression_name • LSPAR expression RSPAR
  254 primary_no_new_array: module_or_package_or_expression_name • DOT THIS
  260 class_literal: module_or_package_or_expression_name • brackets DOT CLASS

    DOUBLE_COLON  shift, and go to state 242
    DOT           shift, and go to state 243
    LSPAR         shift, and go to state 244

    DOUBLE_COLON  [reduce using rule 176 (field_access)]
    DOT           [reduce using rule 176 (field_access)]
    DOT           [reduce using rule 265 (brackets)]
    LSPAR         [reduce using rule 176 (field_access)]
    LSPAR         [reduce using rule 265 (brackets)]
    $default      reduce using rule 176 (field_access)

    brackets  go to state 245


State 230

  256 primary_no_new_array: field_access •

    $default  reduce using rule 256 (primary_no_new_array)


State 231

  257 primary_no_new_array: array_access •

    $default  reduce using rule 257 (primary_no_new_array)


State 232

  229 pre_increment_expression: PLUS_PLUS unary_expression •

    $default  reduce using rule 229 (pre_increment_expression)


State 233

  230 pre_decrement_expression: MINUS_MINUS unary_expression •

    $default  reduce using rule 230 (pre_decrement_expression)


State 234

   71 method_reference: SUPER DOUBLE_COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 39

    type_arguments  go to state 347


State 235

   64 method_invocation: SUPER DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  175 field_access: SUPER DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 348
    LT          shift, and go to state 39

    type_arguments  go to state 349


State 236

  262 class_literal: BOOLEAN brackets • DOT CLASS
  264 brackets: brackets • LSPAR RSPAR

    DOT    shift, and go to state 350
    LSPAR  shift, and go to state 351


State 237

  263 class_literal: VOID DOT • CLASS

    CLASS  shift, and go to state 352


State 238

  241 array_creation_expression: NEW array_creation_folllow •

    $default  reduce using rule 241 (array_creation_expression)


State 239

  243 array_creation_folllow: class_type • array_creation_type_follow
  299 class_type: class_type • DOT type_identifier type_arguments_opt

    DOT    shift, and go to state 42
    LSPAR  shift, and go to state 353

    dims                        go to state 354
    array_creation_type_follow  go to state 355
    dimexprs                    go to state 356
    dimexpr                     go to state 357


State 240

   57 class_instance_creation_expression: NEW type_arguments_opt • class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body

    IDENTIFIER  shift, and go to state 358

    class_or_interface_type_to_instantiate  go to state 359


State 241

  242 array_creation_folllow: primitive_type • array_creation_type_follow

    LSPAR  shift, and go to state 353

    dims                        go to state 354
    array_creation_type_follow  go to state 360
    dimexprs                    go to state 356
    dimexpr                     go to state 357


State 242

   74 method_reference: module_or_package_or_expression_name DOUBLE_COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 39

    type_arguments  go to state 361


State 243

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT • type_identifier
   62 method_invocation: module_or_package_or_expression_name DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   65                  | module_or_package_or_expression_name DOT • SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   72 method_reference: module_or_package_or_expression_name DOT • SUPER DOUBLE_COLON type_arguments IDENTIFIER
  254 primary_no_new_array: module_or_package_or_expression_name DOT • THIS

    IDENTIFIER  shift, and go to state 16
    LT          shift, and go to state 39
    THIS        shift, and go to state 362
    SUPER       shift, and go to state 363

    type_identifier  go to state 364
    type_arguments   go to state 365


State 244

  177 array_access: module_or_package_or_expression_name LSPAR • expression RSPAR

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 366
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 245

  260 class_literal: module_or_package_or_expression_name brackets • DOT CLASS
  264 brackets: brackets • LSPAR RSPAR

    DOT    shift, and go to state 367
    LSPAR  shift, and go to state 351


State 246

   61 method_invocation: method_name LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 368
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 247

   10 block: LMPARA block_statements_opt RMPARA •

    $default  reduce using rule 10 (block)


State 248

   13 block_statements: block_statements block_statement •

    $default  reduce using rule 13 (block_statements)


State 249

   19 local_variable_declaration_statement: local_variable_declaration SEMICOLON •

    $default  reduce using rule 19 (local_variable_declaration_statement)


State 250

   29 final: FINAL •

    $default  reduce using rule 29 (final)


State 251

  159 var: VAR •

    $default  reduce using rule 159 (var)


State 252

   26 variable_modifiers: variable_modifiers variable_modifier •

    $default  reduce using rule 26 (variable_modifiers)


State 253

   28 variable_modifier: final •

    $default  reduce using rule 28 (variable_modifier)


State 254

   20 local_variable_declaration: variable_modifiers local_variable_type • variable_declarators_list

    IDENTIFIER  shift, and go to state 289

    variable_declarators_list  go to state 371
    variable_declarator        go to state 291
    variable_declarator_id     go to state 292


State 255

   31 local_variable_type: var •

    $default  reduce using rule 31 (local_variable_type)


State 256

   30 local_variable_type: unanntype •

    $default  reduce using rule 30 (local_variable_type)


State 257

   49 expression_statement: statement_expression SEMICOLON •

    $default  reduce using rule 49 (expression_statement)


State 258

   85 if_then_else_statement: if LPAREN • expression RPAREN if_footer

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 372
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 259

  101 while_statement: while LPAREN • expression RPAREN statement

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 373
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 260

  103 for_statement: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    SEMICOLON    reduce using rule 106 (for_init_opt)
    FINAL        reduce using rule 27 (variable_modifiers)
    VAR          reduce using rule 27 (variable_modifiers)
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    INT          [reduce using rule 27 (variable_modifiers)]
    LONG         [reduce using rule 27 (variable_modifiers)]
    SHORT        [reduce using rule 27 (variable_modifiers)]
    BYTE         [reduce using rule 27 (variable_modifiers)]
    FLOAT        [reduce using rule 27 (variable_modifiers)]
    DOUBLE       [reduce using rule 27 (variable_modifiers)]
    BOOLEAN      [reduce using rule 27 (variable_modifiers)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    local_variable_declaration            go to state 374
    variable_modifiers                    go to state 132
    statement_expression                  go to state 375
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    for_init_opt                          go to state 376
    for_init                              go to state 377
    statement_expression_list             go to state 378
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 261

  116 assert_statement: assert expression • SEMICOLON
  117                 | assert expression • COLON expression SEMICOLON

    SEMICOLON  shift, and go to state 379
    COLON      shift, and go to state 380


State 262

  120 break_statement: break IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 381


State 263

  119 break_statement: break SEMICOLON •

    $default  reduce using rule 119 (break_statement)


State 264

  123 continue_statement: continue IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 382


State 265

  122 continue_statement: continue SEMICOLON •

    $default  reduce using rule 122 (continue_statement)


State 266

  125 return_statement: return SEMICOLON •

    $default  reduce using rule 125 (return_statement)


State 267

  126 return_statement: return expression • SEMICOLON

    SEMICOLON  shift, and go to state 383


State 268

  179 assignment_operator: EQUALS •

    $default  reduce using rule 179 (assignment_operator)


State 269

  180 assignment_operator: TIMES_EQUALS •

    $default  reduce using rule 180 (assignment_operator)


State 270

  181 assignment_operator: DIVIDE_EQUALS •

    $default  reduce using rule 181 (assignment_operator)


State 271

  182 assignment_operator: MOD_EQUALS •

    $default  reduce using rule 182 (assignment_operator)


State 272

  183 assignment_operator: PLUS_EQUALS •

    $default  reduce using rule 183 (assignment_operator)


State 273

  184 assignment_operator: MINUS_EQUALS •

    $default  reduce using rule 184 (assignment_operator)


State 274

  185 assignment_operator: LEFT_SHIFT_EQUALS •

    $default  reduce using rule 185 (assignment_operator)


State 275

  186 assignment_operator: RIGHT_SHIFT_EQUALS •

    $default  reduce using rule 186 (assignment_operator)


State 276

  187 assignment_operator: UNSIGNED_RIGHT_SHIFT_EQUALS •

    $default  reduce using rule 187 (assignment_operator)


State 277

  188 assignment_operator: AND_EQUALS •

    $default  reduce using rule 188 (assignment_operator)


State 278

  189 assignment_operator: XOR_EQUALS •

    $default  reduce using rule 189 (assignment_operator)


State 279

  190 assignment_operator: OR_EQUALS •

    $default  reduce using rule 190 (assignment_operator)


State 280

  170 assignment: left_hand_side assignment_operator • expression

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 384
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 281

  231 post_increment_expression: postfix_expression PLUS_PLUS •

    $default  reduce using rule 231 (post_increment_expression)


State 282

  232 post_decrement_expression: postfix_expression MINUS_MINUS •

    $default  reduce using rule 232 (post_decrement_expression)


State 283

   73 method_reference: primary DOUBLE_COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 39

    type_arguments  go to state 385


State 284

   63 method_invocation: primary DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  174 field_access: primary DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 386
    LT          shift, and go to state 39

    type_arguments  go to state 387


State 285

  178 array_access: primary_no_new_array LSPAR • expression RSPAR

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 388
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 286

  261 class_literal: numeric_type brackets • DOT CLASS
  264 brackets: brackets • LSPAR RSPAR

    DOT    shift, and go to state 389
    LSPAR  shift, and go to state 351


State 287

   75 method_reference: class_type DOUBLE_COLON • type_arguments NEW

    LT  shift, and go to state 39

    type_arguments  go to state 390


State 288

   76 method_reference: array_type DOUBLE_COLON • NEW

    NEW  shift, and go to state 391


State 289

  160 variable_declarator_id: IDENTIFIER • dims

    LSPAR  shift, and go to state 96

    dims  go to state 392


State 290

   21 variable_declarators_list: variable_declarators_list • COMMA variable_declarator
  315 field_declaration: field_modifier unanntype variable_declarators_list • SEMICOLON

    COMMA      shift, and go to state 393
    SEMICOLON  shift, and go to state 394


State 291

   22 variable_declarators_list: variable_declarator •

    $default  reduce using rule 22 (variable_declarators_list)


State 292

   23 variable_declarator: variable_declarator_id • variable_initializer_opt

    EQUALS  shift, and go to state 395

    $default  reduce using rule 25 (variable_initializer_opt)

    variable_initializer_opt  go to state 396


State 293

  330 method_header: type_parameters result • method_declarator throws_empty

    IDENTIFIER  shift, and go to state 297

    method_declarator  go to state 397


State 294

  340 method_body: SEMICOLON •

    $default  reduce using rule 340 (method_body)


State 295

  339 method_body: block •

    $default  reduce using rule 339 (method_body)


State 296

  322 method_declaration: method_modifier method_header method_body •

    $default  reduce using rule 322 (method_declaration)


State 297

  341 method_declarator: IDENTIFIER • LPAREN reciever_parameter formal_parameter_list RPAREN dim

    LPAREN  shift, and go to state 398


State 298

  329 method_header: result method_declarator • throws_empty

    THROWS  shift, and go to state 301

    $default  reduce using rule 334 (throws_empty)

    throws_empty  go to state 399
    throws        go to state 303


State 299

  359 simple_type_name: type_identifier •

    $default  reduce using rule 359 (simple_type_name)


State 300

  358 constructor_declarator: type_parameters simple_type_name • LPAREN reciever_parameter formal_parameter_list RPAREN

    LPAREN  shift, and go to state 400


State 301

  335 throws: THROWS • exception_type_list

    IDENTIFIER  shift, and go to state 16

    type_identifier      go to state 32
    class_type           go to state 401
    exception_type_list  go to state 402
    exception_type       go to state 403


State 302

  352 constructor_declaration: constructor_modifiers constructor_declarator throws_empty • constructor_body

    LMPARA  shift, and go to state 404

    constructor_body  go to state 405


State 303

  333 throws_empty: throws •

    $default  reduce using rule 333 (throws_empty)


State 304

  162 dim: LSPAR • RSPAR

    RSPAR  shift, and go to state 406


State 305

  161 dims: LSPAR RSPAR dim •

    $default  reduce using rule 161 (dims)


State 306

    7 type_identifier: IDENTIFIER •
    9 unqualified_method_identifier: IDENTIFIER •
  146 lambda_parameters: IDENTIFIER •
  150 lambda_parameter_list: IDENTIFIER • more_identifiers

    COMMA     reduce using rule 154 (more_identifiers)
    LPAREN    reduce using rule 9 (unqualified_method_identifier)
    RPAREN    reduce using rule 7 (type_identifier)
    RPAREN    [reduce using rule 154 (more_identifiers)]
    ARROW     reduce using rule 146 (lambda_parameters)
    $default  reduce using rule 7 (type_identifier)

    more_identifiers  go to state 407


State 307

   26 variable_modifiers: variable_modifiers • variable_modifier
  155 lambda_parameter: variable_modifiers • lambda_parameter_type variable_declarator_id
  164 variable_arity_parameter: variable_modifiers • unanntype variable_arity_parameter_id

    FINAL    shift, and go to state 250
    VAR      shift, and go to state 251
    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    variable_modifier      go to state 252
    final                  go to state 253
    lambda_parameter_type  go to state 408
    var                    go to state 409
    unanntype              go to state 410
    unann_primitive_type   go to state 178
    numeric_type           go to state 179
    integral_type          go to state 56
    floating_point_type    go to state 57
    boolean                go to state 180


State 308

  147 lambda_parameters: LPAREN lambda_parameter_list_opt • RPAREN

    RPAREN  shift, and go to state 411


State 309

  148 lambda_parameter_list_opt: lambda_parameter_list •

    $default  reduce using rule 148 (lambda_parameter_list_opt)


State 310

  149 lambda_parameter_list: lambda_parameter • more_lambda_parameters

    $default  reduce using rule 152 (more_lambda_parameters)

    more_lambda_parameters  go to state 412


State 311

  156 lambda_parameter: variable_arity_parameter •

    $default  reduce using rule 156 (lambda_parameter)


State 312

  226 unary_expression: PLUS unary_expression •

    $default  reduce using rule 226 (unary_expression)


State 313

  227 unary_expression: MINUS unary_expression •

    $default  reduce using rule 227 (unary_expression)


State 314

  234 unary_expression_not_plus_minus: TILDE unary_expression •

    $default  reduce using rule 234 (unary_expression_not_plus_minus)


State 315

  235 unary_expression_not_plus_minus: NOT unary_expression •

    $default  reduce using rule 235 (unary_expression_not_plus_minus)


State 316

  255 primary_no_new_array: LPAREN expression RPAREN •

    $default  reduce using rule 255 (primary_no_new_array)


State 317

  145 lambda_expression: lambda_parameters ARROW • lambda_body

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LMPARA       shift, and go to state 70
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    block                                 go to state 413
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 414
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    lambda_body                           go to state 415
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 318

  195 conditional_or_expression: conditional_or_expression OR • conditional_and_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    conditional_and_expression            go to state 416
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 319

  192 conditional_expression: conditional_or_expression QUESTION • expression COLON conditional_expression
  193                       | conditional_or_expression QUESTION • expression COLON lambda_expression

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 417
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 320

  197 conditional_and_expression: conditional_and_expression AND • inclusive_or_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    inclusive_or_expression               go to state 418
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 321

  199 inclusive_or_expression: inclusive_or_expression OR • exclusive_or_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    exclusive_or_expression               go to state 419
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 322

  201 exclusive_or_expression: exclusive_or_expression XOR • and_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    and_expression                        go to state 420
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 323

  203 and_expression: and_expression AND • equality_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    equality_expression                   go to state 421
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 324

  205 equality_expression: equality_expression EQUALS • relational_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    relational_expression                 go to state 422
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 325

  206 equality_expression: equality_expression NOT_EQUALS • relational_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    relational_expression                 go to state 423
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 326

  208 relational_expression: relational_expression LT • shift_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    shift_expression                      go to state 424
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 327

  209 relational_expression: relational_expression GT • shift_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    shift_expression                      go to state 425
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 328

  210 relational_expression: relational_expression LE • shift_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    shift_expression                      go to state 426
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 329

  211 relational_expression: relational_expression GE • shift_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    shift_expression                      go to state 427
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 330

  212 relational_expression: relational_expression INSTANCEOF • reference_type

    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 45
    LONG        shift, and go to state 46
    SHORT       shift, and go to state 47
    BYTE        shift, and go to state 48
    FLOAT       shift, and go to state 49
    DOUBLE      shift, and go to state 50
    BOOLEAN     shift, and go to state 51

    type_identifier      go to state 32
    numeric_type         go to state 55
    integral_type        go to state 56
    floating_point_type  go to state 57
    boolean              go to state 58
    class_type           go to state 59
    reference_type       go to state 428
    array_type           go to state 61
    primitive_type       go to state 62


State 331

  214 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    additive_expression                   go to state 429
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 332

  215 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    additive_expression                   go to state 430
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 333

  216 shift_expression: shift_expression UNSIGNED_RIGHT_SHIFT • additive_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    additive_expression                   go to state 431
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 334

  218 additive_expression: additive_expression PLUS • multiplicative_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    multiplicative_expression             go to state 432
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 335

  219 additive_expression: additive_expression MINUS • multiplicative_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    multiplicative_expression             go to state 433
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 336

  221 multiplicative_expression: multiplicative_expression TIMES • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 434
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 337

  222 multiplicative_expression: multiplicative_expression DIVIDE • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 435
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 338

  223 multiplicative_expression: multiplicative_expression MOD • unary_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    field_access                          go to state 230
    array_access                          go to state 231
    unary_expression                      go to state 436
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 339

   48 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 48 (labeled_statement)


State 340

  138 catch: CATCH •

    $default  reduce using rule 138 (catch)


State 341

  135 catches_opt: catches •

    $default  reduce using rule 135 (catches_opt)


State 342

  130 try_statement: TRY block catches_opt • finally_opt

    FINALLY  shift, and go to state 437

    $default  reduce using rule 132 (finally_opt)

    finally_opt  go to state 438
    finally      go to state 439


State 343

  133 catches: catch_clause • catches
  134        | catch_clause •

    CATCH  shift, and go to state 340

    $default  reduce using rule 134 (catches)

    catches       go to state 440
    catch_clause  go to state 343
    catch         go to state 344


State 344

  137 catch_clause: catch • LPAREN catch_formal_parameter RPAREN block

    LPAREN  shift, and go to state 441


State 345

  128 synchronized_statement: SYNCHRONIZED LPAREN expression • RPAREN block

    RPAREN  shift, and go to state 442


State 346

  129 throw_statement: THROW expression SEMICOLON •

    $default  reduce using rule 129 (throw_statement)


State 347

   71 method_reference: SUPER DOUBLE_COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 443


State 348

  175 field_access: SUPER DOT IDENTIFIER •

    $default  reduce using rule 175 (field_access)


State 349

   64 method_invocation: SUPER DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 444


State 350

  262 class_literal: BOOLEAN brackets DOT • CLASS

    CLASS  shift, and go to state 445


State 351

  264 brackets: brackets LSPAR • RSPAR

    RSPAR  shift, and go to state 446


State 352

  263 class_literal: VOID DOT CLASS •

    $default  reduce using rule 263 (class_literal)


State 353

  161 dims: LSPAR • RSPAR dim
  248 dimexpr: LSPAR • expression RSPAR

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    RSPAR        shift, and go to state 192
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RSPAR        [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 447
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 354

  245 array_creation_type_follow: dims • array_initializer

    LMPARA  shift, and go to state 448

    array_initializer  go to state 449


State 355

  243 array_creation_folllow: class_type array_creation_type_follow •

    $default  reduce using rule 243 (array_creation_folllow)


State 356

  244 array_creation_type_follow: dimexprs • dims_opt
  246 dimexprs: dimexprs • dimexpr

    LSPAR  shift, and go to state 353

    $default  reduce using rule 250 (dims_opt)

    dims      go to state 450
    dimexpr   go to state 451
    dims_opt  go to state 452


State 357

  247 dimexprs: dimexpr •

    $default  reduce using rule 247 (dimexprs)


State 358

   58 class_or_interface_type_to_instantiate: IDENTIFIER • dot_annotation_indentifiers_optional type_arguments_opt

    $default  reduce using rule 60 (dot_annotation_indentifiers_optional)

    dot_annotation_indentifiers_optional  go to state 453


State 359

   57 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate • LPAREN argument_list_optional RPAREN class_body

    LPAREN  shift, and go to state 454


State 360

  242 array_creation_folllow: primitive_type array_creation_type_follow •

    $default  reduce using rule 242 (array_creation_folllow)


State 361

   74 method_reference: module_or_package_or_expression_name DOUBLE_COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 455


State 362

  254 primary_no_new_array: module_or_package_or_expression_name DOT THIS •

    $default  reduce using rule 254 (primary_no_new_array)


State 363

   65 method_invocation: module_or_package_or_expression_name DOT SUPER • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   72 method_reference: module_or_package_or_expression_name DOT SUPER • DOUBLE_COLON type_arguments IDENTIFIER

    DOUBLE_COLON  shift, and go to state 456
    DOT           shift, and go to state 457


State 364

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT type_identifier •

    $default  reduce using rule 6 (module_or_package_or_expression_name)


State 365

   62 method_invocation: module_or_package_or_expression_name DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 458


State 366

  177 array_access: module_or_package_or_expression_name LSPAR expression • RSPAR

    RSPAR  shift, and go to state 459


State 367

  260 class_literal: module_or_package_or_expression_name brackets DOT • CLASS

    CLASS  shift, and go to state 460


State 368

   61 method_invocation: method_name LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 461


State 369

   66 argument_list_optional: argument_list •
   68 argument_list: argument_list • COMMA expression

    COMMA  shift, and go to state 462

    $default  reduce using rule 66 (argument_list_optional)


State 370

   69 argument_list: expression •

    $default  reduce using rule 69 (argument_list)


State 371

   20 local_variable_declaration: variable_modifiers local_variable_type variable_declarators_list •
   21 variable_declarators_list: variable_declarators_list • COMMA variable_declarator

    COMMA  shift, and go to state 393

    $default  reduce using rule 20 (local_variable_declaration)


State 372

   85 if_then_else_statement: if LPAREN expression • RPAREN if_footer

    RPAREN  shift, and go to state 463


State 373

  101 while_statement: while LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 464


State 374

  108 for_init: local_variable_declaration •

    $default  reduce using rule 108 (for_init)


State 375

  109 statement_expression_list: statement_expression • statement_expressions

    $default  reduce using rule 111 (statement_expressions)

    statement_expressions  go to state 465


State 376

  103 for_statement: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 466


State 377

  105 for_init_opt: for_init •

    $default  reduce using rule 105 (for_init_opt)


State 378

  107 for_init: statement_expression_list •

    $default  reduce using rule 107 (for_init)


State 379

  116 assert_statement: assert expression SEMICOLON •

    $default  reduce using rule 116 (assert_statement)


State 380

  117 assert_statement: assert expression COLON • expression SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 467
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 381

  120 break_statement: break IDENTIFIER SEMICOLON •

    $default  reduce using rule 120 (break_statement)


State 382

  123 continue_statement: continue IDENTIFIER SEMICOLON •

    $default  reduce using rule 123 (continue_statement)


State 383

  126 return_statement: return expression SEMICOLON •

    $default  reduce using rule 126 (return_statement)


State 384

  170 assignment: left_hand_side assignment_operator expression •

    $default  reduce using rule 170 (assignment)


State 385

   73 method_reference: primary DOUBLE_COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 468


State 386

  174 field_access: primary DOT IDENTIFIER •

    $default  reduce using rule 174 (field_access)


State 387

   63 method_invocation: primary DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 469


State 388

  178 array_access: primary_no_new_array LSPAR expression • RSPAR

    RSPAR  shift, and go to state 470


State 389

  261 class_literal: numeric_type brackets DOT • CLASS

    CLASS  shift, and go to state 471


State 390

   75 method_reference: class_type DOUBLE_COLON type_arguments • NEW

    NEW  shift, and go to state 472


State 391

   76 method_reference: array_type DOUBLE_COLON NEW •

    $default  reduce using rule 76 (method_reference)


State 392

  160 variable_declarator_id: IDENTIFIER dims •

    $default  reduce using rule 160 (variable_declarator_id)


State 393

   21 variable_declarators_list: variable_declarators_list COMMA • variable_declarator

    IDENTIFIER  shift, and go to state 289

    variable_declarator     go to state 473
    variable_declarator_id  go to state 292


State 394

  315 field_declaration: field_modifier unanntype variable_declarators_list SEMICOLON •

    $default  reduce using rule 315 (field_declaration)


State 395

   24 variable_initializer_opt: EQUALS • variable_initializer

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LMPARA       shift, and go to state 448
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 474
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62
    array_initializer                     go to state 475
    variable_initializer                  go to state 476


State 396

   23 variable_declarator: variable_declarator_id variable_initializer_opt •

    $default  reduce using rule 23 (variable_declarator)


State 397

  330 method_header: type_parameters result method_declarator • throws_empty

    THROWS  shift, and go to state 301

    $default  reduce using rule 334 (throws_empty)

    throws_empty  go to state 477
    throws        go to state 303


State 398

  341 method_declarator: IDENTIFIER LPAREN • reciever_parameter formal_parameter_list RPAREN dim

    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    INT       [reduce using rule 344 (reciever_parameter)]
    LONG      [reduce using rule 344 (reciever_parameter)]
    SHORT     [reduce using rule 344 (reciever_parameter)]
    BYTE      [reduce using rule 344 (reciever_parameter)]
    FLOAT     [reduce using rule 344 (reciever_parameter)]
    DOUBLE    [reduce using rule 344 (reciever_parameter)]
    BOOLEAN   [reduce using rule 344 (reciever_parameter)]
    $default  reduce using rule 344 (reciever_parameter)

    unanntype             go to state 478
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180
    reciever_parameter    go to state 479


State 399

  329 method_header: result method_declarator throws_empty •

    $default  reduce using rule 329 (method_header)


State 400

  358 constructor_declarator: type_parameters simple_type_name LPAREN • reciever_parameter formal_parameter_list RPAREN

    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    INT       [reduce using rule 344 (reciever_parameter)]
    LONG      [reduce using rule 344 (reciever_parameter)]
    SHORT     [reduce using rule 344 (reciever_parameter)]
    BYTE      [reduce using rule 344 (reciever_parameter)]
    FLOAT     [reduce using rule 344 (reciever_parameter)]
    DOUBLE    [reduce using rule 344 (reciever_parameter)]
    BOOLEAN   [reduce using rule 344 (reciever_parameter)]
    $default  reduce using rule 344 (reciever_parameter)

    unanntype             go to state 478
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180
    reciever_parameter    go to state 480


State 401

  299 class_type: class_type • DOT type_identifier type_arguments_opt
  338 exception_type: class_type •

    DOT  shift, and go to state 42

    $default  reduce using rule 338 (exception_type)


State 402

  335 throws: THROWS exception_type_list •
  336 exception_type_list: exception_type_list • COMMA exception_type

    COMMA  shift, and go to state 481

    $default  reduce using rule 335 (throws)


State 403

  337 exception_type_list: exception_type •

    $default  reduce using rule 337 (exception_type_list)


State 404

  360 constructor_body: LMPARA • explicit_constructor_invocation block_statements RMPARA
  361                 | LMPARA • explicit_constructor_invocation RMPARA
  362                 | LMPARA • block_statements RMPARA
  363                 | LMPARA • RMPARA

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    LT            shift, and go to state 39
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    RMPARA        shift, and go to state 482
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOT           reduce using rule 70 (method_reference)
    FINAL         reduce using rule 27 (variable_modifiers)
    FINAL         [reduce using rule 281 (class_modifiers)]
    VAR           reduce using rule 27 (variable_modifiers)
    LSPAR         reduce using rule 70 (method_reference)
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    THIS          [reduce using rule 301 (type_arguments_opt)]
    SUPER         [reduce using rule 301 (type_arguments_opt)]
    INT           [reduce using rule 27 (variable_modifiers)]
    LONG          [reduce using rule 27 (variable_modifiers)]
    SHORT         [reduce using rule 27 (variable_modifiers)]
    BYTE          [reduce using rule 27 (variable_modifiers)]
    FLOAT         [reduce using rule 27 (variable_modifiers)]
    DOUBLE        [reduce using rule 27 (variable_modifiers)]
    BOOLEAN       [reduce using rule 27 (variable_modifiers)]
    $default      reduce using rule 281 (class_modifiers)

    module_or_package_or_expression_name     go to state 483
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    block_statements                         go to state 484
    block_statement                          go to state 128
    local_class_or_interface_declaration     go to state 129
    local_variable_declaration_statement     go to state 130
    local_variable_declaration               go to state 131
    variable_modifiers                       go to state 132
    statement                                go to state 133
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    type_arguments                           go to state 40
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 485
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_declaration                        go to state 173
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    class_type                               go to state 174
    type_arguments_opt                       go to state 486
    explicit_constructor_invocation          go to state 487
    array_type                               go to state 175
    primitive_type                           go to state 62


State 405

  352 constructor_declaration: constructor_modifiers constructor_declarator throws_empty constructor_body •

    $default  reduce using rule 352 (constructor_declaration)


State 406

  162 dim: LSPAR RSPAR •

    $default  reduce using rule 162 (dim)


State 407

  150 lambda_parameter_list: IDENTIFIER more_identifiers •
  153 more_identifiers: more_identifiers • COMMA IDENTIFIER

    COMMA  shift, and go to state 488

    $default  reduce using rule 150 (lambda_parameter_list)


State 408

  155 lambda_parameter: variable_modifiers lambda_parameter_type • variable_declarator_id

    IDENTIFIER  shift, and go to state 289

    variable_declarator_id  go to state 489


State 409

  158 lambda_parameter_type: var •

    $default  reduce using rule 158 (lambda_parameter_type)


State 410

  157 lambda_parameter_type: unanntype •
  164 variable_arity_parameter: variable_modifiers unanntype • variable_arity_parameter_id

    ELLIPSIS  shift, and go to state 490

    $default  reduce using rule 157 (lambda_parameter_type)

    variable_arity_parameter_id  go to state 491


State 411

  147 lambda_parameters: LPAREN lambda_parameter_list_opt RPAREN •

    $default  reduce using rule 147 (lambda_parameters)


State 412

  149 lambda_parameter_list: lambda_parameter more_lambda_parameters •
  151 more_lambda_parameters: more_lambda_parameters • COMMA lambda_parameter

    COMMA  shift, and go to state 492

    $default  reduce using rule 149 (lambda_parameter_list)


State 413

  167 lambda_body: block •

    $default  reduce using rule 167 (lambda_body)


State 414

  166 lambda_body: expression •

    $default  reduce using rule 166 (lambda_body)


State 415

  145 lambda_expression: lambda_parameters ARROW lambda_body •

    $default  reduce using rule 145 (lambda_expression)


State 416

  195 conditional_or_expression: conditional_or_expression OR conditional_and_expression •
  197 conditional_and_expression: conditional_and_expression • AND inclusive_or_expression

    AND  shift, and go to state 320

    $default  reduce using rule 195 (conditional_or_expression)


State 417

  192 conditional_expression: conditional_or_expression QUESTION expression • COLON conditional_expression
  193                       | conditional_or_expression QUESTION expression • COLON lambda_expression

    COLON  shift, and go to state 493


State 418

  197 conditional_and_expression: conditional_and_expression AND inclusive_or_expression •
  199 inclusive_or_expression: inclusive_or_expression • OR exclusive_or_expression

    OR  shift, and go to state 321

    OR        [reduce using rule 197 (conditional_and_expression)]
    $default  reduce using rule 197 (conditional_and_expression)


State 419

  199 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression •
  201 exclusive_or_expression: exclusive_or_expression • XOR and_expression

    XOR  shift, and go to state 322

    $default  reduce using rule 199 (inclusive_or_expression)


State 420

  201 exclusive_or_expression: exclusive_or_expression XOR and_expression •
  203 and_expression: and_expression • AND equality_expression

    AND  shift, and go to state 323

    AND       [reduce using rule 201 (exclusive_or_expression)]
    $default  reduce using rule 201 (exclusive_or_expression)


State 421

  203 and_expression: and_expression AND equality_expression •
  205 equality_expression: equality_expression • EQUALS relational_expression
  206                    | equality_expression • NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 324
    NOT_EQUALS  shift, and go to state 325

    $default  reduce using rule 203 (and_expression)


State 422

  205 equality_expression: equality_expression EQUALS relational_expression •
  208 relational_expression: relational_expression • LT shift_expression
  209                      | relational_expression • GT shift_expression
  210                      | relational_expression • LE shift_expression
  211                      | relational_expression • GE shift_expression
  212                      | relational_expression • INSTANCEOF reference_type

    LT          shift, and go to state 326
    GT          shift, and go to state 327
    LE          shift, and go to state 328
    GE          shift, and go to state 329
    INSTANCEOF  shift, and go to state 330

    $default  reduce using rule 205 (equality_expression)


State 423

  206 equality_expression: equality_expression NOT_EQUALS relational_expression •
  208 relational_expression: relational_expression • LT shift_expression
  209                      | relational_expression • GT shift_expression
  210                      | relational_expression • LE shift_expression
  211                      | relational_expression • GE shift_expression
  212                      | relational_expression • INSTANCEOF reference_type

    LT          shift, and go to state 326
    GT          shift, and go to state 327
    LE          shift, and go to state 328
    GE          shift, and go to state 329
    INSTANCEOF  shift, and go to state 330

    $default  reduce using rule 206 (equality_expression)


State 424

  208 relational_expression: relational_expression LT shift_expression •
  214 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  215                 | shift_expression • RIGHT_SHIFT additive_expression
  216                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 331
    RIGHT_SHIFT           shift, and go to state 332
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 333

    $default  reduce using rule 208 (relational_expression)


State 425

  209 relational_expression: relational_expression GT shift_expression •
  214 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  215                 | shift_expression • RIGHT_SHIFT additive_expression
  216                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 331
    RIGHT_SHIFT           shift, and go to state 332
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 333

    $default  reduce using rule 209 (relational_expression)


State 426

  210 relational_expression: relational_expression LE shift_expression •
  214 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  215                 | shift_expression • RIGHT_SHIFT additive_expression
  216                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 331
    RIGHT_SHIFT           shift, and go to state 332
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 333

    $default  reduce using rule 210 (relational_expression)


State 427

  211 relational_expression: relational_expression GE shift_expression •
  214 shift_expression: shift_expression • LEFT_SHIFT additive_expression
  215                 | shift_expression • RIGHT_SHIFT additive_expression
  216                 | shift_expression • UNSIGNED_RIGHT_SHIFT additive_expression

    LEFT_SHIFT            shift, and go to state 331
    RIGHT_SHIFT           shift, and go to state 332
    UNSIGNED_RIGHT_SHIFT  shift, and go to state 333

    $default  reduce using rule 211 (relational_expression)


State 428

  212 relational_expression: relational_expression INSTANCEOF reference_type •

    $default  reduce using rule 212 (relational_expression)


State 429

  214 shift_expression: shift_expression LEFT_SHIFT additive_expression •
  218 additive_expression: additive_expression • PLUS multiplicative_expression
  219                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335

    $default  reduce using rule 214 (shift_expression)


State 430

  215 shift_expression: shift_expression RIGHT_SHIFT additive_expression •
  218 additive_expression: additive_expression • PLUS multiplicative_expression
  219                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335

    $default  reduce using rule 215 (shift_expression)


State 431

  216 shift_expression: shift_expression UNSIGNED_RIGHT_SHIFT additive_expression •
  218 additive_expression: additive_expression • PLUS multiplicative_expression
  219                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335

    $default  reduce using rule 216 (shift_expression)


State 432

  218 additive_expression: additive_expression PLUS multiplicative_expression •
  221 multiplicative_expression: multiplicative_expression • TIMES unary_expression
  222                          | multiplicative_expression • DIVIDE unary_expression
  223                          | multiplicative_expression • MOD unary_expression

    TIMES   shift, and go to state 336
    DIVIDE  shift, and go to state 337
    MOD     shift, and go to state 338

    $default  reduce using rule 218 (additive_expression)


State 433

  219 additive_expression: additive_expression MINUS multiplicative_expression •
  221 multiplicative_expression: multiplicative_expression • TIMES unary_expression
  222                          | multiplicative_expression • DIVIDE unary_expression
  223                          | multiplicative_expression • MOD unary_expression

    TIMES   shift, and go to state 336
    DIVIDE  shift, and go to state 337
    MOD     shift, and go to state 338

    $default  reduce using rule 219 (additive_expression)


State 434

  221 multiplicative_expression: multiplicative_expression TIMES unary_expression •

    $default  reduce using rule 221 (multiplicative_expression)


State 435

  222 multiplicative_expression: multiplicative_expression DIVIDE unary_expression •

    $default  reduce using rule 222 (multiplicative_expression)


State 436

  223 multiplicative_expression: multiplicative_expression MOD unary_expression •

    $default  reduce using rule 223 (multiplicative_expression)


State 437

  142 finally: FINALLY • block

    LMPARA  shift, and go to state 70

    block  go to state 494


State 438

  130 try_statement: TRY block catches_opt finally_opt •

    $default  reduce using rule 130 (try_statement)


State 439

  131 finally_opt: finally •

    $default  reduce using rule 131 (finally_opt)


State 440

  133 catches: catch_clause catches •

    $default  reduce using rule 133 (catches)


State 441

  137 catch_clause: catch LPAREN • catch_formal_parameter RPAREN block

    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    catch_formal_parameter  go to state 495
    catch_type              go to state 496
    unanntype               go to state 497
    unann_primitive_type    go to state 178
    numeric_type            go to state 179
    integral_type           go to state 56
    floating_point_type     go to state 57
    boolean                 go to state 180


State 442

  128 synchronized_statement: SYNCHRONIZED LPAREN expression RPAREN • block

    LMPARA  shift, and go to state 70

    block  go to state 498


State 443

   71 method_reference: SUPER DOUBLE_COLON type_arguments IDENTIFIER •

    $default  reduce using rule 71 (method_reference)


State 444

   64 method_invocation: SUPER DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 499


State 445

  262 class_literal: BOOLEAN brackets DOT CLASS •

    $default  reduce using rule 262 (class_literal)


State 446

  264 brackets: brackets LSPAR RSPAR •

    $default  reduce using rule 264 (brackets)


State 447

  248 dimexpr: LSPAR expression • RSPAR

    RSPAR  shift, and go to state 500


State 448

  374 array_initializer: LMPARA • variable_initializer_list_opt comma_opt RMPARA

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LMPARA       shift, and go to state 448
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 474
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62
    array_initializer                     go to state 475
    variable_initializer_list_opt         go to state 501
    variable_initializer_list             go to state 502
    variable_initializer                  go to state 503


State 449

  245 array_creation_type_follow: dims array_initializer •

    $default  reduce using rule 245 (array_creation_type_follow)


State 450

  249 dims_opt: dims •

    $default  reduce using rule 249 (dims_opt)


State 451

  246 dimexprs: dimexprs dimexpr •

    $default  reduce using rule 246 (dimexprs)


State 452

  244 array_creation_type_follow: dimexprs dims_opt •

    $default  reduce using rule 244 (array_creation_type_follow)


State 453

   58 class_or_interface_type_to_instantiate: IDENTIFIER dot_annotation_indentifiers_optional • type_arguments_opt
   59 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional • DOT IDENTIFIER

    DOT  shift, and go to state 504
    LT   shift, and go to state 39

    $default  reduce using rule 301 (type_arguments_opt)

    type_arguments      go to state 40
    type_arguments_opt  go to state 505


State 454

   57 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN • argument_list_optional RPAREN class_body

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 506
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 455

   74 method_reference: module_or_package_or_expression_name DOUBLE_COLON type_arguments IDENTIFIER •

    $default  reduce using rule 74 (method_reference)


State 456

   72 method_reference: module_or_package_or_expression_name DOT SUPER DOUBLE_COLON • type_arguments IDENTIFIER

    LT  shift, and go to state 39

    type_arguments  go to state 507


State 457

   65 method_invocation: module_or_package_or_expression_name DOT SUPER DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN

    LT  shift, and go to state 39

    type_arguments  go to state 508


State 458

   62 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 509


State 459

  177 array_access: module_or_package_or_expression_name LSPAR expression RSPAR •

    $default  reduce using rule 177 (array_access)


State 460

  260 class_literal: module_or_package_or_expression_name brackets DOT CLASS •

    $default  reduce using rule 260 (class_literal)


State 461

   61 method_invocation: method_name LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 61 (method_invocation)


State 462

   68 argument_list: argument_list COMMA • expression

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 510
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 463

   85 if_then_else_statement: if LPAREN expression RPAREN • if_footer

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 511
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 512
    statement_without_trailing_substatement  go to state 513
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if_footer                                go to state 514
    statement_no_short_if                    go to state 515
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 521
    while_statement                          go to state 144
    while                                    go to state 522
    for_statement                            go to state 146
    for                                      go to state 523
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 464

  101 while_statement: while LPAREN expression RPAREN • statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 524
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 465

  109 statement_expression_list: statement_expression statement_expressions •
  110 statement_expressions: statement_expressions • COMMA statement_expression

    COMMA  shift, and go to state 525

    $default  reduce using rule 109 (statement_expression_list)


State 466

  103 for_statement: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression_opt                        go to state 526
    expression                            go to state 527
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 467

  117 assert_statement: assert expression COLON expression • SEMICOLON

    SEMICOLON  shift, and go to state 528


State 468

   73 method_reference: primary DOUBLE_COLON type_arguments IDENTIFIER •

    $default  reduce using rule 73 (method_reference)


State 469

   63 method_invocation: primary DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 529


State 470

  178 array_access: primary_no_new_array LSPAR expression RSPAR •

    $default  reduce using rule 178 (array_access)


State 471

  261 class_literal: numeric_type brackets DOT CLASS •

    $default  reduce using rule 261 (class_literal)


State 472

   75 method_reference: class_type DOUBLE_COLON type_arguments NEW •

    $default  reduce using rule 75 (method_reference)


State 473

   21 variable_declarators_list: variable_declarators_list COMMA variable_declarator •

    $default  reduce using rule 21 (variable_declarators_list)


State 474

  381 variable_initializer: expression •

    $default  reduce using rule 381 (variable_initializer)


State 475

  382 variable_initializer: array_initializer •

    $default  reduce using rule 382 (variable_initializer)


State 476

   24 variable_initializer_opt: EQUALS variable_initializer •

    $default  reduce using rule 24 (variable_initializer_opt)


State 477

  330 method_header: type_parameters result method_declarator throws_empty •

    $default  reduce using rule 330 (method_header)


State 478

  342 reciever_parameter: unanntype • IDENTIFIER DOT THIS
  343                   | unanntype • THIS

    IDENTIFIER  shift, and go to state 530
    THIS        shift, and go to state 531


State 479

  341 method_declarator: IDENTIFIER LPAREN reciever_parameter • formal_parameter_list RPAREN dim

    COMMA     reduce using rule 347 (formal_parameter_list)
    RPAREN    reduce using rule 347 (formal_parameter_list)
    $default  reduce using rule 27 (variable_modifiers)

    variable_modifiers        go to state 532
    variable_arity_parameter  go to state 533
    formal_parameter_list     go to state 534
    formal_parameter          go to state 535


State 480

  358 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter • formal_parameter_list RPAREN

    COMMA     reduce using rule 347 (formal_parameter_list)
    RPAREN    reduce using rule 347 (formal_parameter_list)
    $default  reduce using rule 27 (variable_modifiers)

    variable_modifiers        go to state 532
    variable_arity_parameter  go to state 533
    formal_parameter_list     go to state 536
    formal_parameter          go to state 535


State 481

  336 exception_type_list: exception_type_list COMMA • exception_type

    IDENTIFIER  shift, and go to state 16

    type_identifier  go to state 32
    class_type       go to state 401
    exception_type   go to state 537


State 482

  363 constructor_body: LMPARA RMPARA •

    $default  reduce using rule 363 (constructor_body)


State 483

    6 module_or_package_or_expression_name: module_or_package_or_expression_name • DOT type_identifier
   62 method_invocation: module_or_package_or_expression_name • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   65                  | module_or_package_or_expression_name • DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   72 method_reference: module_or_package_or_expression_name • DOT SUPER DOUBLE_COLON type_arguments IDENTIFIER
   74                 | module_or_package_or_expression_name • DOUBLE_COLON type_arguments IDENTIFIER
  171 left_hand_side: module_or_package_or_expression_name •
  176 field_access: module_or_package_or_expression_name •
  177 array_access: module_or_package_or_expression_name • LSPAR expression RSPAR
  254 primary_no_new_array: module_or_package_or_expression_name • DOT THIS
  260 class_literal: module_or_package_or_expression_name • brackets DOT CLASS
  366 explicit_constructor_invocation: module_or_package_or_expression_name • DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    DOUBLE_COLON  shift, and go to state 242
    DOT           shift, and go to state 538
    LSPAR         shift, and go to state 244

    DOUBLE_COLON                 [reduce using rule 176 (field_access)]
    EQUALS                       reduce using rule 171 (left_hand_side)
    EQUALS                       [reduce using rule 176 (field_access)]
    DOT                          [reduce using rule 176 (field_access)]
    DOT                          [reduce using rule 265 (brackets)]
    LSPAR                        [reduce using rule 176 (field_access)]
    LSPAR                        [reduce using rule 265 (brackets)]
    TIMES_EQUALS                 reduce using rule 171 (left_hand_side)
    TIMES_EQUALS                 [reduce using rule 176 (field_access)]
    DIVIDE_EQUALS                reduce using rule 171 (left_hand_side)
    DIVIDE_EQUALS                [reduce using rule 176 (field_access)]
    MOD_EQUALS                   reduce using rule 171 (left_hand_side)
    MOD_EQUALS                   [reduce using rule 176 (field_access)]
    PLUS_EQUALS                  reduce using rule 171 (left_hand_side)
    PLUS_EQUALS                  [reduce using rule 176 (field_access)]
    MINUS_EQUALS                 reduce using rule 171 (left_hand_side)
    MINUS_EQUALS                 [reduce using rule 176 (field_access)]
    LEFT_SHIFT_EQUALS            reduce using rule 171 (left_hand_side)
    LEFT_SHIFT_EQUALS            [reduce using rule 176 (field_access)]
    RIGHT_SHIFT_EQUALS           reduce using rule 171 (left_hand_side)
    RIGHT_SHIFT_EQUALS           [reduce using rule 176 (field_access)]
    UNSIGNED_RIGHT_SHIFT_EQUALS  reduce using rule 171 (left_hand_side)
    UNSIGNED_RIGHT_SHIFT_EQUALS  [reduce using rule 176 (field_access)]
    AND_EQUALS                   reduce using rule 171 (left_hand_side)
    AND_EQUALS                   [reduce using rule 176 (field_access)]
    XOR_EQUALS                   reduce using rule 171 (left_hand_side)
    XOR_EQUALS                   [reduce using rule 176 (field_access)]
    OR_EQUALS                    reduce using rule 171 (left_hand_side)
    OR_EQUALS                    [reduce using rule 176 (field_access)]
    PLUS_PLUS                    reduce using rule 176 (field_access)
    MINUS_MINUS                  reduce using rule 176 (field_access)
    $default                     reduce using rule 171 (left_hand_side)

    brackets  go to state 245


State 484

   13 block_statements: block_statements • block_statement
  362 constructor_body: LMPARA block_statements • RMPARA

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    RMPARA        shift, and go to state 539
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOT           reduce using rule 70 (method_reference)
    FINAL         reduce using rule 27 (variable_modifiers)
    FINAL         [reduce using rule 281 (class_modifiers)]
    VAR           reduce using rule 27 (variable_modifiers)
    LSPAR         reduce using rule 70 (method_reference)
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    INT           [reduce using rule 27 (variable_modifiers)]
    LONG          [reduce using rule 27 (variable_modifiers)]
    SHORT         [reduce using rule 27 (variable_modifiers)]
    BYTE          [reduce using rule 27 (variable_modifiers)]
    FLOAT         [reduce using rule 27 (variable_modifiers)]
    DOUBLE        [reduce using rule 27 (variable_modifiers)]
    BOOLEAN       [reduce using rule 27 (variable_modifiers)]
    $default      reduce using rule 281 (class_modifiers)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    block_statement                          go to state 248
    local_class_or_interface_declaration     go to state 129
    local_variable_declaration_statement     go to state 130
    local_variable_declaration               go to state 131
    variable_modifiers                       go to state 132
    statement                                go to state 133
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_declaration                        go to state 173
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 485

   63 method_invocation: primary • DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   73 method_reference: primary • DOUBLE_COLON type_arguments IDENTIFIER
  174 field_access: primary • DOT IDENTIFIER
  236 postfix_expression: primary •
  367 explicit_constructor_invocation: primary • DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    DOUBLE_COLON  shift, and go to state 283
    DOT           shift, and go to state 540

    $default  reduce using rule 236 (postfix_expression)


State 486

  364 explicit_constructor_invocation: type_arguments_opt • THIS LPAREN argument_list_optional RPAREN SEMICOLON
  365                                | type_arguments_opt • SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    THIS   shift, and go to state 541
    SUPER  shift, and go to state 542


State 487

  360 constructor_body: LMPARA explicit_constructor_invocation • block_statements RMPARA
  361                 | LMPARA explicit_constructor_invocation • RMPARA

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    RMPARA        shift, and go to state 543
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOT           reduce using rule 70 (method_reference)
    FINAL         reduce using rule 27 (variable_modifiers)
    FINAL         [reduce using rule 281 (class_modifiers)]
    VAR           reduce using rule 27 (variable_modifiers)
    LSPAR         reduce using rule 70 (method_reference)
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    INT           [reduce using rule 27 (variable_modifiers)]
    LONG          [reduce using rule 27 (variable_modifiers)]
    SHORT         [reduce using rule 27 (variable_modifiers)]
    BYTE          [reduce using rule 27 (variable_modifiers)]
    FLOAT         [reduce using rule 27 (variable_modifiers)]
    DOUBLE        [reduce using rule 27 (variable_modifiers)]
    BOOLEAN       [reduce using rule 27 (variable_modifiers)]
    $default      reduce using rule 281 (class_modifiers)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    block_statements                         go to state 544
    block_statement                          go to state 128
    local_class_or_interface_declaration     go to state 129
    local_variable_declaration_statement     go to state 130
    local_variable_declaration               go to state 131
    variable_modifiers                       go to state 132
    statement                                go to state 133
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_declaration                        go to state 173
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 488

  153 more_identifiers: more_identifiers COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 545


State 489

  155 lambda_parameter: variable_modifiers lambda_parameter_type variable_declarator_id •

    $default  reduce using rule 155 (lambda_parameter)


State 490

  165 variable_arity_parameter_id: ELLIPSIS • IDENTIFIER

    IDENTIFIER  shift, and go to state 546


State 491

  164 variable_arity_parameter: variable_modifiers unanntype variable_arity_parameter_id •

    $default  reduce using rule 164 (variable_arity_parameter)


State 492

  151 more_lambda_parameters: more_lambda_parameters COMMA • lambda_parameter

    $default  reduce using rule 27 (variable_modifiers)

    variable_modifiers        go to state 307
    lambda_parameter          go to state 547
    variable_arity_parameter  go to state 311


State 493

  192 conditional_expression: conditional_or_expression QUESTION expression COLON • conditional_expression
  193                       | conditional_or_expression QUESTION expression COLON • lambda_expression

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 229
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    lambda_expression                     go to state 548
    lambda_parameters                     go to state 203
    field_access                          go to state 230
    array_access                          go to state 231
    conditional_expression                go to state 549
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 494

  142 finally: FINALLY block •

    $default  reduce using rule 142 (finally)


State 495

  137 catch_clause: catch LPAREN catch_formal_parameter • RPAREN block

    RPAREN  shift, and go to state 550


State 496

  139 catch_formal_parameter: catch_type • IDENTIFIER
  141 catch_type: catch_type • OR unanntype

    IDENTIFIER  shift, and go to state 551
    OR          shift, and go to state 552


State 497

  140 catch_type: unanntype •

    $default  reduce using rule 140 (catch_type)


State 498

  128 synchronized_statement: SYNCHRONIZED LPAREN expression RPAREN block •

    $default  reduce using rule 128 (synchronized_statement)


State 499

   64 method_invocation: SUPER DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 553
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 500

  248 dimexpr: LSPAR expression RSPAR •

    $default  reduce using rule 248 (dimexpr)


State 501

  374 array_initializer: LMPARA variable_initializer_list_opt • comma_opt RMPARA

    COMMA  shift, and go to state 554

    $default  reduce using rule 377 (comma_opt)

    comma_opt  go to state 555


State 502

  375 variable_initializer_list_opt: variable_initializer_list •

    $default  reduce using rule 375 (variable_initializer_list_opt)


State 503

  378 variable_initializer_list: variable_initializer • variable_init

    $default  reduce using rule 380 (variable_init)

    variable_init  go to state 556


State 504

   59 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 557


State 505

   58 class_or_interface_type_to_instantiate: IDENTIFIER dot_annotation_indentifiers_optional type_arguments_opt •

    $default  reduce using rule 58 (class_or_interface_type_to_instantiate)


State 506

   57 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional • RPAREN class_body

    RPAREN  shift, and go to state 558


State 507

   72 method_reference: module_or_package_or_expression_name DOT SUPER DOUBLE_COLON type_arguments • IDENTIFIER

    IDENTIFIER  shift, and go to state 559


State 508

   65 method_invocation: module_or_package_or_expression_name DOT SUPER DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN

    IDENTIFIER  shift, and go to state 560


State 509

   62 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 561
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 510

   68 argument_list: argument_list COMMA expression •

    $default  reduce using rule 68 (argument_list)


State 511

    7 type_identifier: IDENTIFIER •
    9 unqualified_method_identifier: IDENTIFIER •
   48 labeled_statement: IDENTIFIER • COLON statement
   93 labeled_statement_no_short_if: IDENTIFIER • COLON statement_no_short_if

    COLON  shift, and go to state 562

    LPAREN    reduce using rule 9 (unqualified_method_identifier)
    $default  reduce using rule 7 (type_identifier)


State 512

   86 if_footer: statement •

    $default  reduce using rule 86 (if_footer)


State 513

   32 statement: statement_without_trailing_substatement •
   88 statement_no_short_if: statement_without_trailing_substatement •

    ELSE      reduce using rule 88 (statement_no_short_if)
    $default  reduce using rule 32 (statement)


State 514

   85 if_then_else_statement: if LPAREN expression RPAREN if_footer •

    $default  reduce using rule 85 (if_then_else_statement)


State 515

   87 if_footer: statement_no_short_if • else statement

    ELSE  shift, and go to state 563

    else  go to state 564


State 516

   89 statement_no_short_if: labeled_statement_no_short_if •

    $default  reduce using rule 89 (statement_no_short_if)


State 517

   90 statement_no_short_if: if_then_else_statement_no_short_if •

    $default  reduce using rule 90 (statement_no_short_if)


State 518

   91 statement_no_short_if: while_statement_no_short_if •

    $default  reduce using rule 91 (statement_no_short_if)


State 519

   92 statement_no_short_if: for_statement_no_short_if •

    $default  reduce using rule 92 (statement_no_short_if)


State 520

   97 for_statement_no_short_if: enhanced_for_statement_no_short_if •

    $default  reduce using rule 97 (for_statement_no_short_if)


State 521

   85 if_then_else_statement: if • LPAREN expression RPAREN if_footer
   94 if_then_else_statement_no_short_if: if • LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN  shift, and go to state 565


State 522

   95 while_statement_no_short_if: while • LPAREN expression RPAREN statement_no_short_if
  101 while_statement: while • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 566


State 523

   96 for_statement_no_short_if: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
   98 enhanced_for_statement_no_short_if: for • LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if
  103 for_statement: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN  shift, and go to state 567


State 524

  101 while_statement: while LPAREN expression RPAREN statement •

    $default  reduce using rule 101 (while_statement)


State 525

  110 statement_expressions: statement_expressions COMMA • statement_expression

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    statement_expression                  go to state 568
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 526

  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 569


State 527

  112 expression_opt: expression •

    $default  reduce using rule 112 (expression_opt)


State 528

  117 assert_statement: assert expression COLON expression SEMICOLON •

    $default  reduce using rule 117 (assert_statement)


State 529

   63 method_invocation: primary DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 570
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 530

  342 reciever_parameter: unanntype IDENTIFIER • DOT THIS

    DOT  shift, and go to state 571


State 531

  343 reciever_parameter: unanntype THIS •

    $default  reduce using rule 343 (reciever_parameter)


State 532

   26 variable_modifiers: variable_modifiers • variable_modifier
  164 variable_arity_parameter: variable_modifiers • unanntype variable_arity_parameter_id
  348 formal_parameter: variable_modifiers • unanntype variable_declarator_id

    FINAL    shift, and go to state 250
    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    variable_modifier     go to state 252
    final                 go to state 253
    unanntype             go to state 572
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180


State 533

  349 formal_parameter: variable_arity_parameter •

    $default  reduce using rule 349 (formal_parameter)


State 534

  341 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list • RPAREN dim
  345 formal_parameter_list: formal_parameter_list • COMMA formal_parameter

    COMMA   shift, and go to state 573
    RPAREN  shift, and go to state 574


State 535

  346 formal_parameter_list: formal_parameter •

    $default  reduce using rule 346 (formal_parameter_list)


State 536

  345 formal_parameter_list: formal_parameter_list • COMMA formal_parameter
  358 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter formal_parameter_list • RPAREN

    COMMA   shift, and go to state 573
    RPAREN  shift, and go to state 575


State 537

  336 exception_type_list: exception_type_list COMMA exception_type •

    $default  reduce using rule 336 (exception_type_list)


State 538

    6 module_or_package_or_expression_name: module_or_package_or_expression_name DOT • type_identifier
   62 method_invocation: module_or_package_or_expression_name DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   65                  | module_or_package_or_expression_name DOT • SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
   72 method_reference: module_or_package_or_expression_name DOT • SUPER DOUBLE_COLON type_arguments IDENTIFIER
  254 primary_no_new_array: module_or_package_or_expression_name DOT • THIS
  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT • type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 16
    LT          shift, and go to state 39
    THIS        shift, and go to state 362
    SUPER       shift, and go to state 363

    SUPER  [reduce using rule 301 (type_arguments_opt)]

    type_identifier     go to state 364
    type_arguments      go to state 576
    type_arguments_opt  go to state 577


State 539

  362 constructor_body: LMPARA block_statements RMPARA •

    $default  reduce using rule 362 (constructor_body)


State 540

   63 method_invocation: primary DOT • type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN
  174 field_access: primary DOT • IDENTIFIER
  367 explicit_constructor_invocation: primary DOT • type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 386
    LT          shift, and go to state 39

    $default  reduce using rule 301 (type_arguments_opt)

    type_arguments      go to state 578
    type_arguments_opt  go to state 579


State 541

  364 explicit_constructor_invocation: type_arguments_opt THIS • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 580


State 542

  365 explicit_constructor_invocation: type_arguments_opt SUPER • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 581


State 543

  361 constructor_body: LMPARA explicit_constructor_invocation RMPARA •

    $default  reduce using rule 361 (constructor_body)


State 544

   13 block_statements: block_statements • block_statement
  360 constructor_body: LMPARA explicit_constructor_invocation block_statements • RMPARA

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    RMPARA        shift, and go to state 582
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOT           reduce using rule 70 (method_reference)
    FINAL         reduce using rule 27 (variable_modifiers)
    FINAL         [reduce using rule 281 (class_modifiers)]
    VAR           reduce using rule 27 (variable_modifiers)
    LSPAR         reduce using rule 70 (method_reference)
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    INT           [reduce using rule 27 (variable_modifiers)]
    LONG          [reduce using rule 27 (variable_modifiers)]
    SHORT         [reduce using rule 27 (variable_modifiers)]
    BYTE          [reduce using rule 27 (variable_modifiers)]
    FLOAT         [reduce using rule 27 (variable_modifiers)]
    DOUBLE        [reduce using rule 27 (variable_modifiers)]
    BOOLEAN       [reduce using rule 27 (variable_modifiers)]
    $default      reduce using rule 281 (class_modifiers)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    block_statement                          go to state 248
    local_class_or_interface_declaration     go to state 129
    local_variable_declaration_statement     go to state 130
    local_variable_declaration               go to state 131
    variable_modifiers                       go to state 132
    statement                                go to state 133
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_declaration                        go to state 173
    normal_class_declaration                 go to state 6
    class_modifiers                          go to state 7
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 545

  153 more_identifiers: more_identifiers COMMA IDENTIFIER •

    $default  reduce using rule 153 (more_identifiers)


State 546

  165 variable_arity_parameter_id: ELLIPSIS IDENTIFIER •

    $default  reduce using rule 165 (variable_arity_parameter_id)


State 547

  151 more_lambda_parameters: more_lambda_parameters COMMA lambda_parameter •

    $default  reduce using rule 151 (more_lambda_parameters)


State 548

  193 conditional_expression: conditional_or_expression QUESTION expression COLON lambda_expression •

    $default  reduce using rule 193 (conditional_expression)


State 549

  192 conditional_expression: conditional_or_expression QUESTION expression COLON conditional_expression •

    $default  reduce using rule 192 (conditional_expression)


State 550

  137 catch_clause: catch LPAREN catch_formal_parameter RPAREN • block

    LMPARA  shift, and go to state 70

    block  go to state 583


State 551

  139 catch_formal_parameter: catch_type IDENTIFIER •

    $default  reduce using rule 139 (catch_formal_parameter)


State 552

  141 catch_type: catch_type OR • unanntype

    INT      shift, and go to state 45
    LONG     shift, and go to state 46
    SHORT    shift, and go to state 47
    BYTE     shift, and go to state 48
    FLOAT    shift, and go to state 49
    DOUBLE   shift, and go to state 50
    BOOLEAN  shift, and go to state 51

    unanntype             go to state 584
    unann_primitive_type  go to state 178
    numeric_type          go to state 179
    integral_type         go to state 56
    floating_point_type   go to state 57
    boolean               go to state 180


State 553

   64 method_invocation: SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 585


State 554

  376 comma_opt: COMMA •

    $default  reduce using rule 376 (comma_opt)


State 555

  374 array_initializer: LMPARA variable_initializer_list_opt comma_opt • RMPARA

    RMPARA  shift, and go to state 586


State 556

  378 variable_initializer_list: variable_initializer variable_init •
  379 variable_init: variable_init • COMMA variable_initializer

    COMMA  shift, and go to state 587

    COMMA     [reduce using rule 378 (variable_initializer_list)]
    $default  reduce using rule 378 (variable_initializer_list)


State 557

   59 dot_annotation_indentifiers_optional: dot_annotation_indentifiers_optional DOT IDENTIFIER •

    $default  reduce using rule 59 (dot_annotation_indentifiers_optional)


State 558

   57 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN • class_body

    LMPARA  shift, and go to state 34

    class_body  go to state 588


State 559

   72 method_reference: module_or_package_or_expression_name DOT SUPER DOUBLE_COLON type_arguments IDENTIFIER •

    $default  reduce using rule 72 (method_reference)


State 560

   65 method_invocation: module_or_package_or_expression_name DOT SUPER DOT type_arguments IDENTIFIER • LPAREN argument_list_optional RPAREN

    LPAREN  shift, and go to state 589


State 561

   62 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 590


State 562

   48 labeled_statement: IDENTIFIER COLON • statement
   93 labeled_statement_no_short_if: IDENTIFIER COLON • statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 511
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 339
    statement_without_trailing_substatement  go to state 513
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    statement_no_short_if                    go to state 591
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 521
    while_statement                          go to state 144
    while                                    go to state 522
    for_statement                            go to state 146
    for                                      go to state 523
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 563

  100 else: ELSE •

    $default  reduce using rule 100 (else)


State 564

   87 if_footer: statement_no_short_if else • statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 592
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 565

   85 if_then_else_statement: if LPAREN • expression RPAREN if_footer
   94 if_then_else_statement_no_short_if: if LPAREN • expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 593
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 566

   95 while_statement_no_short_if: while LPAREN • expression RPAREN statement_no_short_if
  101 while_statement: while LPAREN • expression RPAREN statement

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 594
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 567

   96 for_statement_no_short_if: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
   98 enhanced_for_statement_no_short_if: for LPAREN • local_variable_declaration COLON expression RPAREN statement_no_short_if
  103 for_statement: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    SEMICOLON    reduce using rule 106 (for_init_opt)
    FINAL        reduce using rule 27 (variable_modifiers)
    VAR          reduce using rule 27 (variable_modifiers)
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    INT          [reduce using rule 27 (variable_modifiers)]
    LONG         [reduce using rule 27 (variable_modifiers)]
    SHORT        [reduce using rule 27 (variable_modifiers)]
    BYTE         [reduce using rule 27 (variable_modifiers)]
    FLOAT        [reduce using rule 27 (variable_modifiers)]
    DOUBLE       [reduce using rule 27 (variable_modifiers)]
    BOOLEAN      [reduce using rule 27 (variable_modifiers)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    local_variable_declaration            go to state 595
    variable_modifiers                    go to state 132
    statement_expression                  go to state 375
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    for_init_opt                          go to state 596
    for_init                              go to state 377
    statement_expression_list             go to state 378
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 568

  110 statement_expressions: statement_expressions COMMA statement_expression •

    $default  reduce using rule 110 (statement_expressions)


State 569

  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    RPAREN       reduce using rule 114 (for_update_opt)
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    statement_expression                  go to state 375
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    statement_expression_list             go to state 597
    for_update_opt                        go to state 598
    for_update                            go to state 599
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 570

   63 method_invocation: primary DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 600


State 571

  342 reciever_parameter: unanntype IDENTIFIER DOT • THIS

    THIS  shift, and go to state 601


State 572

  164 variable_arity_parameter: variable_modifiers unanntype • variable_arity_parameter_id
  348 formal_parameter: variable_modifiers unanntype • variable_declarator_id

    IDENTIFIER  shift, and go to state 289
    ELLIPSIS    shift, and go to state 490

    variable_declarator_id       go to state 602
    variable_arity_parameter_id  go to state 491


State 573

  345 formal_parameter_list: formal_parameter_list COMMA • formal_parameter

    $default  reduce using rule 27 (variable_modifiers)

    variable_modifiers        go to state 532
    variable_arity_parameter  go to state 533
    formal_parameter          go to state 603


State 574

  341 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list RPAREN • dim

    LSPAR  shift, and go to state 304

    $default  reduce using rule 163 (dim)

    dim  go to state 604


State 575

  358 constructor_declarator: type_parameters simple_type_name LPAREN reciever_parameter formal_parameter_list RPAREN •

    $default  reduce using rule 358 (constructor_declarator)


State 576

   62 method_invocation: module_or_package_or_expression_name DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN
  300 type_arguments_opt: type_arguments •

    IDENTIFIER  shift, and go to state 458

    $default  reduce using rule 300 (type_arguments_opt)


State 577

  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_opt • SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    SUPER  shift, and go to state 605


State 578

   63 method_invocation: primary DOT type_arguments • IDENTIFIER LPAREN argument_list_optional RPAREN
  300 type_arguments_opt: type_arguments •

    IDENTIFIER  shift, and go to state 469

    $default  reduce using rule 300 (type_arguments_opt)


State 579

  367 explicit_constructor_invocation: primary DOT type_arguments_opt • SUPER LPAREN argument_list_optional RPAREN SEMICOLON

    SUPER  shift, and go to state 606


State 580

  364 explicit_constructor_invocation: type_arguments_opt THIS LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 607
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 581

  365 explicit_constructor_invocation: type_arguments_opt SUPER LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 608
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 582

  360 constructor_body: LMPARA explicit_constructor_invocation block_statements RMPARA •

    $default  reduce using rule 360 (constructor_body)


State 583

  137 catch_clause: catch LPAREN catch_formal_parameter RPAREN block •

    $default  reduce using rule 137 (catch_clause)


State 584

  141 catch_type: catch_type OR unanntype •

    $default  reduce using rule 141 (catch_type)


State 585

   64 method_invocation: SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 64 (method_invocation)


State 586

  374 array_initializer: LMPARA variable_initializer_list_opt comma_opt RMPARA •

    $default  reduce using rule 374 (array_initializer)


State 587

  379 variable_init: variable_init COMMA • variable_initializer

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LMPARA       shift, and go to state 448
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 474
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62
    array_initializer                     go to state 475
    variable_initializer                  go to state 609


State 588

   57 class_instance_creation_expression: NEW type_arguments_opt class_or_interface_type_to_instantiate LPAREN argument_list_optional RPAREN class_body •

    $default  reduce using rule 57 (class_instance_creation_expression)


State 589

   65 method_invocation: module_or_package_or_expression_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN • argument_list_optional RPAREN

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 610
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 590

   62 method_invocation: module_or_package_or_expression_name DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 62 (method_invocation)


State 591

   93 labeled_statement_no_short_if: IDENTIFIER COLON statement_no_short_if •

    $default  reduce using rule 93 (labeled_statement_no_short_if)


State 592

   87 if_footer: statement_no_short_if else statement •

    $default  reduce using rule 87 (if_footer)


State 593

   85 if_then_else_statement: if LPAREN expression • RPAREN if_footer
   94 if_then_else_statement_no_short_if: if LPAREN expression • RPAREN statement_no_short_if ELSE statement_no_short_if

    RPAREN  shift, and go to state 611


State 594

   95 while_statement_no_short_if: while LPAREN expression • RPAREN statement_no_short_if
  101 while_statement: while LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 612


State 595

   98 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration • COLON expression RPAREN statement_no_short_if
  108 for_init: local_variable_declaration •

    COLON  shift, and go to state 613

    $default  reduce using rule 108 (for_init)


State 596

   96 for_statement_no_short_if: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  103 for_statement: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 614


State 597

  115 for_update: statement_expression_list •

    $default  reduce using rule 115 (for_update)


State 598

  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement

    RPAREN  shift, and go to state 615


State 599

  113 for_update_opt: for_update •

    $default  reduce using rule 113 (for_update_opt)


State 600

   63 method_invocation: primary DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 63 (method_invocation)


State 601

  342 reciever_parameter: unanntype IDENTIFIER DOT THIS •

    $default  reduce using rule 342 (reciever_parameter)


State 602

  348 formal_parameter: variable_modifiers unanntype variable_declarator_id •

    $default  reduce using rule 348 (formal_parameter)


State 603

  345 formal_parameter_list: formal_parameter_list COMMA formal_parameter •

    $default  reduce using rule 345 (formal_parameter_list)


State 604

  341 method_declarator: IDENTIFIER LPAREN reciever_parameter formal_parameter_list RPAREN dim •

    $default  reduce using rule 341 (method_declarator)


State 605

  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_opt SUPER • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 616


State 606

  367 explicit_constructor_invocation: primary DOT type_arguments_opt SUPER • LPAREN argument_list_optional RPAREN SEMICOLON

    LPAREN  shift, and go to state 617


State 607

  364 explicit_constructor_invocation: type_arguments_opt THIS LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 618


State 608

  365 explicit_constructor_invocation: type_arguments_opt SUPER LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 619


State 609

  379 variable_init: variable_init COMMA variable_initializer •

    $default  reduce using rule 379 (variable_init)


State 610

   65 method_invocation: module_or_package_or_expression_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional • RPAREN

    RPAREN  shift, and go to state 620


State 611

   85 if_then_else_statement: if LPAREN expression RPAREN • if_footer
   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN • statement_no_short_if ELSE statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 511
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 512
    statement_without_trailing_substatement  go to state 513
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if_footer                                go to state 514
    statement_no_short_if                    go to state 621
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 521
    while_statement                          go to state 144
    while                                    go to state 522
    for_statement                            go to state 146
    for                                      go to state 523
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 612

   95 while_statement_no_short_if: while LPAREN expression RPAREN • statement_no_short_if
  101 while_statement: while LPAREN expression RPAREN • statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 511
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 524
    statement_without_trailing_substatement  go to state 513
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    statement_no_short_if                    go to state 622
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 521
    while_statement                          go to state 144
    while                                    go to state 522
    for_statement                            go to state 146
    for                                      go to state 523
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 613

   98 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON • expression RPAREN statement_no_short_if

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 623
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 614

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
  103 for_statement: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression_opt                        go to state 624
    expression                            go to state 527
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 615

  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 101
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 625
    statement_without_trailing_substatement  go to state 134
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    if                                       go to state 143
    while_statement                          go to state 144
    while                                    go to state 145
    for_statement                            go to state 146
    for                                      go to state 147
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 616

  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_opt SUPER LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 626
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 617

  367 explicit_constructor_invocation: primary DOT type_arguments_opt SUPER LPAREN • argument_list_optional RPAREN SEMICOLON

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    RPAREN       reduce using rule 67 (argument_list_optional)
    RPAREN       [reduce using rule 70 (method_reference)]
    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    argument_list_optional                go to state 627
    argument_list                         go to state 369
    method_reference                      go to state 141
    expression                            go to state 370
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 618

  364 explicit_constructor_invocation: type_arguments_opt THIS LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 628


State 619

  365 explicit_constructor_invocation: type_arguments_opt SUPER LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 629


State 620

   65 method_invocation: module_or_package_or_expression_name DOT SUPER DOT type_arguments IDENTIFIER LPAREN argument_list_optional RPAREN •

    $default  reduce using rule 65 (method_invocation)


State 621

   87 if_footer: statement_no_short_if • else statement
   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if • ELSE statement_no_short_if

    ELSE  shift, and go to state 630

    else  go to state 564


State 622

   95 while_statement_no_short_if: while LPAREN expression RPAREN statement_no_short_if •

    $default  reduce using rule 95 (while_statement_no_short_if)


State 623

   98 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression • RPAREN statement_no_short_if

    RPAREN  shift, and go to state 631


State 624

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement_no_short_if
  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement

    SEMICOLON  shift, and go to state 632


State 625

  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement •

    $default  reduce using rule 103 (for_statement)


State 626

  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_opt SUPER LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 633


State 627

  367 explicit_constructor_invocation: primary DOT type_arguments_opt SUPER LPAREN argument_list_optional • RPAREN SEMICOLON

    RPAREN  shift, and go to state 634


State 628

  364 explicit_constructor_invocation: type_arguments_opt THIS LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 364 (explicit_constructor_invocation)


State 629

  365 explicit_constructor_invocation: type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 365 (explicit_constructor_invocation)


State 630

   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE • statement_no_short_if
  100 else: ELSE •

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    DOUBLE_COLON  reduce using rule 70 (method_reference)
    DOUBLE_COLON  [reduce using rule 100 (else)]
    LPAREN        [reduce using rule 100 (else)]
    IDENTIFIER    [reduce using rule 100 (else)]
    DOT           reduce using rule 70 (method_reference)
    DOT           [reduce using rule 100 (else)]
    SEMICOLON     [reduce using rule 100 (else)]
    RETURN        [reduce using rule 100 (else)]
    TRY           [reduce using rule 100 (else)]
    SYNCHRONIZED  [reduce using rule 100 (else)]
    THROW         [reduce using rule 100 (else)]
    ASSERT        [reduce using rule 100 (else)]
    BREAK         [reduce using rule 100 (else)]
    CONTINUE      [reduce using rule 100 (else)]
    IF            [reduce using rule 100 (else)]
    WHILE         [reduce using rule 100 (else)]
    FOR           [reduce using rule 100 (else)]
    LSPAR         reduce using rule 70 (method_reference)
    LSPAR         [reduce using rule 100 (else)]
    PLUS_PLUS     [reduce using rule 70 (method_reference)]
    PLUS_PLUS     [reduce using rule 100 (else)]
    MINUS_MINUS   [reduce using rule 70 (method_reference)]
    MINUS_MINUS   [reduce using rule 100 (else)]
    THIS          [reduce using rule 100 (else)]
    SUPER         [reduce using rule 100 (else)]
    INT           [reduce using rule 100 (else)]
    LONG          [reduce using rule 100 (else)]
    SHORT         [reduce using rule 100 (else)]
    BYTE          [reduce using rule 100 (else)]
    FLOAT         [reduce using rule 100 (else)]
    DOUBLE        [reduce using rule 100 (else)]
    BOOLEAN       [reduce using rule 100 (else)]
    VOID          [reduce using rule 100 (else)]
    LMPARA        [reduce using rule 100 (else)]
    LITERAL       [reduce using rule 100 (else)]
    NEW           [reduce using rule 100 (else)]
    $default      reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 637
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 631

   98 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression RPAREN • statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 641
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 632

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement_no_short_if
  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    RPAREN       reduce using rule 114 (for_update_opt)
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    statement_expression                  go to state 375
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    statement_expression_list             go to state 597
    for_update_opt                        go to state 642
    for_update                            go to state 599
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 633

  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 643


State 634

  367 explicit_constructor_invocation: primary DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 644


State 635

    7 type_identifier: IDENTIFIER •
    9 unqualified_method_identifier: IDENTIFIER •
   93 labeled_statement_no_short_if: IDENTIFIER • COLON statement_no_short_if

    COLON  shift, and go to state 645

    LPAREN    reduce using rule 9 (unqualified_method_identifier)
    $default  reduce using rule 7 (type_identifier)


State 636

   88 statement_no_short_if: statement_without_trailing_substatement •

    $default  reduce using rule 88 (statement_no_short_if)


State 637

   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if •

    $default  reduce using rule 94 (if_then_else_statement_no_short_if)


State 638

   94 if_then_else_statement_no_short_if: if • LPAREN expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN  shift, and go to state 646


State 639

   95 while_statement_no_short_if: while • LPAREN expression RPAREN statement_no_short_if

    LPAREN  shift, and go to state 647


State 640

   96 for_statement_no_short_if: for • LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
   98 enhanced_for_statement_no_short_if: for • LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if

    LPAREN  shift, and go to state 648


State 641

   98 enhanced_for_statement_no_short_if: for LPAREN local_variable_declaration COLON expression RPAREN statement_no_short_if •

    $default  reduce using rule 98 (enhanced_for_statement_no_short_if)


State 642

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement_no_short_if
  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement

    RPAREN  shift, and go to state 649


State 643

  366 explicit_constructor_invocation: module_or_package_or_expression_name DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 366 (explicit_constructor_invocation)


State 644

  367 explicit_constructor_invocation: primary DOT type_arguments_opt SUPER LPAREN argument_list_optional RPAREN SEMICOLON •

    $default  reduce using rule 367 (explicit_constructor_invocation)


State 645

   93 labeled_statement_no_short_if: IDENTIFIER COLON • statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 591
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 646

   94 if_then_else_statement_no_short_if: if LPAREN • expression RPAREN statement_no_short_if ELSE statement_no_short_if

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 650
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 647

   95 while_statement_no_short_if: while LPAREN • expression RPAREN statement_no_short_if

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression                            go to state 651
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 648

   96 for_statement_no_short_if: for LPAREN • for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if
   98 enhanced_for_statement_no_short_if: for LPAREN • local_variable_declaration COLON expression RPAREN statement_no_short_if

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    SEMICOLON    reduce using rule 106 (for_init_opt)
    FINAL        reduce using rule 27 (variable_modifiers)
    VAR          reduce using rule 27 (variable_modifiers)
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    INT          [reduce using rule 27 (variable_modifiers)]
    LONG         [reduce using rule 27 (variable_modifiers)]
    SHORT        [reduce using rule 27 (variable_modifiers)]
    BYTE         [reduce using rule 27 (variable_modifiers)]
    FLOAT        [reduce using rule 27 (variable_modifiers)]
    DOUBLE       [reduce using rule 27 (variable_modifiers)]
    BOOLEAN      [reduce using rule 27 (variable_modifiers)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    local_variable_declaration            go to state 595
    variable_modifiers                    go to state 132
    statement_expression                  go to state 375
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    for_init_opt                          go to state 652
    for_init                              go to state 377
    statement_expression_list             go to state 378
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 649

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement_no_short_if
  103 for_statement: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 511
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement                                go to state 625
    statement_without_trailing_substatement  go to state 513
    empty_statement                          go to state 135
    labeled_statement                        go to state 136
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    if_then_else_statement                   go to state 142
    statement_no_short_if                    go to state 653
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 521
    while_statement                          go to state 144
    while                                    go to state 522
    for_statement                            go to state 146
    for                                      go to state 523
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 650

   94 if_then_else_statement_no_short_if: if LPAREN expression • RPAREN statement_no_short_if ELSE statement_no_short_if

    RPAREN  shift, and go to state 654


State 651

   95 while_statement_no_short_if: while LPAREN expression • RPAREN statement_no_short_if

    RPAREN  shift, and go to state 655


State 652

   96 for_statement_no_short_if: for LPAREN for_init_opt • SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if

    SEMICOLON  shift, and go to state 656


State 653

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if •

    $default  reduce using rule 96 (for_statement_no_short_if)


State 654

   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN • statement_no_short_if ELSE statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 657
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 655

   95 while_statement_no_short_if: while LPAREN expression RPAREN • statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 622
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 656

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON • expression_opt SEMICOLON for_update_opt RPAREN statement_no_short_if

    LPAREN       shift, and go to state 193
    IDENTIFIER   shift, and go to state 194
    PLUS         shift, and go to state 195
    MINUS        shift, and go to state 196
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    TILDE        shift, and go to state 197
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    NOT          shift, and go to state 198
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 199

    PLUS         [reduce using rule 70 (method_reference)]
    MINUS        [reduce using rule 70 (method_reference)]
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    method_invocation                     go to state 200
    method_reference                      go to state 141
    expression_opt                        go to state 658
    expression                            go to state 527
    lambda_expression                     go to state 202
    lambda_parameters                     go to state 203
    assignment_expression                 go to state 204
    assignment                            go to state 205
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    conditional_expression                go to state 206
    conditional_or_expression             go to state 207
    conditional_and_expression            go to state 208
    inclusive_or_expression               go to state 209
    exclusive_or_expression               go to state 210
    and_expression                        go to state 211
    equality_expression                   go to state 212
    relational_expression                 go to state 213
    shift_expression                      go to state 214
    additive_expression                   go to state 215
    multiplicative_expression             go to state 216
    unary_expression                      go to state 217
    pre_increment_expression              go to state 218
    pre_decrement_expression              go to state 219
    post_increment_expression             go to state 220
    post_decrement_expression             go to state 221
    unary_expression_not_plus_minus       go to state 222
    postfix_expression                    go to state 223
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 657

   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if • ELSE statement_no_short_if

    ELSE  shift, and go to state 659


State 658

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt • SEMICOLON for_update_opt RPAREN statement_no_short_if

    SEMICOLON  shift, and go to state 660


State 659

   94 if_then_else_statement_no_short_if: if LPAREN expression RPAREN statement_no_short_if ELSE • statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 637
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62


State 660

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON • for_update_opt RPAREN statement_no_short_if

    LPAREN       shift, and go to state 100
    IDENTIFIER   shift, and go to state 228
    PLUS_PLUS    shift, and go to state 113
    MINUS_MINUS  shift, and go to state 114
    THIS         shift, and go to state 115
    SUPER        shift, and go to state 116
    INT          shift, and go to state 45
    LONG         shift, and go to state 46
    SHORT        shift, and go to state 47
    BYTE         shift, and go to state 48
    FLOAT        shift, and go to state 49
    DOUBLE       shift, and go to state 50
    BOOLEAN      shift, and go to state 117
    VOID         shift, and go to state 118
    LITERAL      shift, and go to state 119
    NEW          shift, and go to state 120

    RPAREN       reduce using rule 114 (for_update_opt)
    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name  go to state 121
    type_identifier                       go to state 122
    method_name                           go to state 123
    unqualified_method_identifier         go to state 124
    statement_expression                  go to state 375
    class_instance_creation_expression    go to state 139
    method_invocation                     go to state 140
    method_reference                      go to state 141
    statement_expression_list             go to state 597
    for_update_opt                        go to state 661
    for_update                            go to state 599
    assignment                            go to state 159
    left_hand_side                        go to state 160
    field_access                          go to state 161
    array_access                          go to state 162
    pre_increment_expression              go to state 163
    pre_decrement_expression              go to state 164
    post_increment_expression             go to state 165
    post_decrement_expression             go to state 166
    postfix_expression                    go to state 167
    primary                               go to state 168
    array_creation_expression             go to state 169
    primary_no_new_array                  go to state 170
    class_literal                         go to state 171
    numeric_type                          go to state 172
    integral_type                         go to state 56
    floating_point_type                   go to state 57
    boolean                               go to state 58
    class_type                            go to state 174
    array_type                            go to state 175
    primitive_type                        go to state 62


State 661

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt • RPAREN statement_no_short_if

    RPAREN  shift, and go to state 662


State 662

   96 for_statement_no_short_if: for LPAREN for_init_opt SEMICOLON expression_opt SEMICOLON for_update_opt RPAREN • statement_no_short_if

    LPAREN        shift, and go to state 100
    IDENTIFIER    shift, and go to state 635
    SEMICOLON     shift, and go to state 102
    RETURN        shift, and go to state 103
    TRY           shift, and go to state 104
    SYNCHRONIZED  shift, and go to state 105
    THROW         shift, and go to state 106
    ASSERT        shift, and go to state 107
    BREAK         shift, and go to state 108
    CONTINUE      shift, and go to state 109
    IF            shift, and go to state 110
    WHILE         shift, and go to state 111
    FOR           shift, and go to state 112
    PLUS_PLUS     shift, and go to state 113
    MINUS_MINUS   shift, and go to state 114
    THIS          shift, and go to state 115
    SUPER         shift, and go to state 116
    INT           shift, and go to state 45
    LONG          shift, and go to state 46
    SHORT         shift, and go to state 47
    BYTE          shift, and go to state 48
    FLOAT         shift, and go to state 49
    DOUBLE        shift, and go to state 50
    BOOLEAN       shift, and go to state 117
    VOID          shift, and go to state 118
    LMPARA        shift, and go to state 70
    LITERAL       shift, and go to state 119
    NEW           shift, and go to state 120

    PLUS_PLUS    [reduce using rule 70 (method_reference)]
    MINUS_MINUS  [reduce using rule 70 (method_reference)]
    $default     reduce using rule 70 (method_reference)

    module_or_package_or_expression_name     go to state 121
    type_identifier                          go to state 122
    method_name                              go to state 123
    unqualified_method_identifier            go to state 124
    block                                    go to state 125
    statement_without_trailing_substatement  go to state 636
    empty_statement                          go to state 135
    expression_statement                     go to state 137
    statement_expression                     go to state 138
    class_instance_creation_expression       go to state 139
    method_invocation                        go to state 140
    method_reference                         go to state 141
    statement_no_short_if                    go to state 653
    labeled_statement_no_short_if            go to state 516
    if_then_else_statement_no_short_if       go to state 517
    while_statement_no_short_if              go to state 518
    for_statement_no_short_if                go to state 519
    enhanced_for_statement_no_short_if       go to state 520
    if                                       go to state 638
    while                                    go to state 639
    for                                      go to state 640
    assert_statement                         go to state 148
    assert                                   go to state 149
    break_statement                          go to state 150
    break                                    go to state 151
    continue_statement                       go to state 152
    continue                                 go to state 153
    return_statement                         go to state 154
    return                                   go to state 155
    synchronized_statement                   go to state 156
    throw_statement                          go to state 157
    try_statement                            go to state 158
    assignment                               go to state 159
    left_hand_side                           go to state 160
    field_access                             go to state 161
    array_access                             go to state 162
    pre_increment_expression                 go to state 163
    pre_decrement_expression                 go to state 164
    post_increment_expression                go to state 165
    post_decrement_expression                go to state 166
    postfix_expression                       go to state 167
    primary                                  go to state 168
    array_creation_expression                go to state 169
    primary_no_new_array                     go to state 170
    class_literal                            go to state 171
    numeric_type                             go to state 172
    integral_type                            go to state 56
    floating_point_type                      go to state 57
    boolean                                  go to state 58
    class_type                               go to state 174
    array_type                               go to state 175
    primitive_type                           go to state 62
